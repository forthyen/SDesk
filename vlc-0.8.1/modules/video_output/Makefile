# Makefile.in generated by automake 1.7.9 from Makefile.am.
# modules/video_output/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/vlc
pkglibdir = $(libdir)/vlc
pkgincludedir = $(includedir)/vlc
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = ../../autotools/install-sh -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = mipsel-unknown-linux-gnu
host_triplet = mipsel-unknown-linux-gnu
target_triplet = mipsel-unknown-linux-gnu
ACLOCAL = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run aclocal-1.7
ALIASES = 
ALLOCA = 
ALL_LINGUAS = da de en_GB es fr hu it ja nl no pl pt_BR ru sv
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run tar
AR = ar
ARCH = mipsel
ARTS_CONFIG = 
ASM = 
AUTOCONF = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run automake-1.7
AWK = gawk
BUILD_DIRENT_FALSE = 
BUILD_DIRENT_TRUE = #
BUILD_GETOPT_FALSE = 
BUILD_GETOPT_TRUE = #
BUILD_INCLUDED_LIBINTL = no
BUILD_INTL_FALSE = 
BUILD_INTL_TRUE = #
BUILD_MOZILLA_FALSE = 
BUILD_MOZILLA_TRUE = #
CACA_CONFIG = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wsign-compare -Wall -I/usr/tools/roku/include -I/usr/include -I/usr/local/include -I/usr/local/include/roku -pipe
CORBA_CFLAGS = 
CORBA_LIBS = 
CPP = gcc -E
CPPFLAGS =  -DSYS_LINUX -I$(top_srcdir)/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wsign-compare -Wsign-compare -Wall -I/usr/tools/roku/include -I/usr/include -I/usr/local/include -I/usr/local/include/roku -pipe
CYGPATH = 
CYGPATH_W = echo
DATADIRNAME = share
DATA_PATH = /share/vlc
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DVDNAV_CONFIG = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_CORBA_FALSE = 
ENABLE_CORBA_TRUE = #
ESD_CONFIG = 
EXEEXT = 
FFMPEG_CONFIG = 
FREETYPE_CONFIG = 
FRIBIDI_CONFIG = 
GENCAT = gencat
GLIBC21 = yes
GMSGFMT = /usr/bin/msgfmt
GTK2_CFLAGS = 
GTK2_LIBS = 
HAL_CFLAGS = 
HAL_LIBS = 
HAVE_BEOS_FALSE = 
HAVE_BEOS_TRUE = #
HAVE_BUILTINS_FALSE = #
HAVE_BUILTINS_TRUE = 
HAVE_DARWIN_FALSE = 
HAVE_DARWIN_TRUE = #
HAVE_PLUGINS_FALSE = 
HAVE_PLUGINS_TRUE = #
HAVE_WIN32_FALSE = 
HAVE_WIN32_TRUE = #
INCLUDES = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
LD = ld
LDFLAGS = -L/usr/tools/roku/mipsel-linux/lib -L/lib -L/usr/local/lib -Wl,-rpath-link -Wl,/usr/local/lib
LIBCDDB_CFLAGS = 
LIBCDDB_LIBS = 
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBEXT = .so
LIBGNUTLS_CONFIG = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run makeinfo
MKINSTALLDIRS = autotools/mkinstalldirs
MOC = 
MOZILLA_CONFIG = 
MSGFMT = /usr/bin/msgfmt
MSGMERGE = :
OBJC = g++
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -Wsign-compare -Wall  -pipe
OBJEXT = o
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 0.8.1
PACKAGE_TARNAME = vlc
PACKAGE_VERSION = 0.8.1
PATH_SEPARATOR = :
PKG_CONFIG = no
PLUGIN_PATH = /lib/vlc
POSUB = po
RANLIB = ranlib
SDL11_CONFIG = 
SDL12_CONFIG = 
SDL_CONFIG = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SVG_CFLAGS = 
SVG_LIBS = 
SYS = linux
UNTRUE_FALSE = 
UNTRUE_TRUE = #
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 0.8.1
VLC_CONFIG = top_builddir="$(top_builddir)" $(top_builddir)/vlc-config
WINDRES = 
WX_CONFIG = 
XGETTEXT = : --keyword=_NS --keyword=_ANS
XML2_CONFIG = 
XPIDL = /usr/lib/mozilla/xpidl
XPIDL_INCL = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_CYGPATH = 
ac_ct_LD = ld
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_ct_WINDRES = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__fastdepOBJC_FALSE = #
am__fastdepOBJC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = mipsel-unknown-linux-gnu
build_alias = 
build_cpu = mipsel
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = mipsel-unknown-linux-gnu
host_alias = 
host_cpu = mipsel
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = mipsel-unknown-linux-gnu
target_alias = 
target_cpu = mipsel
target_os = linux-gnu
target_vendor = unknown

NULL = 

libvlc_LIBRARIES = $(Laab) $(Laapic) $(Lcacab) $(Lcacapic) $(Lfbb) $(Lfbpic) $(Lggib) $(Lggipic) $(Lglideb) $(Lglidepic) $(Lvout_sdlb) $(Lvout_sdlpic) $(Lsvgalibb) $(Lsvgalibpic) $(Lwingdib) $(Lwingdipic) $(Lmgab) $(Lmgapic) $(Lhd1000vb) $(Lhd1000vpic) $(Lsnapshotb) $(Lsnapshotpic) $(Lopenglb) $(Lopenglpic)
noinst_LIBRARIES = $(Laap) $(Lcacap) $(Lfbp) $(Lggip) $(Lglidep) $(Lvout_sdlp) $(Lsvgalibp) $(Lwingdip) $(Lmgap) $(Lhd1000vp) $(Lsnapshotp) $(Lopenglp)
noinst_HEADERS = 
EXTRA_DIST = Modules.am
BUILT_SOURCES = 
SUBDIRS = directx qte x11
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/video_output
SOURCES_aa = aa.c
SOURCES_caca = caca.c
SOURCES_fb = fb.c
SOURCES_ggi = ggi.c
SOURCES_glide = glide.c
SOURCES_vout_sdl = sdl.c
SOURCES_svgalib = svgalib.c
SOURCES_wingdi = wingdi.c
SOURCES_mga = mga.c
SOURCES_hd1000v = hd1000v.cpp
SOURCES_snapshot = snapshot.c
SOURCES_opengl = opengl.c

# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
##pic = no
pic = no


# The aa plugin
#Laap = libaa_plugin.a
#Daap = libaa_plugin$(LIBEXT)
#Laab = libaa.a
#Laapic = libaa_pic.a

libaa_plugin_a_SOURCES = $(SOURCES_aa)
libaa_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin aa`
libaa_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin aa`
libaa_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin aa`

libaa_pic_a_SOURCES = $(SOURCES_aa)
libaa_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic aa`
libaa_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic aa`
libaa_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic aa`

libaa_a_SOURCES = $(SOURCES_aa)
libaa_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin aa`
libaa_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin aa`
libaa_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin aa`
libaa_DATA = $(Daap)

libaadir = $(libdir)/vlc/


# The caca plugin
#Lcacap = libcaca_plugin.a
#Dcacap = libcaca_plugin$(LIBEXT)
#Lcacab = libcaca.a
#Lcacapic = libcaca_pic.a

libcaca_plugin_a_SOURCES = $(SOURCES_caca)
libcaca_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin caca`
libcaca_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin caca`
libcaca_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin caca`

libcaca_pic_a_SOURCES = $(SOURCES_caca)
libcaca_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic caca`
libcaca_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic caca`
libcaca_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic caca`

libcaca_a_SOURCES = $(SOURCES_caca)
libcaca_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin caca`
libcaca_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin caca`
libcaca_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin caca`
libcaca_DATA = $(Dcacap)

libcacadir = $(libdir)/vlc/


# The fb plugin
#Lfbp = libfb_plugin.a
#Dfbp = libfb_plugin$(LIBEXT)
#Lfbb = libfb.a
#Lfbpic = libfb_pic.a

libfb_plugin_a_SOURCES = $(SOURCES_fb)
libfb_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin fb`
libfb_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin fb`
libfb_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin fb`

libfb_pic_a_SOURCES = $(SOURCES_fb)
libfb_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic fb`
libfb_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic fb`
libfb_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic fb`

libfb_a_SOURCES = $(SOURCES_fb)
libfb_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin fb`
libfb_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin fb`
libfb_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin fb`
libfb_DATA = $(Dfbp)

libfbdir = $(libdir)/vlc/


# The ggi plugin
#Lggip = libggi_plugin.a
#Dggip = libggi_plugin$(LIBEXT)
#Lggib = libggi.a
#Lggipic = libggi_pic.a

libggi_plugin_a_SOURCES = $(SOURCES_ggi)
libggi_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin ggi`
libggi_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin ggi`
libggi_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin ggi`

libggi_pic_a_SOURCES = $(SOURCES_ggi)
libggi_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic ggi`
libggi_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic ggi`
libggi_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic ggi`

libggi_a_SOURCES = $(SOURCES_ggi)
libggi_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin ggi`
libggi_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin ggi`
libggi_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin ggi`
libggi_DATA = $(Dggip)

libggidir = $(libdir)/vlc/


# The glide plugin
#Lglidep = libglide_plugin.a
#Dglidep = libglide_plugin$(LIBEXT)
#Lglideb = libglide.a
#Lglidepic = libglide_pic.a

libglide_plugin_a_SOURCES = $(SOURCES_glide)
libglide_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin glide`
libglide_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin glide`
libglide_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin glide`

libglide_pic_a_SOURCES = $(SOURCES_glide)
libglide_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic glide`
libglide_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic glide`
libglide_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic glide`

libglide_a_SOURCES = $(SOURCES_glide)
libglide_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin glide`
libglide_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin glide`
libglide_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin glide`
libglide_DATA = $(Dglidep)

libglidedir = $(libdir)/vlc/


# The vout_sdl plugin
#Lvout_sdlp = libvout_sdl_plugin.a
#Dvout_sdlp = libvout_sdl_plugin$(LIBEXT)
#Lvout_sdlb = libvout_sdl.a
#Lvout_sdlpic = libvout_sdl_pic.a

libvout_sdl_plugin_a_SOURCES = $(SOURCES_vout_sdl)
libvout_sdl_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin vout_sdl`
libvout_sdl_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin vout_sdl`
libvout_sdl_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin vout_sdl`

libvout_sdl_pic_a_SOURCES = $(SOURCES_vout_sdl)
libvout_sdl_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic vout_sdl`
libvout_sdl_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic vout_sdl`
libvout_sdl_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic vout_sdl`

libvout_sdl_a_SOURCES = $(SOURCES_vout_sdl)
libvout_sdl_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin vout_sdl`
libvout_sdl_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin vout_sdl`
libvout_sdl_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin vout_sdl`
libvout_sdl_DATA = $(Dvout_sdlp)

libvout_sdldir = $(libdir)/vlc/


# The svgalib plugin
#Lsvgalibp = libsvgalib_plugin.a
#Dsvgalibp = libsvgalib_plugin$(LIBEXT)
#Lsvgalibb = libsvgalib.a
#Lsvgalibpic = libsvgalib_pic.a

libsvgalib_plugin_a_SOURCES = $(SOURCES_svgalib)
libsvgalib_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin svgalib`
libsvgalib_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin svgalib`
libsvgalib_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin svgalib`

libsvgalib_pic_a_SOURCES = $(SOURCES_svgalib)
libsvgalib_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic svgalib`
libsvgalib_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic svgalib`
libsvgalib_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic svgalib`

libsvgalib_a_SOURCES = $(SOURCES_svgalib)
libsvgalib_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin svgalib`
libsvgalib_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin svgalib`
libsvgalib_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin svgalib`
libsvgalib_DATA = $(Dsvgalibp)

libsvgalibdir = $(libdir)/vlc/


# The wingdi plugin
#Lwingdip = libwingdi_plugin.a
#Dwingdip = libwingdi_plugin$(LIBEXT)
#Lwingdib = libwingdi.a
#Lwingdipic = libwingdi_pic.a

libwingdi_plugin_a_SOURCES = $(SOURCES_wingdi)
libwingdi_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin wingdi`
libwingdi_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin wingdi`
libwingdi_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin wingdi`

libwingdi_pic_a_SOURCES = $(SOURCES_wingdi)
libwingdi_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic wingdi`
libwingdi_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic wingdi`
libwingdi_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic wingdi`

libwingdi_a_SOURCES = $(SOURCES_wingdi)
libwingdi_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin wingdi`
libwingdi_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin wingdi`
libwingdi_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin wingdi`
libwingdi_DATA = $(Dwingdip)

libwingdidir = $(libdir)/vlc/


# The mga plugin
#Lmgap = libmga_plugin.a
#Dmgap = libmga_plugin$(LIBEXT)
#Lmgab = libmga.a
#Lmgapic = libmga_pic.a

libmga_plugin_a_SOURCES = $(SOURCES_mga)
libmga_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin mga`
libmga_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin mga`
libmga_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin mga`

libmga_pic_a_SOURCES = $(SOURCES_mga)
libmga_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic mga`
libmga_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic mga`
libmga_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic mga`

libmga_a_SOURCES = $(SOURCES_mga)
libmga_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin mga`
libmga_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin mga`
libmga_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin mga`
libmga_DATA = $(Dmgap)

libmgadir = $(libdir)/vlc/


# The hd1000v plugin
#Lhd1000vp = libhd1000v_plugin.a
#Dhd1000vp = libhd1000v_plugin$(LIBEXT)
#Lhd1000vb = libhd1000v.a
#Lhd1000vpic = libhd1000v_pic.a

libhd1000v_plugin_a_SOURCES = $(SOURCES_hd1000v)
libhd1000v_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin hd1000v`
libhd1000v_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin hd1000v`
libhd1000v_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin hd1000v`

libhd1000v_pic_a_SOURCES = $(SOURCES_hd1000v)
libhd1000v_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic hd1000v`
libhd1000v_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic hd1000v`
libhd1000v_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic hd1000v`

libhd1000v_a_SOURCES = $(SOURCES_hd1000v)
libhd1000v_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin hd1000v`
libhd1000v_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin hd1000v`
libhd1000v_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin hd1000v`
libhd1000v_DATA = $(Dhd1000vp)

libhd1000vdir = $(libdir)/vlc/


# The snapshot plugin
#Lsnapshotp = libsnapshot_plugin.a
#Dsnapshotp = libsnapshot_plugin$(LIBEXT)
#Lsnapshotb = libsnapshot.a
#Lsnapshotpic = libsnapshot_pic.a

libsnapshot_plugin_a_SOURCES = $(SOURCES_snapshot)
libsnapshot_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin snapshot`
libsnapshot_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin snapshot`
libsnapshot_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin snapshot`

libsnapshot_pic_a_SOURCES = $(SOURCES_snapshot)
libsnapshot_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic snapshot`
libsnapshot_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic snapshot`
libsnapshot_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic snapshot`

libsnapshot_a_SOURCES = $(SOURCES_snapshot)
libsnapshot_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin snapshot`
libsnapshot_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin snapshot`
libsnapshot_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin snapshot`
libsnapshot_DATA = $(Dsnapshotp)

libsnapshotdir = $(libdir)/vlc/


# The opengl plugin
#Lopenglp = libopengl_plugin.a
#Dopenglp = libopengl_plugin$(LIBEXT)
#Lopenglb = libopengl.a
#Lopenglpic = libopengl_pic.a

libopengl_plugin_a_SOURCES = $(SOURCES_opengl)
libopengl_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin opengl`
libopengl_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin opengl`
libopengl_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin opengl`

libopengl_pic_a_SOURCES = $(SOURCES_opengl)
libopengl_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic opengl`
libopengl_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic opengl`
libopengl_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic opengl`

libopengl_a_SOURCES = $(SOURCES_opengl)
libopengl_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin opengl`
libopengl_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin opengl`
libopengl_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin opengl`
libopengl_DATA = $(Dopenglp)

libopengldir = $(libdir)/vlc/
subdir = modules/video_output
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/autotools/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(libvlc_LIBRARIES) $(noinst_LIBRARIES)

libaa_a_AR = $(AR) cru
libaa_a_LIBADD =
am__objects_1 = libaa_a-aa.$(OBJEXT)
am_libaa_a_OBJECTS = $(am__objects_1)
libaa_a_OBJECTS = $(am_libaa_a_OBJECTS)
libaa_pic_a_AR = $(AR) cru
libaa_pic_a_LIBADD =
am__objects_2 = libaa_pic_a-aa.$(OBJEXT)
am_libaa_pic_a_OBJECTS = $(am__objects_2)
libaa_pic_a_OBJECTS = $(am_libaa_pic_a_OBJECTS)
libaa_plugin_a_AR = $(AR) cru
libaa_plugin_a_LIBADD =
am__objects_3 = libaa_plugin_a-aa.$(OBJEXT)
am_libaa_plugin_a_OBJECTS = $(am__objects_3)
libaa_plugin_a_OBJECTS = $(am_libaa_plugin_a_OBJECTS)
libcaca_a_AR = $(AR) cru
libcaca_a_LIBADD =
am__objects_4 = libcaca_a-caca.$(OBJEXT)
am_libcaca_a_OBJECTS = $(am__objects_4)
libcaca_a_OBJECTS = $(am_libcaca_a_OBJECTS)
libcaca_pic_a_AR = $(AR) cru
libcaca_pic_a_LIBADD =
am__objects_5 = libcaca_pic_a-caca.$(OBJEXT)
am_libcaca_pic_a_OBJECTS = $(am__objects_5)
libcaca_pic_a_OBJECTS = $(am_libcaca_pic_a_OBJECTS)
libcaca_plugin_a_AR = $(AR) cru
libcaca_plugin_a_LIBADD =
am__objects_6 = libcaca_plugin_a-caca.$(OBJEXT)
am_libcaca_plugin_a_OBJECTS = $(am__objects_6)
libcaca_plugin_a_OBJECTS = $(am_libcaca_plugin_a_OBJECTS)
libfb_a_AR = $(AR) cru
libfb_a_LIBADD =
am__objects_7 = libfb_a-fb.$(OBJEXT)
am_libfb_a_OBJECTS = $(am__objects_7)
libfb_a_OBJECTS = $(am_libfb_a_OBJECTS)
libfb_pic_a_AR = $(AR) cru
libfb_pic_a_LIBADD =
am__objects_8 = libfb_pic_a-fb.$(OBJEXT)
am_libfb_pic_a_OBJECTS = $(am__objects_8)
libfb_pic_a_OBJECTS = $(am_libfb_pic_a_OBJECTS)
libfb_plugin_a_AR = $(AR) cru
libfb_plugin_a_LIBADD =
am__objects_9 = libfb_plugin_a-fb.$(OBJEXT)
am_libfb_plugin_a_OBJECTS = $(am__objects_9)
libfb_plugin_a_OBJECTS = $(am_libfb_plugin_a_OBJECTS)
libggi_a_AR = $(AR) cru
libggi_a_LIBADD =
am__objects_10 = libggi_a-ggi.$(OBJEXT)
am_libggi_a_OBJECTS = $(am__objects_10)
libggi_a_OBJECTS = $(am_libggi_a_OBJECTS)
libggi_pic_a_AR = $(AR) cru
libggi_pic_a_LIBADD =
am__objects_11 = libggi_pic_a-ggi.$(OBJEXT)
am_libggi_pic_a_OBJECTS = $(am__objects_11)
libggi_pic_a_OBJECTS = $(am_libggi_pic_a_OBJECTS)
libggi_plugin_a_AR = $(AR) cru
libggi_plugin_a_LIBADD =
am__objects_12 = libggi_plugin_a-ggi.$(OBJEXT)
am_libggi_plugin_a_OBJECTS = $(am__objects_12)
libggi_plugin_a_OBJECTS = $(am_libggi_plugin_a_OBJECTS)
libglide_a_AR = $(AR) cru
libglide_a_LIBADD =
am__objects_13 = libglide_a-glide.$(OBJEXT)
am_libglide_a_OBJECTS = $(am__objects_13)
libglide_a_OBJECTS = $(am_libglide_a_OBJECTS)
libglide_pic_a_AR = $(AR) cru
libglide_pic_a_LIBADD =
am__objects_14 = libglide_pic_a-glide.$(OBJEXT)
am_libglide_pic_a_OBJECTS = $(am__objects_14)
libglide_pic_a_OBJECTS = $(am_libglide_pic_a_OBJECTS)
libglide_plugin_a_AR = $(AR) cru
libglide_plugin_a_LIBADD =
am__objects_15 = libglide_plugin_a-glide.$(OBJEXT)
am_libglide_plugin_a_OBJECTS = $(am__objects_15)
libglide_plugin_a_OBJECTS = $(am_libglide_plugin_a_OBJECTS)
libhd1000v_a_AR = $(AR) cru
libhd1000v_a_LIBADD =
am__objects_16 = libhd1000v_a-hd1000v.$(OBJEXT)
am_libhd1000v_a_OBJECTS = $(am__objects_16)
libhd1000v_a_OBJECTS = $(am_libhd1000v_a_OBJECTS)
libhd1000v_pic_a_AR = $(AR) cru
libhd1000v_pic_a_LIBADD =
am__objects_17 = libhd1000v_pic_a-hd1000v.$(OBJEXT)
am_libhd1000v_pic_a_OBJECTS = $(am__objects_17)
libhd1000v_pic_a_OBJECTS = $(am_libhd1000v_pic_a_OBJECTS)
libhd1000v_plugin_a_AR = $(AR) cru
libhd1000v_plugin_a_LIBADD =
am__objects_18 = libhd1000v_plugin_a-hd1000v.$(OBJEXT)
am_libhd1000v_plugin_a_OBJECTS = $(am__objects_18)
libhd1000v_plugin_a_OBJECTS = $(am_libhd1000v_plugin_a_OBJECTS)
libmga_a_AR = $(AR) cru
libmga_a_LIBADD =
am__objects_19 = libmga_a-mga.$(OBJEXT)
am_libmga_a_OBJECTS = $(am__objects_19)
libmga_a_OBJECTS = $(am_libmga_a_OBJECTS)
libmga_pic_a_AR = $(AR) cru
libmga_pic_a_LIBADD =
am__objects_20 = libmga_pic_a-mga.$(OBJEXT)
am_libmga_pic_a_OBJECTS = $(am__objects_20)
libmga_pic_a_OBJECTS = $(am_libmga_pic_a_OBJECTS)
libmga_plugin_a_AR = $(AR) cru
libmga_plugin_a_LIBADD =
am__objects_21 = libmga_plugin_a-mga.$(OBJEXT)
am_libmga_plugin_a_OBJECTS = $(am__objects_21)
libmga_plugin_a_OBJECTS = $(am_libmga_plugin_a_OBJECTS)
libopengl_a_AR = $(AR) cru
libopengl_a_LIBADD =
am__objects_22 = libopengl_a-opengl.$(OBJEXT)
am_libopengl_a_OBJECTS = $(am__objects_22)
libopengl_a_OBJECTS = $(am_libopengl_a_OBJECTS)
libopengl_pic_a_AR = $(AR) cru
libopengl_pic_a_LIBADD =
am__objects_23 = libopengl_pic_a-opengl.$(OBJEXT)
am_libopengl_pic_a_OBJECTS = $(am__objects_23)
libopengl_pic_a_OBJECTS = $(am_libopengl_pic_a_OBJECTS)
libopengl_plugin_a_AR = $(AR) cru
libopengl_plugin_a_LIBADD =
am__objects_24 = libopengl_plugin_a-opengl.$(OBJEXT)
am_libopengl_plugin_a_OBJECTS = $(am__objects_24)
libopengl_plugin_a_OBJECTS = $(am_libopengl_plugin_a_OBJECTS)
libsnapshot_a_AR = $(AR) cru
libsnapshot_a_LIBADD =
am__objects_25 = libsnapshot_a-snapshot.$(OBJEXT)
am_libsnapshot_a_OBJECTS = $(am__objects_25)
libsnapshot_a_OBJECTS = $(am_libsnapshot_a_OBJECTS)
libsnapshot_pic_a_AR = $(AR) cru
libsnapshot_pic_a_LIBADD =
am__objects_26 = libsnapshot_pic_a-snapshot.$(OBJEXT)
am_libsnapshot_pic_a_OBJECTS = $(am__objects_26)
libsnapshot_pic_a_OBJECTS = $(am_libsnapshot_pic_a_OBJECTS)
libsnapshot_plugin_a_AR = $(AR) cru
libsnapshot_plugin_a_LIBADD =
am__objects_27 = libsnapshot_plugin_a-snapshot.$(OBJEXT)
am_libsnapshot_plugin_a_OBJECTS = $(am__objects_27)
libsnapshot_plugin_a_OBJECTS = $(am_libsnapshot_plugin_a_OBJECTS)
libsvgalib_a_AR = $(AR) cru
libsvgalib_a_LIBADD =
am__objects_28 = libsvgalib_a-svgalib.$(OBJEXT)
am_libsvgalib_a_OBJECTS = $(am__objects_28)
libsvgalib_a_OBJECTS = $(am_libsvgalib_a_OBJECTS)
libsvgalib_pic_a_AR = $(AR) cru
libsvgalib_pic_a_LIBADD =
am__objects_29 = libsvgalib_pic_a-svgalib.$(OBJEXT)
am_libsvgalib_pic_a_OBJECTS = $(am__objects_29)
libsvgalib_pic_a_OBJECTS = $(am_libsvgalib_pic_a_OBJECTS)
libsvgalib_plugin_a_AR = $(AR) cru
libsvgalib_plugin_a_LIBADD =
am__objects_30 = libsvgalib_plugin_a-svgalib.$(OBJEXT)
am_libsvgalib_plugin_a_OBJECTS = $(am__objects_30)
libsvgalib_plugin_a_OBJECTS = $(am_libsvgalib_plugin_a_OBJECTS)
libvout_sdl_a_AR = $(AR) cru
libvout_sdl_a_LIBADD =
am__objects_31 = libvout_sdl_a-sdl.$(OBJEXT)
am_libvout_sdl_a_OBJECTS = $(am__objects_31)
libvout_sdl_a_OBJECTS = $(am_libvout_sdl_a_OBJECTS)
libvout_sdl_pic_a_AR = $(AR) cru
libvout_sdl_pic_a_LIBADD =
am__objects_32 = libvout_sdl_pic_a-sdl.$(OBJEXT)
am_libvout_sdl_pic_a_OBJECTS = $(am__objects_32)
libvout_sdl_pic_a_OBJECTS = $(am_libvout_sdl_pic_a_OBJECTS)
libvout_sdl_plugin_a_AR = $(AR) cru
libvout_sdl_plugin_a_LIBADD =
am__objects_33 = libvout_sdl_plugin_a-sdl.$(OBJEXT)
am_libvout_sdl_plugin_a_OBJECTS = $(am__objects_33)
libvout_sdl_plugin_a_OBJECTS = $(am_libvout_sdl_plugin_a_OBJECTS)
libwingdi_a_AR = $(AR) cru
libwingdi_a_LIBADD =
am__objects_34 = libwingdi_a-wingdi.$(OBJEXT)
am_libwingdi_a_OBJECTS = $(am__objects_34)
libwingdi_a_OBJECTS = $(am_libwingdi_a_OBJECTS)
libwingdi_pic_a_AR = $(AR) cru
libwingdi_pic_a_LIBADD =
am__objects_35 = libwingdi_pic_a-wingdi.$(OBJEXT)
am_libwingdi_pic_a_OBJECTS = $(am__objects_35)
libwingdi_pic_a_OBJECTS = $(am_libwingdi_pic_a_OBJECTS)
libwingdi_plugin_a_AR = $(AR) cru
libwingdi_plugin_a_LIBADD =
am__objects_36 = libwingdi_plugin_a-wingdi.$(OBJEXT)
am_libwingdi_plugin_a_OBJECTS = $(am__objects_36)
libwingdi_plugin_a_OBJECTS = $(am_libwingdi_plugin_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/libaa_a-aa.Po \
	./$(DEPDIR)/libaa_pic_a-aa.Po \
	./$(DEPDIR)/libaa_plugin_a-aa.Po \
	./$(DEPDIR)/libcaca_a-caca.Po \
	./$(DEPDIR)/libcaca_pic_a-caca.Po \
	./$(DEPDIR)/libcaca_plugin_a-caca.Po \
	./$(DEPDIR)/libfb_a-fb.Po \
	./$(DEPDIR)/libfb_pic_a-fb.Po \
	./$(DEPDIR)/libfb_plugin_a-fb.Po \
	./$(DEPDIR)/libggi_a-ggi.Po \
	./$(DEPDIR)/libggi_pic_a-ggi.Po \
	./$(DEPDIR)/libggi_plugin_a-ggi.Po \
	./$(DEPDIR)/libglide_a-glide.Po \
	./$(DEPDIR)/libglide_pic_a-glide.Po \
	./$(DEPDIR)/libglide_plugin_a-glide.Po \
	./$(DEPDIR)/libhd1000v_a-hd1000v.Po \
	./$(DEPDIR)/libhd1000v_pic_a-hd1000v.Po \
	./$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Po \
	./$(DEPDIR)/libmga_a-mga.Po \
	./$(DEPDIR)/libmga_pic_a-mga.Po \
	./$(DEPDIR)/libmga_plugin_a-mga.Po \
	./$(DEPDIR)/libopengl_a-opengl.Po \
	./$(DEPDIR)/libopengl_pic_a-opengl.Po \
	./$(DEPDIR)/libopengl_plugin_a-opengl.Po \
	./$(DEPDIR)/libsnapshot_a-snapshot.Po \
	./$(DEPDIR)/libsnapshot_pic_a-snapshot.Po \
	./$(DEPDIR)/libsnapshot_plugin_a-snapshot.Po \
	./$(DEPDIR)/libsvgalib_a-svgalib.Po \
	./$(DEPDIR)/libsvgalib_pic_a-svgalib.Po \
	./$(DEPDIR)/libsvgalib_plugin_a-svgalib.Po \
	./$(DEPDIR)/libvout_sdl_a-sdl.Po \
	./$(DEPDIR)/libvout_sdl_pic_a-sdl.Po \
	./$(DEPDIR)/libvout_sdl_plugin_a-sdl.Po \
	./$(DEPDIR)/libwingdi_a-wingdi.Po \
	./$(DEPDIR)/libwingdi_pic_a-wingdi.Po \
	./$(DEPDIR)/libwingdi_plugin_a-wingdi.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(libaa_a_SOURCES) $(libaa_pic_a_SOURCES) \
	$(libaa_plugin_a_SOURCES) $(libcaca_a_SOURCES) \
	$(libcaca_pic_a_SOURCES) $(libcaca_plugin_a_SOURCES) \
	$(libfb_a_SOURCES) $(libfb_pic_a_SOURCES) \
	$(libfb_plugin_a_SOURCES) $(libggi_a_SOURCES) \
	$(libggi_pic_a_SOURCES) $(libggi_plugin_a_SOURCES) \
	$(libglide_a_SOURCES) $(libglide_pic_a_SOURCES) \
	$(libglide_plugin_a_SOURCES) $(libhd1000v_a_SOURCES) \
	$(libhd1000v_pic_a_SOURCES) $(libhd1000v_plugin_a_SOURCES) \
	$(libmga_a_SOURCES) $(libmga_pic_a_SOURCES) \
	$(libmga_plugin_a_SOURCES) $(libopengl_a_SOURCES) \
	$(libopengl_pic_a_SOURCES) $(libopengl_plugin_a_SOURCES) \
	$(libsnapshot_a_SOURCES) $(libsnapshot_pic_a_SOURCES) \
	$(libsnapshot_plugin_a_SOURCES) $(libsvgalib_a_SOURCES) \
	$(libsvgalib_pic_a_SOURCES) $(libsvgalib_plugin_a_SOURCES) \
	$(libvout_sdl_a_SOURCES) $(libvout_sdl_pic_a_SOURCES) \
	$(libvout_sdl_plugin_a_SOURCES) $(libwingdi_a_SOURCES) \
	$(libwingdi_pic_a_SOURCES) $(libwingdi_plugin_a_SOURCES)
DATA = $(libaa_DATA) $(libcaca_DATA) $(libfb_DATA) $(libggi_DATA) \
	$(libglide_DATA) $(libhd1000v_DATA) $(libmga_DATA) \
	$(libopengl_DATA) $(libsnapshot_DATA) $(libsvgalib_DATA) \
	$(libvout_sdl_DATA) $(libwingdi_DATA)

HEADERS = $(noinst_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.in \
	$(srcdir)/Modules.am Makefile.am
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libaa_a_SOURCES) $(libaa_pic_a_SOURCES) $(libaa_plugin_a_SOURCES) $(libcaca_a_SOURCES) $(libcaca_pic_a_SOURCES) $(libcaca_plugin_a_SOURCES) $(libfb_a_SOURCES) $(libfb_pic_a_SOURCES) $(libfb_plugin_a_SOURCES) $(libggi_a_SOURCES) $(libggi_pic_a_SOURCES) $(libggi_plugin_a_SOURCES) $(libglide_a_SOURCES) $(libglide_pic_a_SOURCES) $(libglide_plugin_a_SOURCES) $(libhd1000v_a_SOURCES) $(libhd1000v_pic_a_SOURCES) $(libhd1000v_plugin_a_SOURCES) $(libmga_a_SOURCES) $(libmga_pic_a_SOURCES) $(libmga_plugin_a_SOURCES) $(libopengl_a_SOURCES) $(libopengl_pic_a_SOURCES) $(libopengl_plugin_a_SOURCES) $(libsnapshot_a_SOURCES) $(libsnapshot_pic_a_SOURCES) $(libsnapshot_plugin_a_SOURCES) $(libsvgalib_a_SOURCES) $(libsvgalib_pic_a_SOURCES) $(libsvgalib_plugin_a_SOURCES) $(libvout_sdl_a_SOURCES) $(libvout_sdl_pic_a_SOURCES) $(libvout_sdl_plugin_a_SOURCES) $(libwingdi_a_SOURCES) $(libwingdi_pic_a_SOURCES) $(libwingdi_plugin_a_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am $(srcdir)/Modules.am $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  modules/video_output/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libvlcLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libvlcLIBRARIES: $(libvlc_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libvlcdir)
	@list='$(libvlc_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libvlcLIBRARIES_INSTALL) $$p $(DESTDIR)$(libvlcdir)/$$f"; \
	    $(libvlcLIBRARIES_INSTALL) $$p $(DESTDIR)$(libvlcdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(libvlc_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libvlcdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libvlcdir)/$$p; \
	  else :; fi; \
	done

uninstall-libvlcLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libvlcdir)/$$p"; \
	  rm -f $(DESTDIR)$(libvlcdir)/$$p; \
	done

clean-libvlcLIBRARIES:
	-test -z "$(libvlc_LIBRARIES)" || rm -f $(libvlc_LIBRARIES)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libaa.a: $(libaa_a_OBJECTS) $(libaa_a_DEPENDENCIES) 
	-rm -f libaa.a
	$(libaa_a_AR) libaa.a $(libaa_a_OBJECTS) $(libaa_a_LIBADD)
	$(RANLIB) libaa.a
libaa_pic.a: $(libaa_pic_a_OBJECTS) $(libaa_pic_a_DEPENDENCIES) 
	-rm -f libaa_pic.a
	$(libaa_pic_a_AR) libaa_pic.a $(libaa_pic_a_OBJECTS) $(libaa_pic_a_LIBADD)
	$(RANLIB) libaa_pic.a
libaa_plugin.a: $(libaa_plugin_a_OBJECTS) $(libaa_plugin_a_DEPENDENCIES) 
	-rm -f libaa_plugin.a
	$(libaa_plugin_a_AR) libaa_plugin.a $(libaa_plugin_a_OBJECTS) $(libaa_plugin_a_LIBADD)
	$(RANLIB) libaa_plugin.a
libcaca.a: $(libcaca_a_OBJECTS) $(libcaca_a_DEPENDENCIES) 
	-rm -f libcaca.a
	$(libcaca_a_AR) libcaca.a $(libcaca_a_OBJECTS) $(libcaca_a_LIBADD)
	$(RANLIB) libcaca.a
libcaca_pic.a: $(libcaca_pic_a_OBJECTS) $(libcaca_pic_a_DEPENDENCIES) 
	-rm -f libcaca_pic.a
	$(libcaca_pic_a_AR) libcaca_pic.a $(libcaca_pic_a_OBJECTS) $(libcaca_pic_a_LIBADD)
	$(RANLIB) libcaca_pic.a
libcaca_plugin.a: $(libcaca_plugin_a_OBJECTS) $(libcaca_plugin_a_DEPENDENCIES) 
	-rm -f libcaca_plugin.a
	$(libcaca_plugin_a_AR) libcaca_plugin.a $(libcaca_plugin_a_OBJECTS) $(libcaca_plugin_a_LIBADD)
	$(RANLIB) libcaca_plugin.a
libfb.a: $(libfb_a_OBJECTS) $(libfb_a_DEPENDENCIES) 
	-rm -f libfb.a
	$(libfb_a_AR) libfb.a $(libfb_a_OBJECTS) $(libfb_a_LIBADD)
	$(RANLIB) libfb.a
libfb_pic.a: $(libfb_pic_a_OBJECTS) $(libfb_pic_a_DEPENDENCIES) 
	-rm -f libfb_pic.a
	$(libfb_pic_a_AR) libfb_pic.a $(libfb_pic_a_OBJECTS) $(libfb_pic_a_LIBADD)
	$(RANLIB) libfb_pic.a
libfb_plugin.a: $(libfb_plugin_a_OBJECTS) $(libfb_plugin_a_DEPENDENCIES) 
	-rm -f libfb_plugin.a
	$(libfb_plugin_a_AR) libfb_plugin.a $(libfb_plugin_a_OBJECTS) $(libfb_plugin_a_LIBADD)
	$(RANLIB) libfb_plugin.a
libggi.a: $(libggi_a_OBJECTS) $(libggi_a_DEPENDENCIES) 
	-rm -f libggi.a
	$(libggi_a_AR) libggi.a $(libggi_a_OBJECTS) $(libggi_a_LIBADD)
	$(RANLIB) libggi.a
libggi_pic.a: $(libggi_pic_a_OBJECTS) $(libggi_pic_a_DEPENDENCIES) 
	-rm -f libggi_pic.a
	$(libggi_pic_a_AR) libggi_pic.a $(libggi_pic_a_OBJECTS) $(libggi_pic_a_LIBADD)
	$(RANLIB) libggi_pic.a
libggi_plugin.a: $(libggi_plugin_a_OBJECTS) $(libggi_plugin_a_DEPENDENCIES) 
	-rm -f libggi_plugin.a
	$(libggi_plugin_a_AR) libggi_plugin.a $(libggi_plugin_a_OBJECTS) $(libggi_plugin_a_LIBADD)
	$(RANLIB) libggi_plugin.a
libglide.a: $(libglide_a_OBJECTS) $(libglide_a_DEPENDENCIES) 
	-rm -f libglide.a
	$(libglide_a_AR) libglide.a $(libglide_a_OBJECTS) $(libglide_a_LIBADD)
	$(RANLIB) libglide.a
libglide_pic.a: $(libglide_pic_a_OBJECTS) $(libglide_pic_a_DEPENDENCIES) 
	-rm -f libglide_pic.a
	$(libglide_pic_a_AR) libglide_pic.a $(libglide_pic_a_OBJECTS) $(libglide_pic_a_LIBADD)
	$(RANLIB) libglide_pic.a
libglide_plugin.a: $(libglide_plugin_a_OBJECTS) $(libglide_plugin_a_DEPENDENCIES) 
	-rm -f libglide_plugin.a
	$(libglide_plugin_a_AR) libglide_plugin.a $(libglide_plugin_a_OBJECTS) $(libglide_plugin_a_LIBADD)
	$(RANLIB) libglide_plugin.a
libhd1000v.a: $(libhd1000v_a_OBJECTS) $(libhd1000v_a_DEPENDENCIES) 
	-rm -f libhd1000v.a
	$(libhd1000v_a_AR) libhd1000v.a $(libhd1000v_a_OBJECTS) $(libhd1000v_a_LIBADD)
	$(RANLIB) libhd1000v.a
libhd1000v_pic.a: $(libhd1000v_pic_a_OBJECTS) $(libhd1000v_pic_a_DEPENDENCIES) 
	-rm -f libhd1000v_pic.a
	$(libhd1000v_pic_a_AR) libhd1000v_pic.a $(libhd1000v_pic_a_OBJECTS) $(libhd1000v_pic_a_LIBADD)
	$(RANLIB) libhd1000v_pic.a
libhd1000v_plugin.a: $(libhd1000v_plugin_a_OBJECTS) $(libhd1000v_plugin_a_DEPENDENCIES) 
	-rm -f libhd1000v_plugin.a
	$(libhd1000v_plugin_a_AR) libhd1000v_plugin.a $(libhd1000v_plugin_a_OBJECTS) $(libhd1000v_plugin_a_LIBADD)
	$(RANLIB) libhd1000v_plugin.a
libmga.a: $(libmga_a_OBJECTS) $(libmga_a_DEPENDENCIES) 
	-rm -f libmga.a
	$(libmga_a_AR) libmga.a $(libmga_a_OBJECTS) $(libmga_a_LIBADD)
	$(RANLIB) libmga.a
libmga_pic.a: $(libmga_pic_a_OBJECTS) $(libmga_pic_a_DEPENDENCIES) 
	-rm -f libmga_pic.a
	$(libmga_pic_a_AR) libmga_pic.a $(libmga_pic_a_OBJECTS) $(libmga_pic_a_LIBADD)
	$(RANLIB) libmga_pic.a
libmga_plugin.a: $(libmga_plugin_a_OBJECTS) $(libmga_plugin_a_DEPENDENCIES) 
	-rm -f libmga_plugin.a
	$(libmga_plugin_a_AR) libmga_plugin.a $(libmga_plugin_a_OBJECTS) $(libmga_plugin_a_LIBADD)
	$(RANLIB) libmga_plugin.a
libopengl.a: $(libopengl_a_OBJECTS) $(libopengl_a_DEPENDENCIES) 
	-rm -f libopengl.a
	$(libopengl_a_AR) libopengl.a $(libopengl_a_OBJECTS) $(libopengl_a_LIBADD)
	$(RANLIB) libopengl.a
libopengl_pic.a: $(libopengl_pic_a_OBJECTS) $(libopengl_pic_a_DEPENDENCIES) 
	-rm -f libopengl_pic.a
	$(libopengl_pic_a_AR) libopengl_pic.a $(libopengl_pic_a_OBJECTS) $(libopengl_pic_a_LIBADD)
	$(RANLIB) libopengl_pic.a
libopengl_plugin.a: $(libopengl_plugin_a_OBJECTS) $(libopengl_plugin_a_DEPENDENCIES) 
	-rm -f libopengl_plugin.a
	$(libopengl_plugin_a_AR) libopengl_plugin.a $(libopengl_plugin_a_OBJECTS) $(libopengl_plugin_a_LIBADD)
	$(RANLIB) libopengl_plugin.a
libsnapshot.a: $(libsnapshot_a_OBJECTS) $(libsnapshot_a_DEPENDENCIES) 
	-rm -f libsnapshot.a
	$(libsnapshot_a_AR) libsnapshot.a $(libsnapshot_a_OBJECTS) $(libsnapshot_a_LIBADD)
	$(RANLIB) libsnapshot.a
libsnapshot_pic.a: $(libsnapshot_pic_a_OBJECTS) $(libsnapshot_pic_a_DEPENDENCIES) 
	-rm -f libsnapshot_pic.a
	$(libsnapshot_pic_a_AR) libsnapshot_pic.a $(libsnapshot_pic_a_OBJECTS) $(libsnapshot_pic_a_LIBADD)
	$(RANLIB) libsnapshot_pic.a
libsnapshot_plugin.a: $(libsnapshot_plugin_a_OBJECTS) $(libsnapshot_plugin_a_DEPENDENCIES) 
	-rm -f libsnapshot_plugin.a
	$(libsnapshot_plugin_a_AR) libsnapshot_plugin.a $(libsnapshot_plugin_a_OBJECTS) $(libsnapshot_plugin_a_LIBADD)
	$(RANLIB) libsnapshot_plugin.a
libsvgalib.a: $(libsvgalib_a_OBJECTS) $(libsvgalib_a_DEPENDENCIES) 
	-rm -f libsvgalib.a
	$(libsvgalib_a_AR) libsvgalib.a $(libsvgalib_a_OBJECTS) $(libsvgalib_a_LIBADD)
	$(RANLIB) libsvgalib.a
libsvgalib_pic.a: $(libsvgalib_pic_a_OBJECTS) $(libsvgalib_pic_a_DEPENDENCIES) 
	-rm -f libsvgalib_pic.a
	$(libsvgalib_pic_a_AR) libsvgalib_pic.a $(libsvgalib_pic_a_OBJECTS) $(libsvgalib_pic_a_LIBADD)
	$(RANLIB) libsvgalib_pic.a
libsvgalib_plugin.a: $(libsvgalib_plugin_a_OBJECTS) $(libsvgalib_plugin_a_DEPENDENCIES) 
	-rm -f libsvgalib_plugin.a
	$(libsvgalib_plugin_a_AR) libsvgalib_plugin.a $(libsvgalib_plugin_a_OBJECTS) $(libsvgalib_plugin_a_LIBADD)
	$(RANLIB) libsvgalib_plugin.a
libvout_sdl.a: $(libvout_sdl_a_OBJECTS) $(libvout_sdl_a_DEPENDENCIES) 
	-rm -f libvout_sdl.a
	$(libvout_sdl_a_AR) libvout_sdl.a $(libvout_sdl_a_OBJECTS) $(libvout_sdl_a_LIBADD)
	$(RANLIB) libvout_sdl.a
libvout_sdl_pic.a: $(libvout_sdl_pic_a_OBJECTS) $(libvout_sdl_pic_a_DEPENDENCIES) 
	-rm -f libvout_sdl_pic.a
	$(libvout_sdl_pic_a_AR) libvout_sdl_pic.a $(libvout_sdl_pic_a_OBJECTS) $(libvout_sdl_pic_a_LIBADD)
	$(RANLIB) libvout_sdl_pic.a
libvout_sdl_plugin.a: $(libvout_sdl_plugin_a_OBJECTS) $(libvout_sdl_plugin_a_DEPENDENCIES) 
	-rm -f libvout_sdl_plugin.a
	$(libvout_sdl_plugin_a_AR) libvout_sdl_plugin.a $(libvout_sdl_plugin_a_OBJECTS) $(libvout_sdl_plugin_a_LIBADD)
	$(RANLIB) libvout_sdl_plugin.a
libwingdi.a: $(libwingdi_a_OBJECTS) $(libwingdi_a_DEPENDENCIES) 
	-rm -f libwingdi.a
	$(libwingdi_a_AR) libwingdi.a $(libwingdi_a_OBJECTS) $(libwingdi_a_LIBADD)
	$(RANLIB) libwingdi.a
libwingdi_pic.a: $(libwingdi_pic_a_OBJECTS) $(libwingdi_pic_a_DEPENDENCIES) 
	-rm -f libwingdi_pic.a
	$(libwingdi_pic_a_AR) libwingdi_pic.a $(libwingdi_pic_a_OBJECTS) $(libwingdi_pic_a_LIBADD)
	$(RANLIB) libwingdi_pic.a
libwingdi_plugin.a: $(libwingdi_plugin_a_OBJECTS) $(libwingdi_plugin_a_DEPENDENCIES) 
	-rm -f libwingdi_plugin.a
	$(libwingdi_plugin_a_AR) libwingdi_plugin.a $(libwingdi_plugin_a_OBJECTS) $(libwingdi_plugin_a_LIBADD)
	$(RANLIB) libwingdi_plugin.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libaa_a-aa.Po
include ./$(DEPDIR)/libaa_pic_a-aa.Po
include ./$(DEPDIR)/libaa_plugin_a-aa.Po
include ./$(DEPDIR)/libcaca_a-caca.Po
include ./$(DEPDIR)/libcaca_pic_a-caca.Po
include ./$(DEPDIR)/libcaca_plugin_a-caca.Po
include ./$(DEPDIR)/libfb_a-fb.Po
include ./$(DEPDIR)/libfb_pic_a-fb.Po
include ./$(DEPDIR)/libfb_plugin_a-fb.Po
include ./$(DEPDIR)/libggi_a-ggi.Po
include ./$(DEPDIR)/libggi_pic_a-ggi.Po
include ./$(DEPDIR)/libggi_plugin_a-ggi.Po
include ./$(DEPDIR)/libglide_a-glide.Po
include ./$(DEPDIR)/libglide_pic_a-glide.Po
include ./$(DEPDIR)/libglide_plugin_a-glide.Po
include ./$(DEPDIR)/libhd1000v_a-hd1000v.Po
include ./$(DEPDIR)/libhd1000v_pic_a-hd1000v.Po
include ./$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Po
include ./$(DEPDIR)/libmga_a-mga.Po
include ./$(DEPDIR)/libmga_pic_a-mga.Po
include ./$(DEPDIR)/libmga_plugin_a-mga.Po
include ./$(DEPDIR)/libopengl_a-opengl.Po
include ./$(DEPDIR)/libopengl_pic_a-opengl.Po
include ./$(DEPDIR)/libopengl_plugin_a-opengl.Po
include ./$(DEPDIR)/libsnapshot_a-snapshot.Po
include ./$(DEPDIR)/libsnapshot_pic_a-snapshot.Po
include ./$(DEPDIR)/libsnapshot_plugin_a-snapshot.Po
include ./$(DEPDIR)/libsvgalib_a-svgalib.Po
include ./$(DEPDIR)/libsvgalib_pic_a-svgalib.Po
include ./$(DEPDIR)/libsvgalib_plugin_a-svgalib.Po
include ./$(DEPDIR)/libvout_sdl_a-sdl.Po
include ./$(DEPDIR)/libvout_sdl_pic_a-sdl.Po
include ./$(DEPDIR)/libvout_sdl_plugin_a-sdl.Po
include ./$(DEPDIR)/libwingdi_a-wingdi.Po
include ./$(DEPDIR)/libwingdi_pic_a-wingdi.Po
include ./$(DEPDIR)/libwingdi_plugin_a-wingdi.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

libaa_a-aa.o: aa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_a_CFLAGS) $(CFLAGS) -MT libaa_a-aa.o -MD -MP -MF "$(DEPDIR)/libaa_a-aa.Tpo" \
	  -c -o libaa_a-aa.o `test -f 'aa.c' || echo '$(srcdir)/'`aa.c; \
	then mv -f "$(DEPDIR)/libaa_a-aa.Tpo" "$(DEPDIR)/libaa_a-aa.Po"; \
	else rm -f "$(DEPDIR)/libaa_a-aa.Tpo"; exit 1; \
	fi
#	source='aa.c' object='libaa_a-aa.o' libtool=no \
#	depfile='$(DEPDIR)/libaa_a-aa.Po' tmpdepfile='$(DEPDIR)/libaa_a-aa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_a_CFLAGS) $(CFLAGS) -c -o libaa_a-aa.o `test -f 'aa.c' || echo '$(srcdir)/'`aa.c

libaa_a-aa.obj: aa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_a_CFLAGS) $(CFLAGS) -MT libaa_a-aa.obj -MD -MP -MF "$(DEPDIR)/libaa_a-aa.Tpo" \
	  -c -o libaa_a-aa.obj `if test -f 'aa.c'; then $(CYGPATH_W) 'aa.c'; else $(CYGPATH_W) '$(srcdir)/aa.c'; fi`; \
	then mv -f "$(DEPDIR)/libaa_a-aa.Tpo" "$(DEPDIR)/libaa_a-aa.Po"; \
	else rm -f "$(DEPDIR)/libaa_a-aa.Tpo"; exit 1; \
	fi
#	source='aa.c' object='libaa_a-aa.obj' libtool=no \
#	depfile='$(DEPDIR)/libaa_a-aa.Po' tmpdepfile='$(DEPDIR)/libaa_a-aa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_a_CFLAGS) $(CFLAGS) -c -o libaa_a-aa.obj `if test -f 'aa.c'; then $(CYGPATH_W) 'aa.c'; else $(CYGPATH_W) '$(srcdir)/aa.c'; fi`

libaa_pic_a-aa.o: aa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_pic_a_CFLAGS) $(CFLAGS) -MT libaa_pic_a-aa.o -MD -MP -MF "$(DEPDIR)/libaa_pic_a-aa.Tpo" \
	  -c -o libaa_pic_a-aa.o `test -f 'aa.c' || echo '$(srcdir)/'`aa.c; \
	then mv -f "$(DEPDIR)/libaa_pic_a-aa.Tpo" "$(DEPDIR)/libaa_pic_a-aa.Po"; \
	else rm -f "$(DEPDIR)/libaa_pic_a-aa.Tpo"; exit 1; \
	fi
#	source='aa.c' object='libaa_pic_a-aa.o' libtool=no \
#	depfile='$(DEPDIR)/libaa_pic_a-aa.Po' tmpdepfile='$(DEPDIR)/libaa_pic_a-aa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_pic_a_CFLAGS) $(CFLAGS) -c -o libaa_pic_a-aa.o `test -f 'aa.c' || echo '$(srcdir)/'`aa.c

libaa_pic_a-aa.obj: aa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_pic_a_CFLAGS) $(CFLAGS) -MT libaa_pic_a-aa.obj -MD -MP -MF "$(DEPDIR)/libaa_pic_a-aa.Tpo" \
	  -c -o libaa_pic_a-aa.obj `if test -f 'aa.c'; then $(CYGPATH_W) 'aa.c'; else $(CYGPATH_W) '$(srcdir)/aa.c'; fi`; \
	then mv -f "$(DEPDIR)/libaa_pic_a-aa.Tpo" "$(DEPDIR)/libaa_pic_a-aa.Po"; \
	else rm -f "$(DEPDIR)/libaa_pic_a-aa.Tpo"; exit 1; \
	fi
#	source='aa.c' object='libaa_pic_a-aa.obj' libtool=no \
#	depfile='$(DEPDIR)/libaa_pic_a-aa.Po' tmpdepfile='$(DEPDIR)/libaa_pic_a-aa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_pic_a_CFLAGS) $(CFLAGS) -c -o libaa_pic_a-aa.obj `if test -f 'aa.c'; then $(CYGPATH_W) 'aa.c'; else $(CYGPATH_W) '$(srcdir)/aa.c'; fi`

libaa_plugin_a-aa.o: aa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_plugin_a_CFLAGS) $(CFLAGS) -MT libaa_plugin_a-aa.o -MD -MP -MF "$(DEPDIR)/libaa_plugin_a-aa.Tpo" \
	  -c -o libaa_plugin_a-aa.o `test -f 'aa.c' || echo '$(srcdir)/'`aa.c; \
	then mv -f "$(DEPDIR)/libaa_plugin_a-aa.Tpo" "$(DEPDIR)/libaa_plugin_a-aa.Po"; \
	else rm -f "$(DEPDIR)/libaa_plugin_a-aa.Tpo"; exit 1; \
	fi
#	source='aa.c' object='libaa_plugin_a-aa.o' libtool=no \
#	depfile='$(DEPDIR)/libaa_plugin_a-aa.Po' tmpdepfile='$(DEPDIR)/libaa_plugin_a-aa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_plugin_a_CFLAGS) $(CFLAGS) -c -o libaa_plugin_a-aa.o `test -f 'aa.c' || echo '$(srcdir)/'`aa.c

libaa_plugin_a-aa.obj: aa.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_plugin_a_CFLAGS) $(CFLAGS) -MT libaa_plugin_a-aa.obj -MD -MP -MF "$(DEPDIR)/libaa_plugin_a-aa.Tpo" \
	  -c -o libaa_plugin_a-aa.obj `if test -f 'aa.c'; then $(CYGPATH_W) 'aa.c'; else $(CYGPATH_W) '$(srcdir)/aa.c'; fi`; \
	then mv -f "$(DEPDIR)/libaa_plugin_a-aa.Tpo" "$(DEPDIR)/libaa_plugin_a-aa.Po"; \
	else rm -f "$(DEPDIR)/libaa_plugin_a-aa.Tpo"; exit 1; \
	fi
#	source='aa.c' object='libaa_plugin_a-aa.obj' libtool=no \
#	depfile='$(DEPDIR)/libaa_plugin_a-aa.Po' tmpdepfile='$(DEPDIR)/libaa_plugin_a-aa.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaa_plugin_a_CFLAGS) $(CFLAGS) -c -o libaa_plugin_a-aa.obj `if test -f 'aa.c'; then $(CYGPATH_W) 'aa.c'; else $(CYGPATH_W) '$(srcdir)/aa.c'; fi`

libcaca_a-caca.o: caca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_a_CFLAGS) $(CFLAGS) -MT libcaca_a-caca.o -MD -MP -MF "$(DEPDIR)/libcaca_a-caca.Tpo" \
	  -c -o libcaca_a-caca.o `test -f 'caca.c' || echo '$(srcdir)/'`caca.c; \
	then mv -f "$(DEPDIR)/libcaca_a-caca.Tpo" "$(DEPDIR)/libcaca_a-caca.Po"; \
	else rm -f "$(DEPDIR)/libcaca_a-caca.Tpo"; exit 1; \
	fi
#	source='caca.c' object='libcaca_a-caca.o' libtool=no \
#	depfile='$(DEPDIR)/libcaca_a-caca.Po' tmpdepfile='$(DEPDIR)/libcaca_a-caca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_a_CFLAGS) $(CFLAGS) -c -o libcaca_a-caca.o `test -f 'caca.c' || echo '$(srcdir)/'`caca.c

libcaca_a-caca.obj: caca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_a_CFLAGS) $(CFLAGS) -MT libcaca_a-caca.obj -MD -MP -MF "$(DEPDIR)/libcaca_a-caca.Tpo" \
	  -c -o libcaca_a-caca.obj `if test -f 'caca.c'; then $(CYGPATH_W) 'caca.c'; else $(CYGPATH_W) '$(srcdir)/caca.c'; fi`; \
	then mv -f "$(DEPDIR)/libcaca_a-caca.Tpo" "$(DEPDIR)/libcaca_a-caca.Po"; \
	else rm -f "$(DEPDIR)/libcaca_a-caca.Tpo"; exit 1; \
	fi
#	source='caca.c' object='libcaca_a-caca.obj' libtool=no \
#	depfile='$(DEPDIR)/libcaca_a-caca.Po' tmpdepfile='$(DEPDIR)/libcaca_a-caca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_a_CFLAGS) $(CFLAGS) -c -o libcaca_a-caca.obj `if test -f 'caca.c'; then $(CYGPATH_W) 'caca.c'; else $(CYGPATH_W) '$(srcdir)/caca.c'; fi`

libcaca_pic_a-caca.o: caca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_pic_a_CFLAGS) $(CFLAGS) -MT libcaca_pic_a-caca.o -MD -MP -MF "$(DEPDIR)/libcaca_pic_a-caca.Tpo" \
	  -c -o libcaca_pic_a-caca.o `test -f 'caca.c' || echo '$(srcdir)/'`caca.c; \
	then mv -f "$(DEPDIR)/libcaca_pic_a-caca.Tpo" "$(DEPDIR)/libcaca_pic_a-caca.Po"; \
	else rm -f "$(DEPDIR)/libcaca_pic_a-caca.Tpo"; exit 1; \
	fi
#	source='caca.c' object='libcaca_pic_a-caca.o' libtool=no \
#	depfile='$(DEPDIR)/libcaca_pic_a-caca.Po' tmpdepfile='$(DEPDIR)/libcaca_pic_a-caca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_pic_a_CFLAGS) $(CFLAGS) -c -o libcaca_pic_a-caca.o `test -f 'caca.c' || echo '$(srcdir)/'`caca.c

libcaca_pic_a-caca.obj: caca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_pic_a_CFLAGS) $(CFLAGS) -MT libcaca_pic_a-caca.obj -MD -MP -MF "$(DEPDIR)/libcaca_pic_a-caca.Tpo" \
	  -c -o libcaca_pic_a-caca.obj `if test -f 'caca.c'; then $(CYGPATH_W) 'caca.c'; else $(CYGPATH_W) '$(srcdir)/caca.c'; fi`; \
	then mv -f "$(DEPDIR)/libcaca_pic_a-caca.Tpo" "$(DEPDIR)/libcaca_pic_a-caca.Po"; \
	else rm -f "$(DEPDIR)/libcaca_pic_a-caca.Tpo"; exit 1; \
	fi
#	source='caca.c' object='libcaca_pic_a-caca.obj' libtool=no \
#	depfile='$(DEPDIR)/libcaca_pic_a-caca.Po' tmpdepfile='$(DEPDIR)/libcaca_pic_a-caca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_pic_a_CFLAGS) $(CFLAGS) -c -o libcaca_pic_a-caca.obj `if test -f 'caca.c'; then $(CYGPATH_W) 'caca.c'; else $(CYGPATH_W) '$(srcdir)/caca.c'; fi`

libcaca_plugin_a-caca.o: caca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_plugin_a_CFLAGS) $(CFLAGS) -MT libcaca_plugin_a-caca.o -MD -MP -MF "$(DEPDIR)/libcaca_plugin_a-caca.Tpo" \
	  -c -o libcaca_plugin_a-caca.o `test -f 'caca.c' || echo '$(srcdir)/'`caca.c; \
	then mv -f "$(DEPDIR)/libcaca_plugin_a-caca.Tpo" "$(DEPDIR)/libcaca_plugin_a-caca.Po"; \
	else rm -f "$(DEPDIR)/libcaca_plugin_a-caca.Tpo"; exit 1; \
	fi
#	source='caca.c' object='libcaca_plugin_a-caca.o' libtool=no \
#	depfile='$(DEPDIR)/libcaca_plugin_a-caca.Po' tmpdepfile='$(DEPDIR)/libcaca_plugin_a-caca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_plugin_a_CFLAGS) $(CFLAGS) -c -o libcaca_plugin_a-caca.o `test -f 'caca.c' || echo '$(srcdir)/'`caca.c

libcaca_plugin_a-caca.obj: caca.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_plugin_a_CFLAGS) $(CFLAGS) -MT libcaca_plugin_a-caca.obj -MD -MP -MF "$(DEPDIR)/libcaca_plugin_a-caca.Tpo" \
	  -c -o libcaca_plugin_a-caca.obj `if test -f 'caca.c'; then $(CYGPATH_W) 'caca.c'; else $(CYGPATH_W) '$(srcdir)/caca.c'; fi`; \
	then mv -f "$(DEPDIR)/libcaca_plugin_a-caca.Tpo" "$(DEPDIR)/libcaca_plugin_a-caca.Po"; \
	else rm -f "$(DEPDIR)/libcaca_plugin_a-caca.Tpo"; exit 1; \
	fi
#	source='caca.c' object='libcaca_plugin_a-caca.obj' libtool=no \
#	depfile='$(DEPDIR)/libcaca_plugin_a-caca.Po' tmpdepfile='$(DEPDIR)/libcaca_plugin_a-caca.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcaca_plugin_a_CFLAGS) $(CFLAGS) -c -o libcaca_plugin_a-caca.obj `if test -f 'caca.c'; then $(CYGPATH_W) 'caca.c'; else $(CYGPATH_W) '$(srcdir)/caca.c'; fi`

libfb_a-fb.o: fb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_a_CFLAGS) $(CFLAGS) -MT libfb_a-fb.o -MD -MP -MF "$(DEPDIR)/libfb_a-fb.Tpo" \
	  -c -o libfb_a-fb.o `test -f 'fb.c' || echo '$(srcdir)/'`fb.c; \
	then mv -f "$(DEPDIR)/libfb_a-fb.Tpo" "$(DEPDIR)/libfb_a-fb.Po"; \
	else rm -f "$(DEPDIR)/libfb_a-fb.Tpo"; exit 1; \
	fi
#	source='fb.c' object='libfb_a-fb.o' libtool=no \
#	depfile='$(DEPDIR)/libfb_a-fb.Po' tmpdepfile='$(DEPDIR)/libfb_a-fb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_a_CFLAGS) $(CFLAGS) -c -o libfb_a-fb.o `test -f 'fb.c' || echo '$(srcdir)/'`fb.c

libfb_a-fb.obj: fb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_a_CFLAGS) $(CFLAGS) -MT libfb_a-fb.obj -MD -MP -MF "$(DEPDIR)/libfb_a-fb.Tpo" \
	  -c -o libfb_a-fb.obj `if test -f 'fb.c'; then $(CYGPATH_W) 'fb.c'; else $(CYGPATH_W) '$(srcdir)/fb.c'; fi`; \
	then mv -f "$(DEPDIR)/libfb_a-fb.Tpo" "$(DEPDIR)/libfb_a-fb.Po"; \
	else rm -f "$(DEPDIR)/libfb_a-fb.Tpo"; exit 1; \
	fi
#	source='fb.c' object='libfb_a-fb.obj' libtool=no \
#	depfile='$(DEPDIR)/libfb_a-fb.Po' tmpdepfile='$(DEPDIR)/libfb_a-fb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_a_CFLAGS) $(CFLAGS) -c -o libfb_a-fb.obj `if test -f 'fb.c'; then $(CYGPATH_W) 'fb.c'; else $(CYGPATH_W) '$(srcdir)/fb.c'; fi`

libfb_pic_a-fb.o: fb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_pic_a_CFLAGS) $(CFLAGS) -MT libfb_pic_a-fb.o -MD -MP -MF "$(DEPDIR)/libfb_pic_a-fb.Tpo" \
	  -c -o libfb_pic_a-fb.o `test -f 'fb.c' || echo '$(srcdir)/'`fb.c; \
	then mv -f "$(DEPDIR)/libfb_pic_a-fb.Tpo" "$(DEPDIR)/libfb_pic_a-fb.Po"; \
	else rm -f "$(DEPDIR)/libfb_pic_a-fb.Tpo"; exit 1; \
	fi
#	source='fb.c' object='libfb_pic_a-fb.o' libtool=no \
#	depfile='$(DEPDIR)/libfb_pic_a-fb.Po' tmpdepfile='$(DEPDIR)/libfb_pic_a-fb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_pic_a_CFLAGS) $(CFLAGS) -c -o libfb_pic_a-fb.o `test -f 'fb.c' || echo '$(srcdir)/'`fb.c

libfb_pic_a-fb.obj: fb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_pic_a_CFLAGS) $(CFLAGS) -MT libfb_pic_a-fb.obj -MD -MP -MF "$(DEPDIR)/libfb_pic_a-fb.Tpo" \
	  -c -o libfb_pic_a-fb.obj `if test -f 'fb.c'; then $(CYGPATH_W) 'fb.c'; else $(CYGPATH_W) '$(srcdir)/fb.c'; fi`; \
	then mv -f "$(DEPDIR)/libfb_pic_a-fb.Tpo" "$(DEPDIR)/libfb_pic_a-fb.Po"; \
	else rm -f "$(DEPDIR)/libfb_pic_a-fb.Tpo"; exit 1; \
	fi
#	source='fb.c' object='libfb_pic_a-fb.obj' libtool=no \
#	depfile='$(DEPDIR)/libfb_pic_a-fb.Po' tmpdepfile='$(DEPDIR)/libfb_pic_a-fb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_pic_a_CFLAGS) $(CFLAGS) -c -o libfb_pic_a-fb.obj `if test -f 'fb.c'; then $(CYGPATH_W) 'fb.c'; else $(CYGPATH_W) '$(srcdir)/fb.c'; fi`

libfb_plugin_a-fb.o: fb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_plugin_a_CFLAGS) $(CFLAGS) -MT libfb_plugin_a-fb.o -MD -MP -MF "$(DEPDIR)/libfb_plugin_a-fb.Tpo" \
	  -c -o libfb_plugin_a-fb.o `test -f 'fb.c' || echo '$(srcdir)/'`fb.c; \
	then mv -f "$(DEPDIR)/libfb_plugin_a-fb.Tpo" "$(DEPDIR)/libfb_plugin_a-fb.Po"; \
	else rm -f "$(DEPDIR)/libfb_plugin_a-fb.Tpo"; exit 1; \
	fi
#	source='fb.c' object='libfb_plugin_a-fb.o' libtool=no \
#	depfile='$(DEPDIR)/libfb_plugin_a-fb.Po' tmpdepfile='$(DEPDIR)/libfb_plugin_a-fb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_plugin_a_CFLAGS) $(CFLAGS) -c -o libfb_plugin_a-fb.o `test -f 'fb.c' || echo '$(srcdir)/'`fb.c

libfb_plugin_a-fb.obj: fb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_plugin_a_CFLAGS) $(CFLAGS) -MT libfb_plugin_a-fb.obj -MD -MP -MF "$(DEPDIR)/libfb_plugin_a-fb.Tpo" \
	  -c -o libfb_plugin_a-fb.obj `if test -f 'fb.c'; then $(CYGPATH_W) 'fb.c'; else $(CYGPATH_W) '$(srcdir)/fb.c'; fi`; \
	then mv -f "$(DEPDIR)/libfb_plugin_a-fb.Tpo" "$(DEPDIR)/libfb_plugin_a-fb.Po"; \
	else rm -f "$(DEPDIR)/libfb_plugin_a-fb.Tpo"; exit 1; \
	fi
#	source='fb.c' object='libfb_plugin_a-fb.obj' libtool=no \
#	depfile='$(DEPDIR)/libfb_plugin_a-fb.Po' tmpdepfile='$(DEPDIR)/libfb_plugin_a-fb.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb_plugin_a_CFLAGS) $(CFLAGS) -c -o libfb_plugin_a-fb.obj `if test -f 'fb.c'; then $(CYGPATH_W) 'fb.c'; else $(CYGPATH_W) '$(srcdir)/fb.c'; fi`

libggi_a-ggi.o: ggi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_a_CFLAGS) $(CFLAGS) -MT libggi_a-ggi.o -MD -MP -MF "$(DEPDIR)/libggi_a-ggi.Tpo" \
	  -c -o libggi_a-ggi.o `test -f 'ggi.c' || echo '$(srcdir)/'`ggi.c; \
	then mv -f "$(DEPDIR)/libggi_a-ggi.Tpo" "$(DEPDIR)/libggi_a-ggi.Po"; \
	else rm -f "$(DEPDIR)/libggi_a-ggi.Tpo"; exit 1; \
	fi
#	source='ggi.c' object='libggi_a-ggi.o' libtool=no \
#	depfile='$(DEPDIR)/libggi_a-ggi.Po' tmpdepfile='$(DEPDIR)/libggi_a-ggi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_a_CFLAGS) $(CFLAGS) -c -o libggi_a-ggi.o `test -f 'ggi.c' || echo '$(srcdir)/'`ggi.c

libggi_a-ggi.obj: ggi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_a_CFLAGS) $(CFLAGS) -MT libggi_a-ggi.obj -MD -MP -MF "$(DEPDIR)/libggi_a-ggi.Tpo" \
	  -c -o libggi_a-ggi.obj `if test -f 'ggi.c'; then $(CYGPATH_W) 'ggi.c'; else $(CYGPATH_W) '$(srcdir)/ggi.c'; fi`; \
	then mv -f "$(DEPDIR)/libggi_a-ggi.Tpo" "$(DEPDIR)/libggi_a-ggi.Po"; \
	else rm -f "$(DEPDIR)/libggi_a-ggi.Tpo"; exit 1; \
	fi
#	source='ggi.c' object='libggi_a-ggi.obj' libtool=no \
#	depfile='$(DEPDIR)/libggi_a-ggi.Po' tmpdepfile='$(DEPDIR)/libggi_a-ggi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_a_CFLAGS) $(CFLAGS) -c -o libggi_a-ggi.obj `if test -f 'ggi.c'; then $(CYGPATH_W) 'ggi.c'; else $(CYGPATH_W) '$(srcdir)/ggi.c'; fi`

libggi_pic_a-ggi.o: ggi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_pic_a_CFLAGS) $(CFLAGS) -MT libggi_pic_a-ggi.o -MD -MP -MF "$(DEPDIR)/libggi_pic_a-ggi.Tpo" \
	  -c -o libggi_pic_a-ggi.o `test -f 'ggi.c' || echo '$(srcdir)/'`ggi.c; \
	then mv -f "$(DEPDIR)/libggi_pic_a-ggi.Tpo" "$(DEPDIR)/libggi_pic_a-ggi.Po"; \
	else rm -f "$(DEPDIR)/libggi_pic_a-ggi.Tpo"; exit 1; \
	fi
#	source='ggi.c' object='libggi_pic_a-ggi.o' libtool=no \
#	depfile='$(DEPDIR)/libggi_pic_a-ggi.Po' tmpdepfile='$(DEPDIR)/libggi_pic_a-ggi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_pic_a_CFLAGS) $(CFLAGS) -c -o libggi_pic_a-ggi.o `test -f 'ggi.c' || echo '$(srcdir)/'`ggi.c

libggi_pic_a-ggi.obj: ggi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_pic_a_CFLAGS) $(CFLAGS) -MT libggi_pic_a-ggi.obj -MD -MP -MF "$(DEPDIR)/libggi_pic_a-ggi.Tpo" \
	  -c -o libggi_pic_a-ggi.obj `if test -f 'ggi.c'; then $(CYGPATH_W) 'ggi.c'; else $(CYGPATH_W) '$(srcdir)/ggi.c'; fi`; \
	then mv -f "$(DEPDIR)/libggi_pic_a-ggi.Tpo" "$(DEPDIR)/libggi_pic_a-ggi.Po"; \
	else rm -f "$(DEPDIR)/libggi_pic_a-ggi.Tpo"; exit 1; \
	fi
#	source='ggi.c' object='libggi_pic_a-ggi.obj' libtool=no \
#	depfile='$(DEPDIR)/libggi_pic_a-ggi.Po' tmpdepfile='$(DEPDIR)/libggi_pic_a-ggi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_pic_a_CFLAGS) $(CFLAGS) -c -o libggi_pic_a-ggi.obj `if test -f 'ggi.c'; then $(CYGPATH_W) 'ggi.c'; else $(CYGPATH_W) '$(srcdir)/ggi.c'; fi`

libggi_plugin_a-ggi.o: ggi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_plugin_a_CFLAGS) $(CFLAGS) -MT libggi_plugin_a-ggi.o -MD -MP -MF "$(DEPDIR)/libggi_plugin_a-ggi.Tpo" \
	  -c -o libggi_plugin_a-ggi.o `test -f 'ggi.c' || echo '$(srcdir)/'`ggi.c; \
	then mv -f "$(DEPDIR)/libggi_plugin_a-ggi.Tpo" "$(DEPDIR)/libggi_plugin_a-ggi.Po"; \
	else rm -f "$(DEPDIR)/libggi_plugin_a-ggi.Tpo"; exit 1; \
	fi
#	source='ggi.c' object='libggi_plugin_a-ggi.o' libtool=no \
#	depfile='$(DEPDIR)/libggi_plugin_a-ggi.Po' tmpdepfile='$(DEPDIR)/libggi_plugin_a-ggi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_plugin_a_CFLAGS) $(CFLAGS) -c -o libggi_plugin_a-ggi.o `test -f 'ggi.c' || echo '$(srcdir)/'`ggi.c

libggi_plugin_a-ggi.obj: ggi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_plugin_a_CFLAGS) $(CFLAGS) -MT libggi_plugin_a-ggi.obj -MD -MP -MF "$(DEPDIR)/libggi_plugin_a-ggi.Tpo" \
	  -c -o libggi_plugin_a-ggi.obj `if test -f 'ggi.c'; then $(CYGPATH_W) 'ggi.c'; else $(CYGPATH_W) '$(srcdir)/ggi.c'; fi`; \
	then mv -f "$(DEPDIR)/libggi_plugin_a-ggi.Tpo" "$(DEPDIR)/libggi_plugin_a-ggi.Po"; \
	else rm -f "$(DEPDIR)/libggi_plugin_a-ggi.Tpo"; exit 1; \
	fi
#	source='ggi.c' object='libggi_plugin_a-ggi.obj' libtool=no \
#	depfile='$(DEPDIR)/libggi_plugin_a-ggi.Po' tmpdepfile='$(DEPDIR)/libggi_plugin_a-ggi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggi_plugin_a_CFLAGS) $(CFLAGS) -c -o libggi_plugin_a-ggi.obj `if test -f 'ggi.c'; then $(CYGPATH_W) 'ggi.c'; else $(CYGPATH_W) '$(srcdir)/ggi.c'; fi`

libglide_a-glide.o: glide.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_a_CFLAGS) $(CFLAGS) -MT libglide_a-glide.o -MD -MP -MF "$(DEPDIR)/libglide_a-glide.Tpo" \
	  -c -o libglide_a-glide.o `test -f 'glide.c' || echo '$(srcdir)/'`glide.c; \
	then mv -f "$(DEPDIR)/libglide_a-glide.Tpo" "$(DEPDIR)/libglide_a-glide.Po"; \
	else rm -f "$(DEPDIR)/libglide_a-glide.Tpo"; exit 1; \
	fi
#	source='glide.c' object='libglide_a-glide.o' libtool=no \
#	depfile='$(DEPDIR)/libglide_a-glide.Po' tmpdepfile='$(DEPDIR)/libglide_a-glide.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_a_CFLAGS) $(CFLAGS) -c -o libglide_a-glide.o `test -f 'glide.c' || echo '$(srcdir)/'`glide.c

libglide_a-glide.obj: glide.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_a_CFLAGS) $(CFLAGS) -MT libglide_a-glide.obj -MD -MP -MF "$(DEPDIR)/libglide_a-glide.Tpo" \
	  -c -o libglide_a-glide.obj `if test -f 'glide.c'; then $(CYGPATH_W) 'glide.c'; else $(CYGPATH_W) '$(srcdir)/glide.c'; fi`; \
	then mv -f "$(DEPDIR)/libglide_a-glide.Tpo" "$(DEPDIR)/libglide_a-glide.Po"; \
	else rm -f "$(DEPDIR)/libglide_a-glide.Tpo"; exit 1; \
	fi
#	source='glide.c' object='libglide_a-glide.obj' libtool=no \
#	depfile='$(DEPDIR)/libglide_a-glide.Po' tmpdepfile='$(DEPDIR)/libglide_a-glide.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_a_CFLAGS) $(CFLAGS) -c -o libglide_a-glide.obj `if test -f 'glide.c'; then $(CYGPATH_W) 'glide.c'; else $(CYGPATH_W) '$(srcdir)/glide.c'; fi`

libglide_pic_a-glide.o: glide.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_pic_a_CFLAGS) $(CFLAGS) -MT libglide_pic_a-glide.o -MD -MP -MF "$(DEPDIR)/libglide_pic_a-glide.Tpo" \
	  -c -o libglide_pic_a-glide.o `test -f 'glide.c' || echo '$(srcdir)/'`glide.c; \
	then mv -f "$(DEPDIR)/libglide_pic_a-glide.Tpo" "$(DEPDIR)/libglide_pic_a-glide.Po"; \
	else rm -f "$(DEPDIR)/libglide_pic_a-glide.Tpo"; exit 1; \
	fi
#	source='glide.c' object='libglide_pic_a-glide.o' libtool=no \
#	depfile='$(DEPDIR)/libglide_pic_a-glide.Po' tmpdepfile='$(DEPDIR)/libglide_pic_a-glide.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_pic_a_CFLAGS) $(CFLAGS) -c -o libglide_pic_a-glide.o `test -f 'glide.c' || echo '$(srcdir)/'`glide.c

libglide_pic_a-glide.obj: glide.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_pic_a_CFLAGS) $(CFLAGS) -MT libglide_pic_a-glide.obj -MD -MP -MF "$(DEPDIR)/libglide_pic_a-glide.Tpo" \
	  -c -o libglide_pic_a-glide.obj `if test -f 'glide.c'; then $(CYGPATH_W) 'glide.c'; else $(CYGPATH_W) '$(srcdir)/glide.c'; fi`; \
	then mv -f "$(DEPDIR)/libglide_pic_a-glide.Tpo" "$(DEPDIR)/libglide_pic_a-glide.Po"; \
	else rm -f "$(DEPDIR)/libglide_pic_a-glide.Tpo"; exit 1; \
	fi
#	source='glide.c' object='libglide_pic_a-glide.obj' libtool=no \
#	depfile='$(DEPDIR)/libglide_pic_a-glide.Po' tmpdepfile='$(DEPDIR)/libglide_pic_a-glide.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_pic_a_CFLAGS) $(CFLAGS) -c -o libglide_pic_a-glide.obj `if test -f 'glide.c'; then $(CYGPATH_W) 'glide.c'; else $(CYGPATH_W) '$(srcdir)/glide.c'; fi`

libglide_plugin_a-glide.o: glide.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_plugin_a_CFLAGS) $(CFLAGS) -MT libglide_plugin_a-glide.o -MD -MP -MF "$(DEPDIR)/libglide_plugin_a-glide.Tpo" \
	  -c -o libglide_plugin_a-glide.o `test -f 'glide.c' || echo '$(srcdir)/'`glide.c; \
	then mv -f "$(DEPDIR)/libglide_plugin_a-glide.Tpo" "$(DEPDIR)/libglide_plugin_a-glide.Po"; \
	else rm -f "$(DEPDIR)/libglide_plugin_a-glide.Tpo"; exit 1; \
	fi
#	source='glide.c' object='libglide_plugin_a-glide.o' libtool=no \
#	depfile='$(DEPDIR)/libglide_plugin_a-glide.Po' tmpdepfile='$(DEPDIR)/libglide_plugin_a-glide.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_plugin_a_CFLAGS) $(CFLAGS) -c -o libglide_plugin_a-glide.o `test -f 'glide.c' || echo '$(srcdir)/'`glide.c

libglide_plugin_a-glide.obj: glide.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_plugin_a_CFLAGS) $(CFLAGS) -MT libglide_plugin_a-glide.obj -MD -MP -MF "$(DEPDIR)/libglide_plugin_a-glide.Tpo" \
	  -c -o libglide_plugin_a-glide.obj `if test -f 'glide.c'; then $(CYGPATH_W) 'glide.c'; else $(CYGPATH_W) '$(srcdir)/glide.c'; fi`; \
	then mv -f "$(DEPDIR)/libglide_plugin_a-glide.Tpo" "$(DEPDIR)/libglide_plugin_a-glide.Po"; \
	else rm -f "$(DEPDIR)/libglide_plugin_a-glide.Tpo"; exit 1; \
	fi
#	source='glide.c' object='libglide_plugin_a-glide.obj' libtool=no \
#	depfile='$(DEPDIR)/libglide_plugin_a-glide.Po' tmpdepfile='$(DEPDIR)/libglide_plugin_a-glide.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglide_plugin_a_CFLAGS) $(CFLAGS) -c -o libglide_plugin_a-glide.obj `if test -f 'glide.c'; then $(CYGPATH_W) 'glide.c'; else $(CYGPATH_W) '$(srcdir)/glide.c'; fi`

libmga_a-mga.o: mga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_a_CFLAGS) $(CFLAGS) -MT libmga_a-mga.o -MD -MP -MF "$(DEPDIR)/libmga_a-mga.Tpo" \
	  -c -o libmga_a-mga.o `test -f 'mga.c' || echo '$(srcdir)/'`mga.c; \
	then mv -f "$(DEPDIR)/libmga_a-mga.Tpo" "$(DEPDIR)/libmga_a-mga.Po"; \
	else rm -f "$(DEPDIR)/libmga_a-mga.Tpo"; exit 1; \
	fi
#	source='mga.c' object='libmga_a-mga.o' libtool=no \
#	depfile='$(DEPDIR)/libmga_a-mga.Po' tmpdepfile='$(DEPDIR)/libmga_a-mga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_a_CFLAGS) $(CFLAGS) -c -o libmga_a-mga.o `test -f 'mga.c' || echo '$(srcdir)/'`mga.c

libmga_a-mga.obj: mga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_a_CFLAGS) $(CFLAGS) -MT libmga_a-mga.obj -MD -MP -MF "$(DEPDIR)/libmga_a-mga.Tpo" \
	  -c -o libmga_a-mga.obj `if test -f 'mga.c'; then $(CYGPATH_W) 'mga.c'; else $(CYGPATH_W) '$(srcdir)/mga.c'; fi`; \
	then mv -f "$(DEPDIR)/libmga_a-mga.Tpo" "$(DEPDIR)/libmga_a-mga.Po"; \
	else rm -f "$(DEPDIR)/libmga_a-mga.Tpo"; exit 1; \
	fi
#	source='mga.c' object='libmga_a-mga.obj' libtool=no \
#	depfile='$(DEPDIR)/libmga_a-mga.Po' tmpdepfile='$(DEPDIR)/libmga_a-mga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_a_CFLAGS) $(CFLAGS) -c -o libmga_a-mga.obj `if test -f 'mga.c'; then $(CYGPATH_W) 'mga.c'; else $(CYGPATH_W) '$(srcdir)/mga.c'; fi`

libmga_pic_a-mga.o: mga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_pic_a_CFLAGS) $(CFLAGS) -MT libmga_pic_a-mga.o -MD -MP -MF "$(DEPDIR)/libmga_pic_a-mga.Tpo" \
	  -c -o libmga_pic_a-mga.o `test -f 'mga.c' || echo '$(srcdir)/'`mga.c; \
	then mv -f "$(DEPDIR)/libmga_pic_a-mga.Tpo" "$(DEPDIR)/libmga_pic_a-mga.Po"; \
	else rm -f "$(DEPDIR)/libmga_pic_a-mga.Tpo"; exit 1; \
	fi
#	source='mga.c' object='libmga_pic_a-mga.o' libtool=no \
#	depfile='$(DEPDIR)/libmga_pic_a-mga.Po' tmpdepfile='$(DEPDIR)/libmga_pic_a-mga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_pic_a_CFLAGS) $(CFLAGS) -c -o libmga_pic_a-mga.o `test -f 'mga.c' || echo '$(srcdir)/'`mga.c

libmga_pic_a-mga.obj: mga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_pic_a_CFLAGS) $(CFLAGS) -MT libmga_pic_a-mga.obj -MD -MP -MF "$(DEPDIR)/libmga_pic_a-mga.Tpo" \
	  -c -o libmga_pic_a-mga.obj `if test -f 'mga.c'; then $(CYGPATH_W) 'mga.c'; else $(CYGPATH_W) '$(srcdir)/mga.c'; fi`; \
	then mv -f "$(DEPDIR)/libmga_pic_a-mga.Tpo" "$(DEPDIR)/libmga_pic_a-mga.Po"; \
	else rm -f "$(DEPDIR)/libmga_pic_a-mga.Tpo"; exit 1; \
	fi
#	source='mga.c' object='libmga_pic_a-mga.obj' libtool=no \
#	depfile='$(DEPDIR)/libmga_pic_a-mga.Po' tmpdepfile='$(DEPDIR)/libmga_pic_a-mga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_pic_a_CFLAGS) $(CFLAGS) -c -o libmga_pic_a-mga.obj `if test -f 'mga.c'; then $(CYGPATH_W) 'mga.c'; else $(CYGPATH_W) '$(srcdir)/mga.c'; fi`

libmga_plugin_a-mga.o: mga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_plugin_a_CFLAGS) $(CFLAGS) -MT libmga_plugin_a-mga.o -MD -MP -MF "$(DEPDIR)/libmga_plugin_a-mga.Tpo" \
	  -c -o libmga_plugin_a-mga.o `test -f 'mga.c' || echo '$(srcdir)/'`mga.c; \
	then mv -f "$(DEPDIR)/libmga_plugin_a-mga.Tpo" "$(DEPDIR)/libmga_plugin_a-mga.Po"; \
	else rm -f "$(DEPDIR)/libmga_plugin_a-mga.Tpo"; exit 1; \
	fi
#	source='mga.c' object='libmga_plugin_a-mga.o' libtool=no \
#	depfile='$(DEPDIR)/libmga_plugin_a-mga.Po' tmpdepfile='$(DEPDIR)/libmga_plugin_a-mga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_plugin_a_CFLAGS) $(CFLAGS) -c -o libmga_plugin_a-mga.o `test -f 'mga.c' || echo '$(srcdir)/'`mga.c

libmga_plugin_a-mga.obj: mga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_plugin_a_CFLAGS) $(CFLAGS) -MT libmga_plugin_a-mga.obj -MD -MP -MF "$(DEPDIR)/libmga_plugin_a-mga.Tpo" \
	  -c -o libmga_plugin_a-mga.obj `if test -f 'mga.c'; then $(CYGPATH_W) 'mga.c'; else $(CYGPATH_W) '$(srcdir)/mga.c'; fi`; \
	then mv -f "$(DEPDIR)/libmga_plugin_a-mga.Tpo" "$(DEPDIR)/libmga_plugin_a-mga.Po"; \
	else rm -f "$(DEPDIR)/libmga_plugin_a-mga.Tpo"; exit 1; \
	fi
#	source='mga.c' object='libmga_plugin_a-mga.obj' libtool=no \
#	depfile='$(DEPDIR)/libmga_plugin_a-mga.Po' tmpdepfile='$(DEPDIR)/libmga_plugin_a-mga.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmga_plugin_a_CFLAGS) $(CFLAGS) -c -o libmga_plugin_a-mga.obj `if test -f 'mga.c'; then $(CYGPATH_W) 'mga.c'; else $(CYGPATH_W) '$(srcdir)/mga.c'; fi`

libopengl_a-opengl.o: opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_a_CFLAGS) $(CFLAGS) -MT libopengl_a-opengl.o -MD -MP -MF "$(DEPDIR)/libopengl_a-opengl.Tpo" \
	  -c -o libopengl_a-opengl.o `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c; \
	then mv -f "$(DEPDIR)/libopengl_a-opengl.Tpo" "$(DEPDIR)/libopengl_a-opengl.Po"; \
	else rm -f "$(DEPDIR)/libopengl_a-opengl.Tpo"; exit 1; \
	fi
#	source='opengl.c' object='libopengl_a-opengl.o' libtool=no \
#	depfile='$(DEPDIR)/libopengl_a-opengl.Po' tmpdepfile='$(DEPDIR)/libopengl_a-opengl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_a_CFLAGS) $(CFLAGS) -c -o libopengl_a-opengl.o `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libopengl_a-opengl.obj: opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_a_CFLAGS) $(CFLAGS) -MT libopengl_a-opengl.obj -MD -MP -MF "$(DEPDIR)/libopengl_a-opengl.Tpo" \
	  -c -o libopengl_a-opengl.obj `if test -f 'opengl.c'; then $(CYGPATH_W) 'opengl.c'; else $(CYGPATH_W) '$(srcdir)/opengl.c'; fi`; \
	then mv -f "$(DEPDIR)/libopengl_a-opengl.Tpo" "$(DEPDIR)/libopengl_a-opengl.Po"; \
	else rm -f "$(DEPDIR)/libopengl_a-opengl.Tpo"; exit 1; \
	fi
#	source='opengl.c' object='libopengl_a-opengl.obj' libtool=no \
#	depfile='$(DEPDIR)/libopengl_a-opengl.Po' tmpdepfile='$(DEPDIR)/libopengl_a-opengl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_a_CFLAGS) $(CFLAGS) -c -o libopengl_a-opengl.obj `if test -f 'opengl.c'; then $(CYGPATH_W) 'opengl.c'; else $(CYGPATH_W) '$(srcdir)/opengl.c'; fi`

libopengl_pic_a-opengl.o: opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_pic_a_CFLAGS) $(CFLAGS) -MT libopengl_pic_a-opengl.o -MD -MP -MF "$(DEPDIR)/libopengl_pic_a-opengl.Tpo" \
	  -c -o libopengl_pic_a-opengl.o `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c; \
	then mv -f "$(DEPDIR)/libopengl_pic_a-opengl.Tpo" "$(DEPDIR)/libopengl_pic_a-opengl.Po"; \
	else rm -f "$(DEPDIR)/libopengl_pic_a-opengl.Tpo"; exit 1; \
	fi
#	source='opengl.c' object='libopengl_pic_a-opengl.o' libtool=no \
#	depfile='$(DEPDIR)/libopengl_pic_a-opengl.Po' tmpdepfile='$(DEPDIR)/libopengl_pic_a-opengl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_pic_a_CFLAGS) $(CFLAGS) -c -o libopengl_pic_a-opengl.o `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libopengl_pic_a-opengl.obj: opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_pic_a_CFLAGS) $(CFLAGS) -MT libopengl_pic_a-opengl.obj -MD -MP -MF "$(DEPDIR)/libopengl_pic_a-opengl.Tpo" \
	  -c -o libopengl_pic_a-opengl.obj `if test -f 'opengl.c'; then $(CYGPATH_W) 'opengl.c'; else $(CYGPATH_W) '$(srcdir)/opengl.c'; fi`; \
	then mv -f "$(DEPDIR)/libopengl_pic_a-opengl.Tpo" "$(DEPDIR)/libopengl_pic_a-opengl.Po"; \
	else rm -f "$(DEPDIR)/libopengl_pic_a-opengl.Tpo"; exit 1; \
	fi
#	source='opengl.c' object='libopengl_pic_a-opengl.obj' libtool=no \
#	depfile='$(DEPDIR)/libopengl_pic_a-opengl.Po' tmpdepfile='$(DEPDIR)/libopengl_pic_a-opengl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_pic_a_CFLAGS) $(CFLAGS) -c -o libopengl_pic_a-opengl.obj `if test -f 'opengl.c'; then $(CYGPATH_W) 'opengl.c'; else $(CYGPATH_W) '$(srcdir)/opengl.c'; fi`

libopengl_plugin_a-opengl.o: opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_plugin_a_CFLAGS) $(CFLAGS) -MT libopengl_plugin_a-opengl.o -MD -MP -MF "$(DEPDIR)/libopengl_plugin_a-opengl.Tpo" \
	  -c -o libopengl_plugin_a-opengl.o `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c; \
	then mv -f "$(DEPDIR)/libopengl_plugin_a-opengl.Tpo" "$(DEPDIR)/libopengl_plugin_a-opengl.Po"; \
	else rm -f "$(DEPDIR)/libopengl_plugin_a-opengl.Tpo"; exit 1; \
	fi
#	source='opengl.c' object='libopengl_plugin_a-opengl.o' libtool=no \
#	depfile='$(DEPDIR)/libopengl_plugin_a-opengl.Po' tmpdepfile='$(DEPDIR)/libopengl_plugin_a-opengl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_plugin_a_CFLAGS) $(CFLAGS) -c -o libopengl_plugin_a-opengl.o `test -f 'opengl.c' || echo '$(srcdir)/'`opengl.c

libopengl_plugin_a-opengl.obj: opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_plugin_a_CFLAGS) $(CFLAGS) -MT libopengl_plugin_a-opengl.obj -MD -MP -MF "$(DEPDIR)/libopengl_plugin_a-opengl.Tpo" \
	  -c -o libopengl_plugin_a-opengl.obj `if test -f 'opengl.c'; then $(CYGPATH_W) 'opengl.c'; else $(CYGPATH_W) '$(srcdir)/opengl.c'; fi`; \
	then mv -f "$(DEPDIR)/libopengl_plugin_a-opengl.Tpo" "$(DEPDIR)/libopengl_plugin_a-opengl.Po"; \
	else rm -f "$(DEPDIR)/libopengl_plugin_a-opengl.Tpo"; exit 1; \
	fi
#	source='opengl.c' object='libopengl_plugin_a-opengl.obj' libtool=no \
#	depfile='$(DEPDIR)/libopengl_plugin_a-opengl.Po' tmpdepfile='$(DEPDIR)/libopengl_plugin_a-opengl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libopengl_plugin_a_CFLAGS) $(CFLAGS) -c -o libopengl_plugin_a-opengl.obj `if test -f 'opengl.c'; then $(CYGPATH_W) 'opengl.c'; else $(CYGPATH_W) '$(srcdir)/opengl.c'; fi`

libsnapshot_a-snapshot.o: snapshot.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_a_CFLAGS) $(CFLAGS) -MT libsnapshot_a-snapshot.o -MD -MP -MF "$(DEPDIR)/libsnapshot_a-snapshot.Tpo" \
	  -c -o libsnapshot_a-snapshot.o `test -f 'snapshot.c' || echo '$(srcdir)/'`snapshot.c; \
	then mv -f "$(DEPDIR)/libsnapshot_a-snapshot.Tpo" "$(DEPDIR)/libsnapshot_a-snapshot.Po"; \
	else rm -f "$(DEPDIR)/libsnapshot_a-snapshot.Tpo"; exit 1; \
	fi
#	source='snapshot.c' object='libsnapshot_a-snapshot.o' libtool=no \
#	depfile='$(DEPDIR)/libsnapshot_a-snapshot.Po' tmpdepfile='$(DEPDIR)/libsnapshot_a-snapshot.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_a_CFLAGS) $(CFLAGS) -c -o libsnapshot_a-snapshot.o `test -f 'snapshot.c' || echo '$(srcdir)/'`snapshot.c

libsnapshot_a-snapshot.obj: snapshot.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_a_CFLAGS) $(CFLAGS) -MT libsnapshot_a-snapshot.obj -MD -MP -MF "$(DEPDIR)/libsnapshot_a-snapshot.Tpo" \
	  -c -o libsnapshot_a-snapshot.obj `if test -f 'snapshot.c'; then $(CYGPATH_W) 'snapshot.c'; else $(CYGPATH_W) '$(srcdir)/snapshot.c'; fi`; \
	then mv -f "$(DEPDIR)/libsnapshot_a-snapshot.Tpo" "$(DEPDIR)/libsnapshot_a-snapshot.Po"; \
	else rm -f "$(DEPDIR)/libsnapshot_a-snapshot.Tpo"; exit 1; \
	fi
#	source='snapshot.c' object='libsnapshot_a-snapshot.obj' libtool=no \
#	depfile='$(DEPDIR)/libsnapshot_a-snapshot.Po' tmpdepfile='$(DEPDIR)/libsnapshot_a-snapshot.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_a_CFLAGS) $(CFLAGS) -c -o libsnapshot_a-snapshot.obj `if test -f 'snapshot.c'; then $(CYGPATH_W) 'snapshot.c'; else $(CYGPATH_W) '$(srcdir)/snapshot.c'; fi`

libsnapshot_pic_a-snapshot.o: snapshot.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_pic_a_CFLAGS) $(CFLAGS) -MT libsnapshot_pic_a-snapshot.o -MD -MP -MF "$(DEPDIR)/libsnapshot_pic_a-snapshot.Tpo" \
	  -c -o libsnapshot_pic_a-snapshot.o `test -f 'snapshot.c' || echo '$(srcdir)/'`snapshot.c; \
	then mv -f "$(DEPDIR)/libsnapshot_pic_a-snapshot.Tpo" "$(DEPDIR)/libsnapshot_pic_a-snapshot.Po"; \
	else rm -f "$(DEPDIR)/libsnapshot_pic_a-snapshot.Tpo"; exit 1; \
	fi
#	source='snapshot.c' object='libsnapshot_pic_a-snapshot.o' libtool=no \
#	depfile='$(DEPDIR)/libsnapshot_pic_a-snapshot.Po' tmpdepfile='$(DEPDIR)/libsnapshot_pic_a-snapshot.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_pic_a_CFLAGS) $(CFLAGS) -c -o libsnapshot_pic_a-snapshot.o `test -f 'snapshot.c' || echo '$(srcdir)/'`snapshot.c

libsnapshot_pic_a-snapshot.obj: snapshot.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_pic_a_CFLAGS) $(CFLAGS) -MT libsnapshot_pic_a-snapshot.obj -MD -MP -MF "$(DEPDIR)/libsnapshot_pic_a-snapshot.Tpo" \
	  -c -o libsnapshot_pic_a-snapshot.obj `if test -f 'snapshot.c'; then $(CYGPATH_W) 'snapshot.c'; else $(CYGPATH_W) '$(srcdir)/snapshot.c'; fi`; \
	then mv -f "$(DEPDIR)/libsnapshot_pic_a-snapshot.Tpo" "$(DEPDIR)/libsnapshot_pic_a-snapshot.Po"; \
	else rm -f "$(DEPDIR)/libsnapshot_pic_a-snapshot.Tpo"; exit 1; \
	fi
#	source='snapshot.c' object='libsnapshot_pic_a-snapshot.obj' libtool=no \
#	depfile='$(DEPDIR)/libsnapshot_pic_a-snapshot.Po' tmpdepfile='$(DEPDIR)/libsnapshot_pic_a-snapshot.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_pic_a_CFLAGS) $(CFLAGS) -c -o libsnapshot_pic_a-snapshot.obj `if test -f 'snapshot.c'; then $(CYGPATH_W) 'snapshot.c'; else $(CYGPATH_W) '$(srcdir)/snapshot.c'; fi`

libsnapshot_plugin_a-snapshot.o: snapshot.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_plugin_a_CFLAGS) $(CFLAGS) -MT libsnapshot_plugin_a-snapshot.o -MD -MP -MF "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Tpo" \
	  -c -o libsnapshot_plugin_a-snapshot.o `test -f 'snapshot.c' || echo '$(srcdir)/'`snapshot.c; \
	then mv -f "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Tpo" "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Po"; \
	else rm -f "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Tpo"; exit 1; \
	fi
#	source='snapshot.c' object='libsnapshot_plugin_a-snapshot.o' libtool=no \
#	depfile='$(DEPDIR)/libsnapshot_plugin_a-snapshot.Po' tmpdepfile='$(DEPDIR)/libsnapshot_plugin_a-snapshot.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_plugin_a_CFLAGS) $(CFLAGS) -c -o libsnapshot_plugin_a-snapshot.o `test -f 'snapshot.c' || echo '$(srcdir)/'`snapshot.c

libsnapshot_plugin_a-snapshot.obj: snapshot.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_plugin_a_CFLAGS) $(CFLAGS) -MT libsnapshot_plugin_a-snapshot.obj -MD -MP -MF "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Tpo" \
	  -c -o libsnapshot_plugin_a-snapshot.obj `if test -f 'snapshot.c'; then $(CYGPATH_W) 'snapshot.c'; else $(CYGPATH_W) '$(srcdir)/snapshot.c'; fi`; \
	then mv -f "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Tpo" "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Po"; \
	else rm -f "$(DEPDIR)/libsnapshot_plugin_a-snapshot.Tpo"; exit 1; \
	fi
#	source='snapshot.c' object='libsnapshot_plugin_a-snapshot.obj' libtool=no \
#	depfile='$(DEPDIR)/libsnapshot_plugin_a-snapshot.Po' tmpdepfile='$(DEPDIR)/libsnapshot_plugin_a-snapshot.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnapshot_plugin_a_CFLAGS) $(CFLAGS) -c -o libsnapshot_plugin_a-snapshot.obj `if test -f 'snapshot.c'; then $(CYGPATH_W) 'snapshot.c'; else $(CYGPATH_W) '$(srcdir)/snapshot.c'; fi`

libsvgalib_a-svgalib.o: svgalib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_a_CFLAGS) $(CFLAGS) -MT libsvgalib_a-svgalib.o -MD -MP -MF "$(DEPDIR)/libsvgalib_a-svgalib.Tpo" \
	  -c -o libsvgalib_a-svgalib.o `test -f 'svgalib.c' || echo '$(srcdir)/'`svgalib.c; \
	then mv -f "$(DEPDIR)/libsvgalib_a-svgalib.Tpo" "$(DEPDIR)/libsvgalib_a-svgalib.Po"; \
	else rm -f "$(DEPDIR)/libsvgalib_a-svgalib.Tpo"; exit 1; \
	fi
#	source='svgalib.c' object='libsvgalib_a-svgalib.o' libtool=no \
#	depfile='$(DEPDIR)/libsvgalib_a-svgalib.Po' tmpdepfile='$(DEPDIR)/libsvgalib_a-svgalib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_a_CFLAGS) $(CFLAGS) -c -o libsvgalib_a-svgalib.o `test -f 'svgalib.c' || echo '$(srcdir)/'`svgalib.c

libsvgalib_a-svgalib.obj: svgalib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_a_CFLAGS) $(CFLAGS) -MT libsvgalib_a-svgalib.obj -MD -MP -MF "$(DEPDIR)/libsvgalib_a-svgalib.Tpo" \
	  -c -o libsvgalib_a-svgalib.obj `if test -f 'svgalib.c'; then $(CYGPATH_W) 'svgalib.c'; else $(CYGPATH_W) '$(srcdir)/svgalib.c'; fi`; \
	then mv -f "$(DEPDIR)/libsvgalib_a-svgalib.Tpo" "$(DEPDIR)/libsvgalib_a-svgalib.Po"; \
	else rm -f "$(DEPDIR)/libsvgalib_a-svgalib.Tpo"; exit 1; \
	fi
#	source='svgalib.c' object='libsvgalib_a-svgalib.obj' libtool=no \
#	depfile='$(DEPDIR)/libsvgalib_a-svgalib.Po' tmpdepfile='$(DEPDIR)/libsvgalib_a-svgalib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_a_CFLAGS) $(CFLAGS) -c -o libsvgalib_a-svgalib.obj `if test -f 'svgalib.c'; then $(CYGPATH_W) 'svgalib.c'; else $(CYGPATH_W) '$(srcdir)/svgalib.c'; fi`

libsvgalib_pic_a-svgalib.o: svgalib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_pic_a_CFLAGS) $(CFLAGS) -MT libsvgalib_pic_a-svgalib.o -MD -MP -MF "$(DEPDIR)/libsvgalib_pic_a-svgalib.Tpo" \
	  -c -o libsvgalib_pic_a-svgalib.o `test -f 'svgalib.c' || echo '$(srcdir)/'`svgalib.c; \
	then mv -f "$(DEPDIR)/libsvgalib_pic_a-svgalib.Tpo" "$(DEPDIR)/libsvgalib_pic_a-svgalib.Po"; \
	else rm -f "$(DEPDIR)/libsvgalib_pic_a-svgalib.Tpo"; exit 1; \
	fi
#	source='svgalib.c' object='libsvgalib_pic_a-svgalib.o' libtool=no \
#	depfile='$(DEPDIR)/libsvgalib_pic_a-svgalib.Po' tmpdepfile='$(DEPDIR)/libsvgalib_pic_a-svgalib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_pic_a_CFLAGS) $(CFLAGS) -c -o libsvgalib_pic_a-svgalib.o `test -f 'svgalib.c' || echo '$(srcdir)/'`svgalib.c

libsvgalib_pic_a-svgalib.obj: svgalib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_pic_a_CFLAGS) $(CFLAGS) -MT libsvgalib_pic_a-svgalib.obj -MD -MP -MF "$(DEPDIR)/libsvgalib_pic_a-svgalib.Tpo" \
	  -c -o libsvgalib_pic_a-svgalib.obj `if test -f 'svgalib.c'; then $(CYGPATH_W) 'svgalib.c'; else $(CYGPATH_W) '$(srcdir)/svgalib.c'; fi`; \
	then mv -f "$(DEPDIR)/libsvgalib_pic_a-svgalib.Tpo" "$(DEPDIR)/libsvgalib_pic_a-svgalib.Po"; \
	else rm -f "$(DEPDIR)/libsvgalib_pic_a-svgalib.Tpo"; exit 1; \
	fi
#	source='svgalib.c' object='libsvgalib_pic_a-svgalib.obj' libtool=no \
#	depfile='$(DEPDIR)/libsvgalib_pic_a-svgalib.Po' tmpdepfile='$(DEPDIR)/libsvgalib_pic_a-svgalib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_pic_a_CFLAGS) $(CFLAGS) -c -o libsvgalib_pic_a-svgalib.obj `if test -f 'svgalib.c'; then $(CYGPATH_W) 'svgalib.c'; else $(CYGPATH_W) '$(srcdir)/svgalib.c'; fi`

libsvgalib_plugin_a-svgalib.o: svgalib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_plugin_a_CFLAGS) $(CFLAGS) -MT libsvgalib_plugin_a-svgalib.o -MD -MP -MF "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Tpo" \
	  -c -o libsvgalib_plugin_a-svgalib.o `test -f 'svgalib.c' || echo '$(srcdir)/'`svgalib.c; \
	then mv -f "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Tpo" "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Po"; \
	else rm -f "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Tpo"; exit 1; \
	fi
#	source='svgalib.c' object='libsvgalib_plugin_a-svgalib.o' libtool=no \
#	depfile='$(DEPDIR)/libsvgalib_plugin_a-svgalib.Po' tmpdepfile='$(DEPDIR)/libsvgalib_plugin_a-svgalib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_plugin_a_CFLAGS) $(CFLAGS) -c -o libsvgalib_plugin_a-svgalib.o `test -f 'svgalib.c' || echo '$(srcdir)/'`svgalib.c

libsvgalib_plugin_a-svgalib.obj: svgalib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_plugin_a_CFLAGS) $(CFLAGS) -MT libsvgalib_plugin_a-svgalib.obj -MD -MP -MF "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Tpo" \
	  -c -o libsvgalib_plugin_a-svgalib.obj `if test -f 'svgalib.c'; then $(CYGPATH_W) 'svgalib.c'; else $(CYGPATH_W) '$(srcdir)/svgalib.c'; fi`; \
	then mv -f "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Tpo" "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Po"; \
	else rm -f "$(DEPDIR)/libsvgalib_plugin_a-svgalib.Tpo"; exit 1; \
	fi
#	source='svgalib.c' object='libsvgalib_plugin_a-svgalib.obj' libtool=no \
#	depfile='$(DEPDIR)/libsvgalib_plugin_a-svgalib.Po' tmpdepfile='$(DEPDIR)/libsvgalib_plugin_a-svgalib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsvgalib_plugin_a_CFLAGS) $(CFLAGS) -c -o libsvgalib_plugin_a-svgalib.obj `if test -f 'svgalib.c'; then $(CYGPATH_W) 'svgalib.c'; else $(CYGPATH_W) '$(srcdir)/svgalib.c'; fi`

libvout_sdl_a-sdl.o: sdl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_a_CFLAGS) $(CFLAGS) -MT libvout_sdl_a-sdl.o -MD -MP -MF "$(DEPDIR)/libvout_sdl_a-sdl.Tpo" \
	  -c -o libvout_sdl_a-sdl.o `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c; \
	then mv -f "$(DEPDIR)/libvout_sdl_a-sdl.Tpo" "$(DEPDIR)/libvout_sdl_a-sdl.Po"; \
	else rm -f "$(DEPDIR)/libvout_sdl_a-sdl.Tpo"; exit 1; \
	fi
#	source='sdl.c' object='libvout_sdl_a-sdl.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_sdl_a-sdl.Po' tmpdepfile='$(DEPDIR)/libvout_sdl_a-sdl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_a_CFLAGS) $(CFLAGS) -c -o libvout_sdl_a-sdl.o `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c

libvout_sdl_a-sdl.obj: sdl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_a_CFLAGS) $(CFLAGS) -MT libvout_sdl_a-sdl.obj -MD -MP -MF "$(DEPDIR)/libvout_sdl_a-sdl.Tpo" \
	  -c -o libvout_sdl_a-sdl.obj `if test -f 'sdl.c'; then $(CYGPATH_W) 'sdl.c'; else $(CYGPATH_W) '$(srcdir)/sdl.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_sdl_a-sdl.Tpo" "$(DEPDIR)/libvout_sdl_a-sdl.Po"; \
	else rm -f "$(DEPDIR)/libvout_sdl_a-sdl.Tpo"; exit 1; \
	fi
#	source='sdl.c' object='libvout_sdl_a-sdl.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_sdl_a-sdl.Po' tmpdepfile='$(DEPDIR)/libvout_sdl_a-sdl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_a_CFLAGS) $(CFLAGS) -c -o libvout_sdl_a-sdl.obj `if test -f 'sdl.c'; then $(CYGPATH_W) 'sdl.c'; else $(CYGPATH_W) '$(srcdir)/sdl.c'; fi`

libvout_sdl_pic_a-sdl.o: sdl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_pic_a_CFLAGS) $(CFLAGS) -MT libvout_sdl_pic_a-sdl.o -MD -MP -MF "$(DEPDIR)/libvout_sdl_pic_a-sdl.Tpo" \
	  -c -o libvout_sdl_pic_a-sdl.o `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c; \
	then mv -f "$(DEPDIR)/libvout_sdl_pic_a-sdl.Tpo" "$(DEPDIR)/libvout_sdl_pic_a-sdl.Po"; \
	else rm -f "$(DEPDIR)/libvout_sdl_pic_a-sdl.Tpo"; exit 1; \
	fi
#	source='sdl.c' object='libvout_sdl_pic_a-sdl.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_sdl_pic_a-sdl.Po' tmpdepfile='$(DEPDIR)/libvout_sdl_pic_a-sdl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_pic_a_CFLAGS) $(CFLAGS) -c -o libvout_sdl_pic_a-sdl.o `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c

libvout_sdl_pic_a-sdl.obj: sdl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_pic_a_CFLAGS) $(CFLAGS) -MT libvout_sdl_pic_a-sdl.obj -MD -MP -MF "$(DEPDIR)/libvout_sdl_pic_a-sdl.Tpo" \
	  -c -o libvout_sdl_pic_a-sdl.obj `if test -f 'sdl.c'; then $(CYGPATH_W) 'sdl.c'; else $(CYGPATH_W) '$(srcdir)/sdl.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_sdl_pic_a-sdl.Tpo" "$(DEPDIR)/libvout_sdl_pic_a-sdl.Po"; \
	else rm -f "$(DEPDIR)/libvout_sdl_pic_a-sdl.Tpo"; exit 1; \
	fi
#	source='sdl.c' object='libvout_sdl_pic_a-sdl.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_sdl_pic_a-sdl.Po' tmpdepfile='$(DEPDIR)/libvout_sdl_pic_a-sdl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_pic_a_CFLAGS) $(CFLAGS) -c -o libvout_sdl_pic_a-sdl.obj `if test -f 'sdl.c'; then $(CYGPATH_W) 'sdl.c'; else $(CYGPATH_W) '$(srcdir)/sdl.c'; fi`

libvout_sdl_plugin_a-sdl.o: sdl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_plugin_a_CFLAGS) $(CFLAGS) -MT libvout_sdl_plugin_a-sdl.o -MD -MP -MF "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Tpo" \
	  -c -o libvout_sdl_plugin_a-sdl.o `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c; \
	then mv -f "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Tpo" "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Po"; \
	else rm -f "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Tpo"; exit 1; \
	fi
#	source='sdl.c' object='libvout_sdl_plugin_a-sdl.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_sdl_plugin_a-sdl.Po' tmpdepfile='$(DEPDIR)/libvout_sdl_plugin_a-sdl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_plugin_a_CFLAGS) $(CFLAGS) -c -o libvout_sdl_plugin_a-sdl.o `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c

libvout_sdl_plugin_a-sdl.obj: sdl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_plugin_a_CFLAGS) $(CFLAGS) -MT libvout_sdl_plugin_a-sdl.obj -MD -MP -MF "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Tpo" \
	  -c -o libvout_sdl_plugin_a-sdl.obj `if test -f 'sdl.c'; then $(CYGPATH_W) 'sdl.c'; else $(CYGPATH_W) '$(srcdir)/sdl.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Tpo" "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Po"; \
	else rm -f "$(DEPDIR)/libvout_sdl_plugin_a-sdl.Tpo"; exit 1; \
	fi
#	source='sdl.c' object='libvout_sdl_plugin_a-sdl.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_sdl_plugin_a-sdl.Po' tmpdepfile='$(DEPDIR)/libvout_sdl_plugin_a-sdl.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_sdl_plugin_a_CFLAGS) $(CFLAGS) -c -o libvout_sdl_plugin_a-sdl.obj `if test -f 'sdl.c'; then $(CYGPATH_W) 'sdl.c'; else $(CYGPATH_W) '$(srcdir)/sdl.c'; fi`

libwingdi_a-wingdi.o: wingdi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_a_CFLAGS) $(CFLAGS) -MT libwingdi_a-wingdi.o -MD -MP -MF "$(DEPDIR)/libwingdi_a-wingdi.Tpo" \
	  -c -o libwingdi_a-wingdi.o `test -f 'wingdi.c' || echo '$(srcdir)/'`wingdi.c; \
	then mv -f "$(DEPDIR)/libwingdi_a-wingdi.Tpo" "$(DEPDIR)/libwingdi_a-wingdi.Po"; \
	else rm -f "$(DEPDIR)/libwingdi_a-wingdi.Tpo"; exit 1; \
	fi
#	source='wingdi.c' object='libwingdi_a-wingdi.o' libtool=no \
#	depfile='$(DEPDIR)/libwingdi_a-wingdi.Po' tmpdepfile='$(DEPDIR)/libwingdi_a-wingdi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_a_CFLAGS) $(CFLAGS) -c -o libwingdi_a-wingdi.o `test -f 'wingdi.c' || echo '$(srcdir)/'`wingdi.c

libwingdi_a-wingdi.obj: wingdi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_a_CFLAGS) $(CFLAGS) -MT libwingdi_a-wingdi.obj -MD -MP -MF "$(DEPDIR)/libwingdi_a-wingdi.Tpo" \
	  -c -o libwingdi_a-wingdi.obj `if test -f 'wingdi.c'; then $(CYGPATH_W) 'wingdi.c'; else $(CYGPATH_W) '$(srcdir)/wingdi.c'; fi`; \
	then mv -f "$(DEPDIR)/libwingdi_a-wingdi.Tpo" "$(DEPDIR)/libwingdi_a-wingdi.Po"; \
	else rm -f "$(DEPDIR)/libwingdi_a-wingdi.Tpo"; exit 1; \
	fi
#	source='wingdi.c' object='libwingdi_a-wingdi.obj' libtool=no \
#	depfile='$(DEPDIR)/libwingdi_a-wingdi.Po' tmpdepfile='$(DEPDIR)/libwingdi_a-wingdi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_a_CFLAGS) $(CFLAGS) -c -o libwingdi_a-wingdi.obj `if test -f 'wingdi.c'; then $(CYGPATH_W) 'wingdi.c'; else $(CYGPATH_W) '$(srcdir)/wingdi.c'; fi`

libwingdi_pic_a-wingdi.o: wingdi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_pic_a_CFLAGS) $(CFLAGS) -MT libwingdi_pic_a-wingdi.o -MD -MP -MF "$(DEPDIR)/libwingdi_pic_a-wingdi.Tpo" \
	  -c -o libwingdi_pic_a-wingdi.o `test -f 'wingdi.c' || echo '$(srcdir)/'`wingdi.c; \
	then mv -f "$(DEPDIR)/libwingdi_pic_a-wingdi.Tpo" "$(DEPDIR)/libwingdi_pic_a-wingdi.Po"; \
	else rm -f "$(DEPDIR)/libwingdi_pic_a-wingdi.Tpo"; exit 1; \
	fi
#	source='wingdi.c' object='libwingdi_pic_a-wingdi.o' libtool=no \
#	depfile='$(DEPDIR)/libwingdi_pic_a-wingdi.Po' tmpdepfile='$(DEPDIR)/libwingdi_pic_a-wingdi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_pic_a_CFLAGS) $(CFLAGS) -c -o libwingdi_pic_a-wingdi.o `test -f 'wingdi.c' || echo '$(srcdir)/'`wingdi.c

libwingdi_pic_a-wingdi.obj: wingdi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_pic_a_CFLAGS) $(CFLAGS) -MT libwingdi_pic_a-wingdi.obj -MD -MP -MF "$(DEPDIR)/libwingdi_pic_a-wingdi.Tpo" \
	  -c -o libwingdi_pic_a-wingdi.obj `if test -f 'wingdi.c'; then $(CYGPATH_W) 'wingdi.c'; else $(CYGPATH_W) '$(srcdir)/wingdi.c'; fi`; \
	then mv -f "$(DEPDIR)/libwingdi_pic_a-wingdi.Tpo" "$(DEPDIR)/libwingdi_pic_a-wingdi.Po"; \
	else rm -f "$(DEPDIR)/libwingdi_pic_a-wingdi.Tpo"; exit 1; \
	fi
#	source='wingdi.c' object='libwingdi_pic_a-wingdi.obj' libtool=no \
#	depfile='$(DEPDIR)/libwingdi_pic_a-wingdi.Po' tmpdepfile='$(DEPDIR)/libwingdi_pic_a-wingdi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_pic_a_CFLAGS) $(CFLAGS) -c -o libwingdi_pic_a-wingdi.obj `if test -f 'wingdi.c'; then $(CYGPATH_W) 'wingdi.c'; else $(CYGPATH_W) '$(srcdir)/wingdi.c'; fi`

libwingdi_plugin_a-wingdi.o: wingdi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_plugin_a_CFLAGS) $(CFLAGS) -MT libwingdi_plugin_a-wingdi.o -MD -MP -MF "$(DEPDIR)/libwingdi_plugin_a-wingdi.Tpo" \
	  -c -o libwingdi_plugin_a-wingdi.o `test -f 'wingdi.c' || echo '$(srcdir)/'`wingdi.c; \
	then mv -f "$(DEPDIR)/libwingdi_plugin_a-wingdi.Tpo" "$(DEPDIR)/libwingdi_plugin_a-wingdi.Po"; \
	else rm -f "$(DEPDIR)/libwingdi_plugin_a-wingdi.Tpo"; exit 1; \
	fi
#	source='wingdi.c' object='libwingdi_plugin_a-wingdi.o' libtool=no \
#	depfile='$(DEPDIR)/libwingdi_plugin_a-wingdi.Po' tmpdepfile='$(DEPDIR)/libwingdi_plugin_a-wingdi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_plugin_a_CFLAGS) $(CFLAGS) -c -o libwingdi_plugin_a-wingdi.o `test -f 'wingdi.c' || echo '$(srcdir)/'`wingdi.c

libwingdi_plugin_a-wingdi.obj: wingdi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_plugin_a_CFLAGS) $(CFLAGS) -MT libwingdi_plugin_a-wingdi.obj -MD -MP -MF "$(DEPDIR)/libwingdi_plugin_a-wingdi.Tpo" \
	  -c -o libwingdi_plugin_a-wingdi.obj `if test -f 'wingdi.c'; then $(CYGPATH_W) 'wingdi.c'; else $(CYGPATH_W) '$(srcdir)/wingdi.c'; fi`; \
	then mv -f "$(DEPDIR)/libwingdi_plugin_a-wingdi.Tpo" "$(DEPDIR)/libwingdi_plugin_a-wingdi.Po"; \
	else rm -f "$(DEPDIR)/libwingdi_plugin_a-wingdi.Tpo"; exit 1; \
	fi
#	source='wingdi.c' object='libwingdi_plugin_a-wingdi.obj' libtool=no \
#	depfile='$(DEPDIR)/libwingdi_plugin_a-wingdi.Po' tmpdepfile='$(DEPDIR)/libwingdi_plugin_a-wingdi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwingdi_plugin_a_CFLAGS) $(CFLAGS) -c -o libwingdi_plugin_a-wingdi.obj `if test -f 'wingdi.c'; then $(CYGPATH_W) 'wingdi.c'; else $(CYGPATH_W) '$(srcdir)/wingdi.c'; fi`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

libhd1000v_a-hd1000v.o: hd1000v.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_a_CXXFLAGS) $(CXXFLAGS) -MT libhd1000v_a-hd1000v.o -MD -MP -MF "$(DEPDIR)/libhd1000v_a-hd1000v.Tpo" \
	  -c -o libhd1000v_a-hd1000v.o `test -f 'hd1000v.cpp' || echo '$(srcdir)/'`hd1000v.cpp; \
	then mv -f "$(DEPDIR)/libhd1000v_a-hd1000v.Tpo" "$(DEPDIR)/libhd1000v_a-hd1000v.Po"; \
	else rm -f "$(DEPDIR)/libhd1000v_a-hd1000v.Tpo"; exit 1; \
	fi
#	source='hd1000v.cpp' object='libhd1000v_a-hd1000v.o' libtool=no \
#	depfile='$(DEPDIR)/libhd1000v_a-hd1000v.Po' tmpdepfile='$(DEPDIR)/libhd1000v_a-hd1000v.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_a_CXXFLAGS) $(CXXFLAGS) -c -o libhd1000v_a-hd1000v.o `test -f 'hd1000v.cpp' || echo '$(srcdir)/'`hd1000v.cpp

libhd1000v_a-hd1000v.obj: hd1000v.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_a_CXXFLAGS) $(CXXFLAGS) -MT libhd1000v_a-hd1000v.obj -MD -MP -MF "$(DEPDIR)/libhd1000v_a-hd1000v.Tpo" \
	  -c -o libhd1000v_a-hd1000v.obj `if test -f 'hd1000v.cpp'; then $(CYGPATH_W) 'hd1000v.cpp'; else $(CYGPATH_W) '$(srcdir)/hd1000v.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libhd1000v_a-hd1000v.Tpo" "$(DEPDIR)/libhd1000v_a-hd1000v.Po"; \
	else rm -f "$(DEPDIR)/libhd1000v_a-hd1000v.Tpo"; exit 1; \
	fi
#	source='hd1000v.cpp' object='libhd1000v_a-hd1000v.obj' libtool=no \
#	depfile='$(DEPDIR)/libhd1000v_a-hd1000v.Po' tmpdepfile='$(DEPDIR)/libhd1000v_a-hd1000v.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_a_CXXFLAGS) $(CXXFLAGS) -c -o libhd1000v_a-hd1000v.obj `if test -f 'hd1000v.cpp'; then $(CYGPATH_W) 'hd1000v.cpp'; else $(CYGPATH_W) '$(srcdir)/hd1000v.cpp'; fi`

libhd1000v_pic_a-hd1000v.o: hd1000v.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libhd1000v_pic_a-hd1000v.o -MD -MP -MF "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Tpo" \
	  -c -o libhd1000v_pic_a-hd1000v.o `test -f 'hd1000v.cpp' || echo '$(srcdir)/'`hd1000v.cpp; \
	then mv -f "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Tpo" "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Po"; \
	else rm -f "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Tpo"; exit 1; \
	fi
#	source='hd1000v.cpp' object='libhd1000v_pic_a-hd1000v.o' libtool=no \
#	depfile='$(DEPDIR)/libhd1000v_pic_a-hd1000v.Po' tmpdepfile='$(DEPDIR)/libhd1000v_pic_a-hd1000v.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libhd1000v_pic_a-hd1000v.o `test -f 'hd1000v.cpp' || echo '$(srcdir)/'`hd1000v.cpp

libhd1000v_pic_a-hd1000v.obj: hd1000v.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_pic_a_CXXFLAGS) $(CXXFLAGS) -MT libhd1000v_pic_a-hd1000v.obj -MD -MP -MF "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Tpo" \
	  -c -o libhd1000v_pic_a-hd1000v.obj `if test -f 'hd1000v.cpp'; then $(CYGPATH_W) 'hd1000v.cpp'; else $(CYGPATH_W) '$(srcdir)/hd1000v.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Tpo" "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Po"; \
	else rm -f "$(DEPDIR)/libhd1000v_pic_a-hd1000v.Tpo"; exit 1; \
	fi
#	source='hd1000v.cpp' object='libhd1000v_pic_a-hd1000v.obj' libtool=no \
#	depfile='$(DEPDIR)/libhd1000v_pic_a-hd1000v.Po' tmpdepfile='$(DEPDIR)/libhd1000v_pic_a-hd1000v.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_pic_a_CXXFLAGS) $(CXXFLAGS) -c -o libhd1000v_pic_a-hd1000v.obj `if test -f 'hd1000v.cpp'; then $(CYGPATH_W) 'hd1000v.cpp'; else $(CYGPATH_W) '$(srcdir)/hd1000v.cpp'; fi`

libhd1000v_plugin_a-hd1000v.o: hd1000v.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libhd1000v_plugin_a-hd1000v.o -MD -MP -MF "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Tpo" \
	  -c -o libhd1000v_plugin_a-hd1000v.o `test -f 'hd1000v.cpp' || echo '$(srcdir)/'`hd1000v.cpp; \
	then mv -f "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Tpo" "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Po"; \
	else rm -f "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Tpo"; exit 1; \
	fi
#	source='hd1000v.cpp' object='libhd1000v_plugin_a-hd1000v.o' libtool=no \
#	depfile='$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Po' tmpdepfile='$(DEPDIR)/libhd1000v_plugin_a-hd1000v.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libhd1000v_plugin_a-hd1000v.o `test -f 'hd1000v.cpp' || echo '$(srcdir)/'`hd1000v.cpp

libhd1000v_plugin_a-hd1000v.obj: hd1000v.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_plugin_a_CXXFLAGS) $(CXXFLAGS) -MT libhd1000v_plugin_a-hd1000v.obj -MD -MP -MF "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Tpo" \
	  -c -o libhd1000v_plugin_a-hd1000v.obj `if test -f 'hd1000v.cpp'; then $(CYGPATH_W) 'hd1000v.cpp'; else $(CYGPATH_W) '$(srcdir)/hd1000v.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Tpo" "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Po"; \
	else rm -f "$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Tpo"; exit 1; \
	fi
#	source='hd1000v.cpp' object='libhd1000v_plugin_a-hd1000v.obj' libtool=no \
#	depfile='$(DEPDIR)/libhd1000v_plugin_a-hd1000v.Po' tmpdepfile='$(DEPDIR)/libhd1000v_plugin_a-hd1000v.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhd1000v_plugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libhd1000v_plugin_a-hd1000v.obj `if test -f 'hd1000v.cpp'; then $(CYGPATH_W) 'hd1000v.cpp'; else $(CYGPATH_W) '$(srcdir)/hd1000v.cpp'; fi`
uninstall-info-am:
libaaDATA_INSTALL = $(INSTALL_DATA)
install-libaaDATA: $(libaa_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libaadir)
	@list='$(libaa_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libaaDATA_INSTALL) $$d$$p $(DESTDIR)$(libaadir)/$$f"; \
	  $(libaaDATA_INSTALL) $$d$$p $(DESTDIR)$(libaadir)/$$f; \
	done

uninstall-libaaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libaa_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libaadir)/$$f"; \
	  rm -f $(DESTDIR)$(libaadir)/$$f; \
	done
libcacaDATA_INSTALL = $(INSTALL_DATA)
install-libcacaDATA: $(libcaca_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libcacadir)
	@list='$(libcaca_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libcacaDATA_INSTALL) $$d$$p $(DESTDIR)$(libcacadir)/$$f"; \
	  $(libcacaDATA_INSTALL) $$d$$p $(DESTDIR)$(libcacadir)/$$f; \
	done

uninstall-libcacaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libcaca_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libcacadir)/$$f"; \
	  rm -f $(DESTDIR)$(libcacadir)/$$f; \
	done
libfbDATA_INSTALL = $(INSTALL_DATA)
install-libfbDATA: $(libfb_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libfbdir)
	@list='$(libfb_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libfbDATA_INSTALL) $$d$$p $(DESTDIR)$(libfbdir)/$$f"; \
	  $(libfbDATA_INSTALL) $$d$$p $(DESTDIR)$(libfbdir)/$$f; \
	done

uninstall-libfbDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libfb_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libfbdir)/$$f"; \
	  rm -f $(DESTDIR)$(libfbdir)/$$f; \
	done
libggiDATA_INSTALL = $(INSTALL_DATA)
install-libggiDATA: $(libggi_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libggidir)
	@list='$(libggi_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libggiDATA_INSTALL) $$d$$p $(DESTDIR)$(libggidir)/$$f"; \
	  $(libggiDATA_INSTALL) $$d$$p $(DESTDIR)$(libggidir)/$$f; \
	done

uninstall-libggiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libggi_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libggidir)/$$f"; \
	  rm -f $(DESTDIR)$(libggidir)/$$f; \
	done
libglideDATA_INSTALL = $(INSTALL_DATA)
install-libglideDATA: $(libglide_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libglidedir)
	@list='$(libglide_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libglideDATA_INSTALL) $$d$$p $(DESTDIR)$(libglidedir)/$$f"; \
	  $(libglideDATA_INSTALL) $$d$$p $(DESTDIR)$(libglidedir)/$$f; \
	done

uninstall-libglideDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libglide_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libglidedir)/$$f"; \
	  rm -f $(DESTDIR)$(libglidedir)/$$f; \
	done
libhd1000vDATA_INSTALL = $(INSTALL_DATA)
install-libhd1000vDATA: $(libhd1000v_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libhd1000vdir)
	@list='$(libhd1000v_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libhd1000vDATA_INSTALL) $$d$$p $(DESTDIR)$(libhd1000vdir)/$$f"; \
	  $(libhd1000vDATA_INSTALL) $$d$$p $(DESTDIR)$(libhd1000vdir)/$$f; \
	done

uninstall-libhd1000vDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libhd1000v_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libhd1000vdir)/$$f"; \
	  rm -f $(DESTDIR)$(libhd1000vdir)/$$f; \
	done
libmgaDATA_INSTALL = $(INSTALL_DATA)
install-libmgaDATA: $(libmga_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libmgadir)
	@list='$(libmga_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libmgaDATA_INSTALL) $$d$$p $(DESTDIR)$(libmgadir)/$$f"; \
	  $(libmgaDATA_INSTALL) $$d$$p $(DESTDIR)$(libmgadir)/$$f; \
	done

uninstall-libmgaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libmga_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libmgadir)/$$f"; \
	  rm -f $(DESTDIR)$(libmgadir)/$$f; \
	done
libopenglDATA_INSTALL = $(INSTALL_DATA)
install-libopenglDATA: $(libopengl_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libopengldir)
	@list='$(libopengl_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libopenglDATA_INSTALL) $$d$$p $(DESTDIR)$(libopengldir)/$$f"; \
	  $(libopenglDATA_INSTALL) $$d$$p $(DESTDIR)$(libopengldir)/$$f; \
	done

uninstall-libopenglDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libopengl_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libopengldir)/$$f"; \
	  rm -f $(DESTDIR)$(libopengldir)/$$f; \
	done
libsnapshotDATA_INSTALL = $(INSTALL_DATA)
install-libsnapshotDATA: $(libsnapshot_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libsnapshotdir)
	@list='$(libsnapshot_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libsnapshotDATA_INSTALL) $$d$$p $(DESTDIR)$(libsnapshotdir)/$$f"; \
	  $(libsnapshotDATA_INSTALL) $$d$$p $(DESTDIR)$(libsnapshotdir)/$$f; \
	done

uninstall-libsnapshotDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libsnapshot_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libsnapshotdir)/$$f"; \
	  rm -f $(DESTDIR)$(libsnapshotdir)/$$f; \
	done
libsvgalibDATA_INSTALL = $(INSTALL_DATA)
install-libsvgalibDATA: $(libsvgalib_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libsvgalibdir)
	@list='$(libsvgalib_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libsvgalibDATA_INSTALL) $$d$$p $(DESTDIR)$(libsvgalibdir)/$$f"; \
	  $(libsvgalibDATA_INSTALL) $$d$$p $(DESTDIR)$(libsvgalibdir)/$$f; \
	done

uninstall-libsvgalibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libsvgalib_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libsvgalibdir)/$$f"; \
	  rm -f $(DESTDIR)$(libsvgalibdir)/$$f; \
	done
libvout_sdlDATA_INSTALL = $(INSTALL_DATA)
install-libvout_sdlDATA: $(libvout_sdl_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libvout_sdldir)
	@list='$(libvout_sdl_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libvout_sdlDATA_INSTALL) $$d$$p $(DESTDIR)$(libvout_sdldir)/$$f"; \
	  $(libvout_sdlDATA_INSTALL) $$d$$p $(DESTDIR)$(libvout_sdldir)/$$f; \
	done

uninstall-libvout_sdlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libvout_sdl_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libvout_sdldir)/$$f"; \
	  rm -f $(DESTDIR)$(libvout_sdldir)/$$f; \
	done
libwingdiDATA_INSTALL = $(INSTALL_DATA)
install-libwingdiDATA: $(libwingdi_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libwingdidir)
	@list='$(libwingdi_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libwingdiDATA_INSTALL) $$d$$p $(DESTDIR)$(libwingdidir)/$$f"; \
	  $(libwingdiDATA_INSTALL) $$d$$p $(DESTDIR)$(libwingdidir)/$$f; \
	done

uninstall-libwingdiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libwingdi_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libwingdidir)/$$f"; \
	  rm -f $(DESTDIR)$(libwingdidir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libvlcdir) $(DESTDIR)$(libaadir) $(DESTDIR)$(libcacadir) $(DESTDIR)$(libfbdir) $(DESTDIR)$(libggidir) $(DESTDIR)$(libglidedir) $(DESTDIR)$(libhd1000vdir) $(DESTDIR)$(libmgadir) $(DESTDIR)$(libopengldir) $(DESTDIR)$(libsnapshotdir) $(DESTDIR)$(libsvgalibdir) $(DESTDIR)$(libvout_sdldir) $(DESTDIR)$(libwingdidir)

install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libvlcLIBRARIES clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-libaaDATA install-libcacaDATA install-libfbDATA \
	install-libggiDATA install-libglideDATA install-libhd1000vDATA \
	install-libmgaDATA install-libopenglDATA \
	install-libsnapshotDATA install-libsvgalibDATA \
	install-libvlcLIBRARIES install-libvout_sdlDATA \
	install-libwingdiDATA

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libaaDATA \
	uninstall-libcacaDATA uninstall-libfbDATA uninstall-libggiDATA \
	uninstall-libglideDATA uninstall-libhd1000vDATA \
	uninstall-libmgaDATA uninstall-libopenglDATA \
	uninstall-libsnapshotDATA uninstall-libsvgalibDATA \
	uninstall-libvlcLIBRARIES uninstall-libvout_sdlDATA \
	uninstall-libwingdiDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-generic clean-libvlcLIBRARIES clean-local \
	clean-noinstLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive \
	install-libaaDATA install-libcacaDATA install-libfbDATA \
	install-libggiDATA install-libglideDATA install-libhd1000vDATA \
	install-libmgaDATA install-libopenglDATA \
	install-libsnapshotDATA install-libsvgalibDATA \
	install-libvlcLIBRARIES install-libvout_sdlDATA \
	install-libwingdiDATA install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
	tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-libaaDATA \
	uninstall-libcacaDATA uninstall-libfbDATA uninstall-libggiDATA \
	uninstall-libglideDATA uninstall-libhd1000vDATA \
	uninstall-libmgaDATA uninstall-libopenglDATA \
	uninstall-libsnapshotDATA uninstall-libsvgalibDATA \
	uninstall-libvlcLIBRARIES uninstall-libvout_sdlDATA \
	uninstall-libwingdiDATA uninstall-recursive


clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in aa caca fb ggi glide vout_sdl svgalib wingdi mga hd1000v snapshot opengl; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in aa caca fb ggi glide vout_sdl svgalib wingdi mga hd1000v snapshot opengl; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in aa caca fb ggi glide vout_sdl svgalib wingdi mga hd1000v snapshot opengl; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"
libaa_plugin$(LIBEXT): $(libaa_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage aa` in \
	  c++) echo $(CXXLINK) $(libaa_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aa\` ; $(CXXLINK) $(libaa_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aa` ;; \
	  objc) echo $(OBJCLINK) $(libaa_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aa\` ; $(OBJCLINK) $(libaa_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aa` ;; \
	  c|*) echo $(LINK) $(libaa_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin aa\` ; $(LINK) $(libaa_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin aa` ;; \
	esac
libcaca_plugin$(LIBEXT): $(libcaca_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage caca` in \
	  c++) echo $(CXXLINK) $(libcaca_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin caca\` ; $(CXXLINK) $(libcaca_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin caca` ;; \
	  objc) echo $(OBJCLINK) $(libcaca_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin caca\` ; $(OBJCLINK) $(libcaca_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin caca` ;; \
	  c|*) echo $(LINK) $(libcaca_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin caca\` ; $(LINK) $(libcaca_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin caca` ;; \
	esac
libfb_plugin$(LIBEXT): $(libfb_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage fb` in \
	  c++) echo $(CXXLINK) $(libfb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fb\` ; $(CXXLINK) $(libfb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fb` ;; \
	  objc) echo $(OBJCLINK) $(libfb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fb\` ; $(OBJCLINK) $(libfb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fb` ;; \
	  c|*) echo $(LINK) $(libfb_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin fb\` ; $(LINK) $(libfb_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin fb` ;; \
	esac
libggi_plugin$(LIBEXT): $(libggi_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage ggi` in \
	  c++) echo $(CXXLINK) $(libggi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ggi\` ; $(CXXLINK) $(libggi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ggi` ;; \
	  objc) echo $(OBJCLINK) $(libggi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ggi\` ; $(OBJCLINK) $(libggi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ggi` ;; \
	  c|*) echo $(LINK) $(libggi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin ggi\` ; $(LINK) $(libggi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin ggi` ;; \
	esac
libglide_plugin$(LIBEXT): $(libglide_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage glide` in \
	  c++) echo $(CXXLINK) $(libglide_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glide\` ; $(CXXLINK) $(libglide_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glide` ;; \
	  objc) echo $(OBJCLINK) $(libglide_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glide\` ; $(OBJCLINK) $(libglide_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glide` ;; \
	  c|*) echo $(LINK) $(libglide_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glide\` ; $(LINK) $(libglide_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glide` ;; \
	esac
libvout_sdl_plugin$(LIBEXT): $(libvout_sdl_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage vout_sdl` in \
	  c++) echo $(CXXLINK) $(libvout_sdl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_sdl\` ; $(CXXLINK) $(libvout_sdl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_sdl` ;; \
	  objc) echo $(OBJCLINK) $(libvout_sdl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_sdl\` ; $(OBJCLINK) $(libvout_sdl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_sdl` ;; \
	  c|*) echo $(LINK) $(libvout_sdl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_sdl\` ; $(LINK) $(libvout_sdl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_sdl` ;; \
	esac
libsvgalib_plugin$(LIBEXT): $(libsvgalib_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage svgalib` in \
	  c++) echo $(CXXLINK) $(libsvgalib_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svgalib\` ; $(CXXLINK) $(libsvgalib_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svgalib` ;; \
	  objc) echo $(OBJCLINK) $(libsvgalib_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svgalib\` ; $(OBJCLINK) $(libsvgalib_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svgalib` ;; \
	  c|*) echo $(LINK) $(libsvgalib_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin svgalib\` ; $(LINK) $(libsvgalib_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin svgalib` ;; \
	esac
libwingdi_plugin$(LIBEXT): $(libwingdi_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage wingdi` in \
	  c++) echo $(CXXLINK) $(libwingdi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wingdi\` ; $(CXXLINK) $(libwingdi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wingdi` ;; \
	  objc) echo $(OBJCLINK) $(libwingdi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wingdi\` ; $(OBJCLINK) $(libwingdi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wingdi` ;; \
	  c|*) echo $(LINK) $(libwingdi_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin wingdi\` ; $(LINK) $(libwingdi_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin wingdi` ;; \
	esac
libmga_plugin$(LIBEXT): $(libmga_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage mga` in \
	  c++) echo $(CXXLINK) $(libmga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mga\` ; $(CXXLINK) $(libmga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mga` ;; \
	  objc) echo $(OBJCLINK) $(libmga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mga\` ; $(OBJCLINK) $(libmga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mga` ;; \
	  c|*) echo $(LINK) $(libmga_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin mga\` ; $(LINK) $(libmga_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin mga` ;; \
	esac
libhd1000v_plugin$(LIBEXT): $(libhd1000v_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage hd1000v` in \
	  c++) echo $(CXXLINK) $(libhd1000v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin hd1000v\` ; $(CXXLINK) $(libhd1000v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin hd1000v` ;; \
	  objc) echo $(OBJCLINK) $(libhd1000v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin hd1000v\` ; $(OBJCLINK) $(libhd1000v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin hd1000v` ;; \
	  c|*) echo $(LINK) $(libhd1000v_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin hd1000v\` ; $(LINK) $(libhd1000v_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin hd1000v` ;; \
	esac
libsnapshot_plugin$(LIBEXT): $(libsnapshot_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage snapshot` in \
	  c++) echo $(CXXLINK) $(libsnapshot_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin snapshot\` ; $(CXXLINK) $(libsnapshot_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin snapshot` ;; \
	  objc) echo $(OBJCLINK) $(libsnapshot_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin snapshot\` ; $(OBJCLINK) $(libsnapshot_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin snapshot` ;; \
	  c|*) echo $(LINK) $(libsnapshot_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin snapshot\` ; $(LINK) $(libsnapshot_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin snapshot` ;; \
	esac
libopengl_plugin$(LIBEXT): $(libopengl_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage opengl` in \
	  c++) echo $(CXXLINK) $(libopengl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin opengl\` ; $(CXXLINK) $(libopengl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin opengl` ;; \
	  objc) echo $(OBJCLINK) $(libopengl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin opengl\` ; $(OBJCLINK) $(libopengl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin opengl` ;; \
	  c|*) echo $(LINK) $(libopengl_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin opengl\` ; $(LINK) $(libopengl_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin opengl` ;; \
	esac
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
