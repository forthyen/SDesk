# Makefile.in generated by automake 1.7.9 from Makefile.am.
# modules/video_output/directx/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Autogenerated by bootstrap - DO NOT EDIT - edit Modules.am instead

srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/vlc
pkglibdir = $(libdir)/vlc
pkgincludedir = $(includedir)/vlc
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = ../../../autotools/install-sh -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = mipsel-unknown-linux-gnu
host_triplet = mipsel-unknown-linux-gnu
target_triplet = mipsel-unknown-linux-gnu
ACLOCAL = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run aclocal-1.7
ALIASES = 
ALLOCA = 
ALL_LINGUAS = da de en_GB es fr hu it ja nl no pl pt_BR ru sv
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run tar
AR = ar
ARCH = mipsel
ARTS_CONFIG = 
ASM = 
AUTOCONF = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run automake-1.7
AWK = gawk
BUILD_DIRENT_FALSE = 
BUILD_DIRENT_TRUE = #
BUILD_GETOPT_FALSE = 
BUILD_GETOPT_TRUE = #
BUILD_INCLUDED_LIBINTL = no
BUILD_INTL_FALSE = 
BUILD_INTL_TRUE = #
BUILD_MOZILLA_FALSE = 
BUILD_MOZILLA_TRUE = #
CACA_CONFIG = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wsign-compare -Wall -I/usr/tools/roku/include -I/usr/include -I/usr/local/include -I/usr/local/include/roku -pipe
CORBA_CFLAGS = 
CORBA_LIBS = 
CPP = gcc -E
CPPFLAGS =  -DSYS_LINUX -I$(top_srcdir)/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wsign-compare -Wsign-compare -Wall -I/usr/tools/roku/include -I/usr/include -I/usr/local/include -I/usr/local/include/roku -pipe
CYGPATH = 
CYGPATH_W = echo
DATADIRNAME = share
DATA_PATH = /share/vlc
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DVDNAV_CONFIG = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_CORBA_FALSE = 
ENABLE_CORBA_TRUE = #
ESD_CONFIG = 
EXEEXT = 
FFMPEG_CONFIG = 
FREETYPE_CONFIG = 
FRIBIDI_CONFIG = 
GENCAT = gencat
GLIBC21 = yes
GMSGFMT = /usr/bin/msgfmt
GTK2_CFLAGS = 
GTK2_LIBS = 
HAL_CFLAGS = 
HAL_LIBS = 
HAVE_BEOS_FALSE = 
HAVE_BEOS_TRUE = #
HAVE_BUILTINS_FALSE = #
HAVE_BUILTINS_TRUE = 
HAVE_DARWIN_FALSE = 
HAVE_DARWIN_TRUE = #
HAVE_PLUGINS_FALSE = 
HAVE_PLUGINS_TRUE = #
HAVE_WIN32_FALSE = 
HAVE_WIN32_TRUE = #
INCLUDES = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
LD = ld
LDFLAGS = -L/usr/tools/roku/mipsel-linux/lib -L/lib -L/usr/local/lib -Wl,-rpath-link -Wl,/usr/local/lib
LIBCDDB_CFLAGS = 
LIBCDDB_LIBS = 
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBEXT = .so
LIBGNUTLS_CONFIG = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run makeinfo
MKINSTALLDIRS = autotools/mkinstalldirs
MOC = 
MOZILLA_CONFIG = 
MSGFMT = /usr/bin/msgfmt
MSGMERGE = :
OBJC = g++
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -Wsign-compare -Wall  -pipe
OBJEXT = o
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 0.8.1
PACKAGE_TARNAME = vlc
PACKAGE_VERSION = 0.8.1
PATH_SEPARATOR = :
PKG_CONFIG = no
PLUGIN_PATH = /lib/vlc
POSUB = po
RANLIB = ranlib
SDL11_CONFIG = 
SDL12_CONFIG = 
SDL_CONFIG = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SVG_CFLAGS = 
SVG_LIBS = 
SYS = linux
UNTRUE_FALSE = 
UNTRUE_TRUE = #
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 0.8.1
VLC_CONFIG = top_builddir="$(top_builddir)" $(top_builddir)/vlc-config
WINDRES = 
WX_CONFIG = 
XGETTEXT = : --keyword=_NS --keyword=_ANS
XML2_CONFIG = 
XPIDL = /usr/lib/mozilla/xpidl
XPIDL_INCL = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_CYGPATH = 
ac_ct_LD = ld
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_ct_WINDRES = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__fastdepOBJC_FALSE = #
am__fastdepOBJC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = mipsel-unknown-linux-gnu
build_alias = 
build_cpu = mipsel
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = mipsel-unknown-linux-gnu
host_alias = 
host_cpu = mipsel
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = mipsel-unknown-linux-gnu
target_alias = 
target_cpu = mipsel
target_os = linux-gnu
target_vendor = unknown

NULL = 

libvlc_LIBRARIES = $(Lvout_directxb) $(Lvout_directxpic) $(Lglwin32b) $(Lglwin32pic)
noinst_LIBRARIES = $(Lvout_directxp) $(Lglwin32p)
noinst_HEADERS = 
EXTRA_DIST = Modules.am
BUILT_SOURCES = 
SUBDIRS = 
#DIST_SUBDIRS = $(SUBDIRS)
libvlcdir = $(libdir)/vlc/video_output
SOURCES_vout_directx = \
	directx.c \
	vout.h \
	events.c \
	$(NULL)


SOURCES_glwin32 = \
	glwin32.c \
	vout.h \
	events.c \
	$(NULL)


# There's no need for pic code on win32 so get rid of this to substantially
# reduce the compilation time.
##pic = no
pic = no


# The vout_directx plugin
#Lvout_directxp = libvout_directx_plugin.a
#Dvout_directxp = libvout_directx_plugin$(LIBEXT)
#Lvout_directxb = libvout_directx.a
#Lvout_directxpic = libvout_directx_pic.a

libvout_directx_plugin_a_SOURCES = $(SOURCES_vout_directx)
libvout_directx_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin vout_directx`
libvout_directx_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin vout_directx`
libvout_directx_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin vout_directx`

libvout_directx_pic_a_SOURCES = $(SOURCES_vout_directx)
libvout_directx_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic vout_directx`
libvout_directx_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic vout_directx`
libvout_directx_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic vout_directx`

libvout_directx_a_SOURCES = $(SOURCES_vout_directx)
libvout_directx_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin vout_directx`
libvout_directx_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin vout_directx`
libvout_directx_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin vout_directx`
libvout_directx_DATA = $(Dvout_directxp)

libvout_directxdir = $(libdir)/vlc/


# The glwin32 plugin
#Lglwin32p = libglwin32_plugin.a
#Dglwin32p = libglwin32_plugin$(LIBEXT)
#Lglwin32b = libglwin32.a
#Lglwin32pic = libglwin32_pic.a

libglwin32_plugin_a_SOURCES = $(SOURCES_glwin32)
libglwin32_plugin_a_CFLAGS = `$(VLC_CONFIG) --cflags plugin glwin32`
libglwin32_plugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags plugin glwin32`
libglwin32_plugin_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags plugin glwin32`

libglwin32_pic_a_SOURCES = $(SOURCES_glwin32)
libglwin32_pic_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin pic glwin32`
libglwin32_pic_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin pic glwin32`
libglwin32_pic_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin pic glwin32`

libglwin32_a_SOURCES = $(SOURCES_glwin32)
libglwin32_a_CFLAGS = `$(VLC_CONFIG) --cflags builtin glwin32`
libglwin32_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags builtin glwin32`
libglwin32_a_OBJCFLAGS = `$(VLC_CONFIG) --objcflags builtin glwin32`
libglwin32_DATA = $(Dglwin32p)

libglwin32dir = $(libdir)/vlc/
subdir = modules/video_output/directx
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/autotools/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(libvlc_LIBRARIES) $(noinst_LIBRARIES)

libglwin32_a_AR = $(AR) cru
libglwin32_a_LIBADD =
am__objects_1 =
am__objects_2 = libglwin32_a-glwin32.$(OBJEXT) \
	libglwin32_a-events.$(OBJEXT) $(am__objects_1)
am_libglwin32_a_OBJECTS = $(am__objects_2)
libglwin32_a_OBJECTS = $(am_libglwin32_a_OBJECTS)
libglwin32_pic_a_AR = $(AR) cru
libglwin32_pic_a_LIBADD =
am__objects_3 = libglwin32_pic_a-glwin32.$(OBJEXT) \
	libglwin32_pic_a-events.$(OBJEXT) $(am__objects_1)
am_libglwin32_pic_a_OBJECTS = $(am__objects_3)
libglwin32_pic_a_OBJECTS = $(am_libglwin32_pic_a_OBJECTS)
libglwin32_plugin_a_AR = $(AR) cru
libglwin32_plugin_a_LIBADD =
am__objects_4 = libglwin32_plugin_a-glwin32.$(OBJEXT) \
	libglwin32_plugin_a-events.$(OBJEXT) $(am__objects_1)
am_libglwin32_plugin_a_OBJECTS = $(am__objects_4)
libglwin32_plugin_a_OBJECTS = $(am_libglwin32_plugin_a_OBJECTS)
libvout_directx_a_AR = $(AR) cru
libvout_directx_a_LIBADD =
am__objects_5 = libvout_directx_a-directx.$(OBJEXT) \
	libvout_directx_a-events.$(OBJEXT) $(am__objects_1)
am_libvout_directx_a_OBJECTS = $(am__objects_5)
libvout_directx_a_OBJECTS = $(am_libvout_directx_a_OBJECTS)
libvout_directx_pic_a_AR = $(AR) cru
libvout_directx_pic_a_LIBADD =
am__objects_6 = libvout_directx_pic_a-directx.$(OBJEXT) \
	libvout_directx_pic_a-events.$(OBJEXT) $(am__objects_1)
am_libvout_directx_pic_a_OBJECTS = $(am__objects_6)
libvout_directx_pic_a_OBJECTS = $(am_libvout_directx_pic_a_OBJECTS)
libvout_directx_plugin_a_AR = $(AR) cru
libvout_directx_plugin_a_LIBADD =
am__objects_7 = libvout_directx_plugin_a-directx.$(OBJEXT) \
	libvout_directx_plugin_a-events.$(OBJEXT) $(am__objects_1)
am_libvout_directx_plugin_a_OBJECTS = $(am__objects_7)
libvout_directx_plugin_a_OBJECTS = \
	$(am_libvout_directx_plugin_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/libglwin32_a-events.Po \
	./$(DEPDIR)/libglwin32_a-glwin32.Po \
	./$(DEPDIR)/libglwin32_pic_a-events.Po \
	./$(DEPDIR)/libglwin32_pic_a-glwin32.Po \
	./$(DEPDIR)/libglwin32_plugin_a-events.Po \
	./$(DEPDIR)/libglwin32_plugin_a-glwin32.Po \
	./$(DEPDIR)/libvout_directx_a-directx.Po \
	./$(DEPDIR)/libvout_directx_a-events.Po \
	./$(DEPDIR)/libvout_directx_pic_a-directx.Po \
	./$(DEPDIR)/libvout_directx_pic_a-events.Po \
	./$(DEPDIR)/libvout_directx_plugin_a-directx.Po \
	./$(DEPDIR)/libvout_directx_plugin_a-events.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libglwin32_a_SOURCES) $(libglwin32_pic_a_SOURCES) \
	$(libglwin32_plugin_a_SOURCES) $(libvout_directx_a_SOURCES) \
	$(libvout_directx_pic_a_SOURCES) \
	$(libvout_directx_plugin_a_SOURCES)
DATA = $(libglwin32_DATA) $(libvout_directx_DATA)

HEADERS = $(noinst_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.in \
	$(srcdir)/Modules.am Makefile.am
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libglwin32_a_SOURCES) $(libglwin32_pic_a_SOURCES) $(libglwin32_plugin_a_SOURCES) $(libvout_directx_a_SOURCES) $(libvout_directx_pic_a_SOURCES) $(libvout_directx_plugin_a_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am $(srcdir)/Modules.am $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  modules/video_output/directx/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libvlcLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libvlcLIBRARIES: $(libvlc_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libvlcdir)
	@list='$(libvlc_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libvlcLIBRARIES_INSTALL) $$p $(DESTDIR)$(libvlcdir)/$$f"; \
	    $(libvlcLIBRARIES_INSTALL) $$p $(DESTDIR)$(libvlcdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(libvlc_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libvlcdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libvlcdir)/$$p; \
	  else :; fi; \
	done

uninstall-libvlcLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libvlc_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libvlcdir)/$$p"; \
	  rm -f $(DESTDIR)$(libvlcdir)/$$p; \
	done

clean-libvlcLIBRARIES:
	-test -z "$(libvlc_LIBRARIES)" || rm -f $(libvlc_LIBRARIES)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libglwin32.a: $(libglwin32_a_OBJECTS) $(libglwin32_a_DEPENDENCIES) 
	-rm -f libglwin32.a
	$(libglwin32_a_AR) libglwin32.a $(libglwin32_a_OBJECTS) $(libglwin32_a_LIBADD)
	$(RANLIB) libglwin32.a
libglwin32_pic.a: $(libglwin32_pic_a_OBJECTS) $(libglwin32_pic_a_DEPENDENCIES) 
	-rm -f libglwin32_pic.a
	$(libglwin32_pic_a_AR) libglwin32_pic.a $(libglwin32_pic_a_OBJECTS) $(libglwin32_pic_a_LIBADD)
	$(RANLIB) libglwin32_pic.a
libglwin32_plugin.a: $(libglwin32_plugin_a_OBJECTS) $(libglwin32_plugin_a_DEPENDENCIES) 
	-rm -f libglwin32_plugin.a
	$(libglwin32_plugin_a_AR) libglwin32_plugin.a $(libglwin32_plugin_a_OBJECTS) $(libglwin32_plugin_a_LIBADD)
	$(RANLIB) libglwin32_plugin.a
libvout_directx.a: $(libvout_directx_a_OBJECTS) $(libvout_directx_a_DEPENDENCIES) 
	-rm -f libvout_directx.a
	$(libvout_directx_a_AR) libvout_directx.a $(libvout_directx_a_OBJECTS) $(libvout_directx_a_LIBADD)
	$(RANLIB) libvout_directx.a
libvout_directx_pic.a: $(libvout_directx_pic_a_OBJECTS) $(libvout_directx_pic_a_DEPENDENCIES) 
	-rm -f libvout_directx_pic.a
	$(libvout_directx_pic_a_AR) libvout_directx_pic.a $(libvout_directx_pic_a_OBJECTS) $(libvout_directx_pic_a_LIBADD)
	$(RANLIB) libvout_directx_pic.a
libvout_directx_plugin.a: $(libvout_directx_plugin_a_OBJECTS) $(libvout_directx_plugin_a_DEPENDENCIES) 
	-rm -f libvout_directx_plugin.a
	$(libvout_directx_plugin_a_AR) libvout_directx_plugin.a $(libvout_directx_plugin_a_OBJECTS) $(libvout_directx_plugin_a_LIBADD)
	$(RANLIB) libvout_directx_plugin.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libglwin32_a-events.Po
include ./$(DEPDIR)/libglwin32_a-glwin32.Po
include ./$(DEPDIR)/libglwin32_pic_a-events.Po
include ./$(DEPDIR)/libglwin32_pic_a-glwin32.Po
include ./$(DEPDIR)/libglwin32_plugin_a-events.Po
include ./$(DEPDIR)/libglwin32_plugin_a-glwin32.Po
include ./$(DEPDIR)/libvout_directx_a-directx.Po
include ./$(DEPDIR)/libvout_directx_a-events.Po
include ./$(DEPDIR)/libvout_directx_pic_a-directx.Po
include ./$(DEPDIR)/libvout_directx_pic_a-events.Po
include ./$(DEPDIR)/libvout_directx_plugin_a-directx.Po
include ./$(DEPDIR)/libvout_directx_plugin_a-events.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

libglwin32_a-glwin32.o: glwin32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -MT libglwin32_a-glwin32.o -MD -MP -MF "$(DEPDIR)/libglwin32_a-glwin32.Tpo" \
	  -c -o libglwin32_a-glwin32.o `test -f 'glwin32.c' || echo '$(srcdir)/'`glwin32.c; \
	then mv -f "$(DEPDIR)/libglwin32_a-glwin32.Tpo" "$(DEPDIR)/libglwin32_a-glwin32.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_a-glwin32.Tpo"; exit 1; \
	fi
#	source='glwin32.c' object='libglwin32_a-glwin32.o' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_a-glwin32.Po' tmpdepfile='$(DEPDIR)/libglwin32_a-glwin32.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -c -o libglwin32_a-glwin32.o `test -f 'glwin32.c' || echo '$(srcdir)/'`glwin32.c

libglwin32_a-glwin32.obj: glwin32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -MT libglwin32_a-glwin32.obj -MD -MP -MF "$(DEPDIR)/libglwin32_a-glwin32.Tpo" \
	  -c -o libglwin32_a-glwin32.obj `if test -f 'glwin32.c'; then $(CYGPATH_W) 'glwin32.c'; else $(CYGPATH_W) '$(srcdir)/glwin32.c'; fi`; \
	then mv -f "$(DEPDIR)/libglwin32_a-glwin32.Tpo" "$(DEPDIR)/libglwin32_a-glwin32.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_a-glwin32.Tpo"; exit 1; \
	fi
#	source='glwin32.c' object='libglwin32_a-glwin32.obj' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_a-glwin32.Po' tmpdepfile='$(DEPDIR)/libglwin32_a-glwin32.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -c -o libglwin32_a-glwin32.obj `if test -f 'glwin32.c'; then $(CYGPATH_W) 'glwin32.c'; else $(CYGPATH_W) '$(srcdir)/glwin32.c'; fi`

libglwin32_a-events.o: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -MT libglwin32_a-events.o -MD -MP -MF "$(DEPDIR)/libglwin32_a-events.Tpo" \
	  -c -o libglwin32_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c; \
	then mv -f "$(DEPDIR)/libglwin32_a-events.Tpo" "$(DEPDIR)/libglwin32_a-events.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libglwin32_a-events.o' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_a-events.Po' tmpdepfile='$(DEPDIR)/libglwin32_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -c -o libglwin32_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c

libglwin32_a-events.obj: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -MT libglwin32_a-events.obj -MD -MP -MF "$(DEPDIR)/libglwin32_a-events.Tpo" \
	  -c -o libglwin32_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`; \
	then mv -f "$(DEPDIR)/libglwin32_a-events.Tpo" "$(DEPDIR)/libglwin32_a-events.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libglwin32_a-events.obj' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_a-events.Po' tmpdepfile='$(DEPDIR)/libglwin32_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_a_CFLAGS) $(CFLAGS) -c -o libglwin32_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`

libglwin32_pic_a-glwin32.o: glwin32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -MT libglwin32_pic_a-glwin32.o -MD -MP -MF "$(DEPDIR)/libglwin32_pic_a-glwin32.Tpo" \
	  -c -o libglwin32_pic_a-glwin32.o `test -f 'glwin32.c' || echo '$(srcdir)/'`glwin32.c; \
	then mv -f "$(DEPDIR)/libglwin32_pic_a-glwin32.Tpo" "$(DEPDIR)/libglwin32_pic_a-glwin32.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_pic_a-glwin32.Tpo"; exit 1; \
	fi
#	source='glwin32.c' object='libglwin32_pic_a-glwin32.o' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_pic_a-glwin32.Po' tmpdepfile='$(DEPDIR)/libglwin32_pic_a-glwin32.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -c -o libglwin32_pic_a-glwin32.o `test -f 'glwin32.c' || echo '$(srcdir)/'`glwin32.c

libglwin32_pic_a-glwin32.obj: glwin32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -MT libglwin32_pic_a-glwin32.obj -MD -MP -MF "$(DEPDIR)/libglwin32_pic_a-glwin32.Tpo" \
	  -c -o libglwin32_pic_a-glwin32.obj `if test -f 'glwin32.c'; then $(CYGPATH_W) 'glwin32.c'; else $(CYGPATH_W) '$(srcdir)/glwin32.c'; fi`; \
	then mv -f "$(DEPDIR)/libglwin32_pic_a-glwin32.Tpo" "$(DEPDIR)/libglwin32_pic_a-glwin32.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_pic_a-glwin32.Tpo"; exit 1; \
	fi
#	source='glwin32.c' object='libglwin32_pic_a-glwin32.obj' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_pic_a-glwin32.Po' tmpdepfile='$(DEPDIR)/libglwin32_pic_a-glwin32.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -c -o libglwin32_pic_a-glwin32.obj `if test -f 'glwin32.c'; then $(CYGPATH_W) 'glwin32.c'; else $(CYGPATH_W) '$(srcdir)/glwin32.c'; fi`

libglwin32_pic_a-events.o: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -MT libglwin32_pic_a-events.o -MD -MP -MF "$(DEPDIR)/libglwin32_pic_a-events.Tpo" \
	  -c -o libglwin32_pic_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c; \
	then mv -f "$(DEPDIR)/libglwin32_pic_a-events.Tpo" "$(DEPDIR)/libglwin32_pic_a-events.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_pic_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libglwin32_pic_a-events.o' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_pic_a-events.Po' tmpdepfile='$(DEPDIR)/libglwin32_pic_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -c -o libglwin32_pic_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c

libglwin32_pic_a-events.obj: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -MT libglwin32_pic_a-events.obj -MD -MP -MF "$(DEPDIR)/libglwin32_pic_a-events.Tpo" \
	  -c -o libglwin32_pic_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`; \
	then mv -f "$(DEPDIR)/libglwin32_pic_a-events.Tpo" "$(DEPDIR)/libglwin32_pic_a-events.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_pic_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libglwin32_pic_a-events.obj' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_pic_a-events.Po' tmpdepfile='$(DEPDIR)/libglwin32_pic_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_pic_a_CFLAGS) $(CFLAGS) -c -o libglwin32_pic_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`

libglwin32_plugin_a-glwin32.o: glwin32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -MT libglwin32_plugin_a-glwin32.o -MD -MP -MF "$(DEPDIR)/libglwin32_plugin_a-glwin32.Tpo" \
	  -c -o libglwin32_plugin_a-glwin32.o `test -f 'glwin32.c' || echo '$(srcdir)/'`glwin32.c; \
	then mv -f "$(DEPDIR)/libglwin32_plugin_a-glwin32.Tpo" "$(DEPDIR)/libglwin32_plugin_a-glwin32.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_plugin_a-glwin32.Tpo"; exit 1; \
	fi
#	source='glwin32.c' object='libglwin32_plugin_a-glwin32.o' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_plugin_a-glwin32.Po' tmpdepfile='$(DEPDIR)/libglwin32_plugin_a-glwin32.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -c -o libglwin32_plugin_a-glwin32.o `test -f 'glwin32.c' || echo '$(srcdir)/'`glwin32.c

libglwin32_plugin_a-glwin32.obj: glwin32.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -MT libglwin32_plugin_a-glwin32.obj -MD -MP -MF "$(DEPDIR)/libglwin32_plugin_a-glwin32.Tpo" \
	  -c -o libglwin32_plugin_a-glwin32.obj `if test -f 'glwin32.c'; then $(CYGPATH_W) 'glwin32.c'; else $(CYGPATH_W) '$(srcdir)/glwin32.c'; fi`; \
	then mv -f "$(DEPDIR)/libglwin32_plugin_a-glwin32.Tpo" "$(DEPDIR)/libglwin32_plugin_a-glwin32.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_plugin_a-glwin32.Tpo"; exit 1; \
	fi
#	source='glwin32.c' object='libglwin32_plugin_a-glwin32.obj' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_plugin_a-glwin32.Po' tmpdepfile='$(DEPDIR)/libglwin32_plugin_a-glwin32.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -c -o libglwin32_plugin_a-glwin32.obj `if test -f 'glwin32.c'; then $(CYGPATH_W) 'glwin32.c'; else $(CYGPATH_W) '$(srcdir)/glwin32.c'; fi`

libglwin32_plugin_a-events.o: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -MT libglwin32_plugin_a-events.o -MD -MP -MF "$(DEPDIR)/libglwin32_plugin_a-events.Tpo" \
	  -c -o libglwin32_plugin_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c; \
	then mv -f "$(DEPDIR)/libglwin32_plugin_a-events.Tpo" "$(DEPDIR)/libglwin32_plugin_a-events.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_plugin_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libglwin32_plugin_a-events.o' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_plugin_a-events.Po' tmpdepfile='$(DEPDIR)/libglwin32_plugin_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -c -o libglwin32_plugin_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c

libglwin32_plugin_a-events.obj: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -MT libglwin32_plugin_a-events.obj -MD -MP -MF "$(DEPDIR)/libglwin32_plugin_a-events.Tpo" \
	  -c -o libglwin32_plugin_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`; \
	then mv -f "$(DEPDIR)/libglwin32_plugin_a-events.Tpo" "$(DEPDIR)/libglwin32_plugin_a-events.Po"; \
	else rm -f "$(DEPDIR)/libglwin32_plugin_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libglwin32_plugin_a-events.obj' libtool=no \
#	depfile='$(DEPDIR)/libglwin32_plugin_a-events.Po' tmpdepfile='$(DEPDIR)/libglwin32_plugin_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libglwin32_plugin_a_CFLAGS) $(CFLAGS) -c -o libglwin32_plugin_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`

libvout_directx_a-directx.o: directx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -MT libvout_directx_a-directx.o -MD -MP -MF "$(DEPDIR)/libvout_directx_a-directx.Tpo" \
	  -c -o libvout_directx_a-directx.o `test -f 'directx.c' || echo '$(srcdir)/'`directx.c; \
	then mv -f "$(DEPDIR)/libvout_directx_a-directx.Tpo" "$(DEPDIR)/libvout_directx_a-directx.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_a-directx.Tpo"; exit 1; \
	fi
#	source='directx.c' object='libvout_directx_a-directx.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_a-directx.Po' tmpdepfile='$(DEPDIR)/libvout_directx_a-directx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_a-directx.o `test -f 'directx.c' || echo '$(srcdir)/'`directx.c

libvout_directx_a-directx.obj: directx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -MT libvout_directx_a-directx.obj -MD -MP -MF "$(DEPDIR)/libvout_directx_a-directx.Tpo" \
	  -c -o libvout_directx_a-directx.obj `if test -f 'directx.c'; then $(CYGPATH_W) 'directx.c'; else $(CYGPATH_W) '$(srcdir)/directx.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_directx_a-directx.Tpo" "$(DEPDIR)/libvout_directx_a-directx.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_a-directx.Tpo"; exit 1; \
	fi
#	source='directx.c' object='libvout_directx_a-directx.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_a-directx.Po' tmpdepfile='$(DEPDIR)/libvout_directx_a-directx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_a-directx.obj `if test -f 'directx.c'; then $(CYGPATH_W) 'directx.c'; else $(CYGPATH_W) '$(srcdir)/directx.c'; fi`

libvout_directx_a-events.o: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -MT libvout_directx_a-events.o -MD -MP -MF "$(DEPDIR)/libvout_directx_a-events.Tpo" \
	  -c -o libvout_directx_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c; \
	then mv -f "$(DEPDIR)/libvout_directx_a-events.Tpo" "$(DEPDIR)/libvout_directx_a-events.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libvout_directx_a-events.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_a-events.Po' tmpdepfile='$(DEPDIR)/libvout_directx_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c

libvout_directx_a-events.obj: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -MT libvout_directx_a-events.obj -MD -MP -MF "$(DEPDIR)/libvout_directx_a-events.Tpo" \
	  -c -o libvout_directx_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_directx_a-events.Tpo" "$(DEPDIR)/libvout_directx_a-events.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libvout_directx_a-events.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_a-events.Po' tmpdepfile='$(DEPDIR)/libvout_directx_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`

libvout_directx_pic_a-directx.o: directx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -MT libvout_directx_pic_a-directx.o -MD -MP -MF "$(DEPDIR)/libvout_directx_pic_a-directx.Tpo" \
	  -c -o libvout_directx_pic_a-directx.o `test -f 'directx.c' || echo '$(srcdir)/'`directx.c; \
	then mv -f "$(DEPDIR)/libvout_directx_pic_a-directx.Tpo" "$(DEPDIR)/libvout_directx_pic_a-directx.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_pic_a-directx.Tpo"; exit 1; \
	fi
#	source='directx.c' object='libvout_directx_pic_a-directx.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_pic_a-directx.Po' tmpdepfile='$(DEPDIR)/libvout_directx_pic_a-directx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_pic_a-directx.o `test -f 'directx.c' || echo '$(srcdir)/'`directx.c

libvout_directx_pic_a-directx.obj: directx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -MT libvout_directx_pic_a-directx.obj -MD -MP -MF "$(DEPDIR)/libvout_directx_pic_a-directx.Tpo" \
	  -c -o libvout_directx_pic_a-directx.obj `if test -f 'directx.c'; then $(CYGPATH_W) 'directx.c'; else $(CYGPATH_W) '$(srcdir)/directx.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_directx_pic_a-directx.Tpo" "$(DEPDIR)/libvout_directx_pic_a-directx.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_pic_a-directx.Tpo"; exit 1; \
	fi
#	source='directx.c' object='libvout_directx_pic_a-directx.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_pic_a-directx.Po' tmpdepfile='$(DEPDIR)/libvout_directx_pic_a-directx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_pic_a-directx.obj `if test -f 'directx.c'; then $(CYGPATH_W) 'directx.c'; else $(CYGPATH_W) '$(srcdir)/directx.c'; fi`

libvout_directx_pic_a-events.o: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -MT libvout_directx_pic_a-events.o -MD -MP -MF "$(DEPDIR)/libvout_directx_pic_a-events.Tpo" \
	  -c -o libvout_directx_pic_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c; \
	then mv -f "$(DEPDIR)/libvout_directx_pic_a-events.Tpo" "$(DEPDIR)/libvout_directx_pic_a-events.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_pic_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libvout_directx_pic_a-events.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_pic_a-events.Po' tmpdepfile='$(DEPDIR)/libvout_directx_pic_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_pic_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c

libvout_directx_pic_a-events.obj: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -MT libvout_directx_pic_a-events.obj -MD -MP -MF "$(DEPDIR)/libvout_directx_pic_a-events.Tpo" \
	  -c -o libvout_directx_pic_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_directx_pic_a-events.Tpo" "$(DEPDIR)/libvout_directx_pic_a-events.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_pic_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libvout_directx_pic_a-events.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_pic_a-events.Po' tmpdepfile='$(DEPDIR)/libvout_directx_pic_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_pic_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_pic_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`

libvout_directx_plugin_a-directx.o: directx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -MT libvout_directx_plugin_a-directx.o -MD -MP -MF "$(DEPDIR)/libvout_directx_plugin_a-directx.Tpo" \
	  -c -o libvout_directx_plugin_a-directx.o `test -f 'directx.c' || echo '$(srcdir)/'`directx.c; \
	then mv -f "$(DEPDIR)/libvout_directx_plugin_a-directx.Tpo" "$(DEPDIR)/libvout_directx_plugin_a-directx.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_plugin_a-directx.Tpo"; exit 1; \
	fi
#	source='directx.c' object='libvout_directx_plugin_a-directx.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_plugin_a-directx.Po' tmpdepfile='$(DEPDIR)/libvout_directx_plugin_a-directx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_plugin_a-directx.o `test -f 'directx.c' || echo '$(srcdir)/'`directx.c

libvout_directx_plugin_a-directx.obj: directx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -MT libvout_directx_plugin_a-directx.obj -MD -MP -MF "$(DEPDIR)/libvout_directx_plugin_a-directx.Tpo" \
	  -c -o libvout_directx_plugin_a-directx.obj `if test -f 'directx.c'; then $(CYGPATH_W) 'directx.c'; else $(CYGPATH_W) '$(srcdir)/directx.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_directx_plugin_a-directx.Tpo" "$(DEPDIR)/libvout_directx_plugin_a-directx.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_plugin_a-directx.Tpo"; exit 1; \
	fi
#	source='directx.c' object='libvout_directx_plugin_a-directx.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_plugin_a-directx.Po' tmpdepfile='$(DEPDIR)/libvout_directx_plugin_a-directx.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_plugin_a-directx.obj `if test -f 'directx.c'; then $(CYGPATH_W) 'directx.c'; else $(CYGPATH_W) '$(srcdir)/directx.c'; fi`

libvout_directx_plugin_a-events.o: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -MT libvout_directx_plugin_a-events.o -MD -MP -MF "$(DEPDIR)/libvout_directx_plugin_a-events.Tpo" \
	  -c -o libvout_directx_plugin_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c; \
	then mv -f "$(DEPDIR)/libvout_directx_plugin_a-events.Tpo" "$(DEPDIR)/libvout_directx_plugin_a-events.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_plugin_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libvout_directx_plugin_a-events.o' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_plugin_a-events.Po' tmpdepfile='$(DEPDIR)/libvout_directx_plugin_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_plugin_a-events.o `test -f 'events.c' || echo '$(srcdir)/'`events.c

libvout_directx_plugin_a-events.obj: events.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -MT libvout_directx_plugin_a-events.obj -MD -MP -MF "$(DEPDIR)/libvout_directx_plugin_a-events.Tpo" \
	  -c -o libvout_directx_plugin_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`; \
	then mv -f "$(DEPDIR)/libvout_directx_plugin_a-events.Tpo" "$(DEPDIR)/libvout_directx_plugin_a-events.Po"; \
	else rm -f "$(DEPDIR)/libvout_directx_plugin_a-events.Tpo"; exit 1; \
	fi
#	source='events.c' object='libvout_directx_plugin_a-events.obj' libtool=no \
#	depfile='$(DEPDIR)/libvout_directx_plugin_a-events.Po' tmpdepfile='$(DEPDIR)/libvout_directx_plugin_a-events.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvout_directx_plugin_a_CFLAGS) $(CFLAGS) -c -o libvout_directx_plugin_a-events.obj `if test -f 'events.c'; then $(CYGPATH_W) 'events.c'; else $(CYGPATH_W) '$(srcdir)/events.c'; fi`
uninstall-info-am:
libglwin32DATA_INSTALL = $(INSTALL_DATA)
install-libglwin32DATA: $(libglwin32_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libglwin32dir)
	@list='$(libglwin32_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libglwin32DATA_INSTALL) $$d$$p $(DESTDIR)$(libglwin32dir)/$$f"; \
	  $(libglwin32DATA_INSTALL) $$d$$p $(DESTDIR)$(libglwin32dir)/$$f; \
	done

uninstall-libglwin32DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libglwin32_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libglwin32dir)/$$f"; \
	  rm -f $(DESTDIR)$(libglwin32dir)/$$f; \
	done
libvout_directxDATA_INSTALL = $(INSTALL_DATA)
install-libvout_directxDATA: $(libvout_directx_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libvout_directxdir)
	@list='$(libvout_directx_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libvout_directxDATA_INSTALL) $$d$$p $(DESTDIR)$(libvout_directxdir)/$$f"; \
	  $(libvout_directxDATA_INSTALL) $$d$$p $(DESTDIR)$(libvout_directxdir)/$$f; \
	done

uninstall-libvout_directxDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libvout_directx_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libvout_directxdir)/$$f"; \
	  rm -f $(DESTDIR)$(libvout_directxdir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libvlcdir) $(DESTDIR)$(libglwin32dir) $(DESTDIR)$(libvout_directxdir)

install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libvlcLIBRARIES clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-libglwin32DATA install-libvlcLIBRARIES \
	install-libvout_directxDATA

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libglwin32DATA \
	uninstall-libvlcLIBRARIES uninstall-libvout_directxDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-generic clean-libvlcLIBRARIES clean-local \
	clean-noinstLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive \
	install-libglwin32DATA install-libvlcLIBRARIES \
	install-libvout_directxDATA install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
	tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-libglwin32DATA \
	uninstall-libvlcLIBRARIES uninstall-libvout_directxDATA \
	uninstall-recursive


clean-local:
	-rm -f *.a *.so *.dll *.sl *.dylib

all: all-modules
all-modules:
	@set fnord $$MAKEFLAGS; amf=$$2; targets=`\
	if test "$(plugin)" != "no"; then z=$$($(VLC_CONFIG) --target plugin); for mod in vout_directx glwin32; do case "$$z" in */lib$${mod}_plugin*) echo lib$${mod}_plugin$(LIBEXT);; esac; done; fi; \
	if test "$(builtin)" != "no"; then z=$$($(VLC_CONFIG) --target builtin); for mod in vout_directx glwin32; do case "$$z" in */lib$${mod}.a*) echo lib$${mod}.a;; esac; done; fi; \
	if test "$(pic)" != "no"; then z=$$($(VLC_CONFIG) --target builtin pic); for mod in vout_directx glwin32; do case "$$z" in */lib$${mod}_pic.a*) echo lib$${mod}_pic.a;; esac; done; fi; \
	`; case "$$targets" in *lib*) $(MAKE) $(AM_MAKEFLAGS) $$targets || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; ;; esac; \
	test -z "$$fail"
libvout_directx_plugin$(LIBEXT): $(libvout_directx_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage vout_directx` in \
	  c++) echo $(CXXLINK) $(libvout_directx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_directx\` ; $(CXXLINK) $(libvout_directx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_directx` ;; \
	  objc) echo $(OBJCLINK) $(libvout_directx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_directx\` ; $(OBJCLINK) $(libvout_directx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_directx` ;; \
	  c|*) echo $(LINK) $(libvout_directx_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin vout_directx\` ; $(LINK) $(libvout_directx_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin vout_directx` ;; \
	esac
libglwin32_plugin$(LIBEXT): $(libglwin32_plugin_a_OBJECTS)
	@case `$(VLC_CONFIG) --linkage glwin32` in \
	  c++) echo $(CXXLINK) $(libglwin32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glwin32\` ; $(CXXLINK) $(libglwin32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glwin32` ;; \
	  objc) echo $(OBJCLINK) $(libglwin32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glwin32\` ; $(OBJCLINK) $(libglwin32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glwin32` ;; \
	  c|*) echo $(LINK) $(libglwin32_plugin_a_OBJECTS) \`$(VLC_CONFIG) --libs plugin glwin32\` ; $(LINK) $(libglwin32_plugin_a_OBJECTS) `$(VLC_CONFIG) --libs plugin glwin32` ;; \
	esac
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
