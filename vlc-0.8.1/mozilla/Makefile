# Makefile.in generated by automake 1.7.9 from Makefile.am.
# mozilla/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



###############################################################################
# Building the Mozilla plugin
###############################################################################

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/vlc
pkglibdir = $(libdir)/vlc
pkgincludedir = $(includedir)/vlc
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = ../autotools/install-sh -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = mipsel-unknown-linux-gnu
host_triplet = mipsel-unknown-linux-gnu
target_triplet = mipsel-unknown-linux-gnu
ACLOCAL = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run aclocal-1.7
ALIASES = 
ALLOCA = 
ALL_LINGUAS = da de en_GB es fr hu it ja nl no pl pt_BR ru sv
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run tar
AR = ar
ARCH = mipsel
ARTS_CONFIG = 
ASM = 
AUTOCONF = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run automake-1.7
AWK = gawk
BUILD_DIRENT_FALSE = 
BUILD_DIRENT_TRUE = #
BUILD_GETOPT_FALSE = 
BUILD_GETOPT_TRUE = #
BUILD_INCLUDED_LIBINTL = no
BUILD_INTL_FALSE = 
BUILD_INTL_TRUE = #
BUILD_MOZILLA_FALSE = 
BUILD_MOZILLA_TRUE = #
CACA_CONFIG = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wsign-compare -Wall -I/usr/tools/roku/include -I/usr/include -I/usr/local/include -I/usr/local/include/roku -pipe
CORBA_CFLAGS = 
CORBA_LIBS = 
CPP = gcc -E
CPPFLAGS =  -DSYS_LINUX -I$(top_srcdir)/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wsign-compare -Wsign-compare -Wall -I/usr/tools/roku/include -I/usr/include -I/usr/local/include -I/usr/local/include/roku -pipe
CYGPATH = 
CYGPATH_W = echo
DATADIRNAME = share
DATA_PATH = /share/vlc
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DVDNAV_CONFIG = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_CORBA_FALSE = 
ENABLE_CORBA_TRUE = #
ESD_CONFIG = 
EXEEXT = 
FFMPEG_CONFIG = 
FREETYPE_CONFIG = 
FRIBIDI_CONFIG = 
GENCAT = gencat
GLIBC21 = yes
GMSGFMT = /usr/bin/msgfmt
GTK2_CFLAGS = 
GTK2_LIBS = 
HAL_CFLAGS = 
HAL_LIBS = 
HAVE_BEOS_FALSE = 
HAVE_BEOS_TRUE = #
HAVE_BUILTINS_FALSE = #
HAVE_BUILTINS_TRUE = 
HAVE_DARWIN_FALSE = 
HAVE_DARWIN_TRUE = #
HAVE_PLUGINS_FALSE = 
HAVE_PLUGINS_TRUE = #
HAVE_WIN32_FALSE = 
HAVE_WIN32_TRUE = #
INCLUDES = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
LD = ld
LDFLAGS = -L/usr/tools/roku/mipsel-linux/lib -L/lib -L/usr/local/lib -Wl,-rpath-link -Wl,/usr/local/lib
LIBCDDB_CFLAGS = 
LIBCDDB_LIBS = 
LIBCDIO_CFLAGS = 
LIBCDIO_LIBS = 
LIBEXT = .so
LIBGNUTLS_CONFIG = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/missing --run makeinfo
MKINSTALLDIRS = autotools/mkinstalldirs
MOC = 
MOZILLA_CONFIG = 
MSGFMT = /usr/bin/msgfmt
MSGMERGE = :
OBJC = g++
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -Wsign-compare -Wall  -pipe
OBJEXT = o
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 0.8.1
PACKAGE_TARNAME = vlc
PACKAGE_VERSION = 0.8.1
PATH_SEPARATOR = :
PKG_CONFIG = no
PLUGIN_PATH = /lib/vlc
POSUB = po
RANLIB = ranlib
SDL11_CONFIG = 
SDL12_CONFIG = 
SDL_CONFIG = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SVG_CFLAGS = 
SVG_LIBS = 
SYS = linux
UNTRUE_FALSE = 
UNTRUE_TRUE = #
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 0.8.1
VLC_CONFIG = top_builddir="$(top_builddir)" $(top_builddir)/vlc-config
WINDRES = 
WX_CONFIG = 
XGETTEXT = : --keyword=_NS --keyword=_ANS
XML2_CONFIG = 
XPIDL = /usr/lib/mozilla/xpidl
XPIDL_INCL = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_CYGPATH = 
ac_ct_LD = ld
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_ct_WINDRES = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__fastdepOBJC_FALSE = #
am__fastdepOBJC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = mipsel-unknown-linux-gnu
build_alias = 
build_cpu = mipsel
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = mipsel-unknown-linux-gnu
host_alias = 
host_cpu = mipsel
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /mnt/smb/terra/video/New/Develop/src/vlc-0.8.1/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = mipsel-unknown-linux-gnu
target_alias = 
target_cpu = mipsel
target_os = linux-gnu
target_vendor = unknown

noinst_LIBRARIES = $(noinst_LIBRARIES_mozilla)

MOSTLYCLEANFILES = $(LIBRARIES_mozilla)
EXTRA_DIST = $(SOURCES_mozilla) $(DIST_rsrc) vlcintf.idl
BUILT_SOURCES = $(BUILT_SOURCES_mozilla)

SOURCES_mozilla = \
	vlcshell.cpp \
	vlcplugin.cpp \
	vlcplugin.h \
	vlcpeer.cpp \
	vlcpeer.h \
	support/classinfo.h \
	$(SOURCES_win32) \
	$(SOURCES_macosx) \
	$(SOURCES_unix) \
	$(NULL)


DIST_rsrc = \
	npvlc_rc.rc \
	$(NULL)


# Under Win32, Mozilla plugins need to be named NP******.DLL, but under Unix
# the common naming scheme is lib******plugin.so. Also, we need npwin.cpp
# under Win32 and npunix.c under Unix.
#LIBRARIES_mozilla = npvlc$(LIBEXT)

LIBRARIES_mozilla = libvlcplugin$(LIBEXT)
#SOURCES_win32 = support/npwin.cpp
#CPPFLAGS_mozilla_EXTRA = -DXP_WIN -DXP_WIN32
#LIBRARIES_libvlc = $(top_builddir)/lib/libvlc.a
#LIBRARIES_libvlc = $(top_builddir)/lib/libvlc_pic.a
LIBRARIES_libvlc = $(top_builddir)/lib/libvlc_pic.a
# We don't define LIBRARIES_mozilla because we'll be using project builder, or not...
#BUNDLE_mozilla = VLC\ Plugin.plugin

#vlc_moz_FLAGS = `$(VLC_CONFIG) --libs vlc builtin pic mozilla`
#moz_CFLAGS = `$(MOZILLA_CONFIG) --cflags plugin java nspr/obsolete nspr oji xpcom xpconnect`
#moz_plugin_FLAGS = -I$(srcdir)/../include -c -F/System/Library/Frameworks/CoreFoundation.framework $(moz_CFLAGS) -I/Developer/Headers/FlatCarbon -arch ppc -fno-common -fpascal-strings -O0 -Wmost -Wno-four-char-constants -Wno-unknown-pragmas -DXP_MACOSX=1 -DNO_X11=1 -DUSE_SYSTEM_CONSOLE=1 -pipe -fmessage-length=0 -g -include mozilla-config.h
#pic = pic
pic = pic
SOURCES_unix = support/npunix.c

##noinst_LIBRARIES_mozilla = libplugin.a

#libplugin_a_SOURCES = $(SOURCES_mozilla)
#libplugin_a_CFLAGS = `$(VLC_CONFIG) --cflags mozilla $(pic)` \
#	             $(CPPFLAGS_mozilla_EXTRA) -Imozilla

#libplugin_a_CXXFLAGS = `$(VLC_CONFIG) --cxxflags mozilla $(pic)` \
#	               $(CPPFLAGS_mozilla_EXTRA) -Imozilla

#libplugin_a_DEPENDENCIES = $(DATA_npvlc_rc)

#BUILT_SOURCES_mozilla = vlcintf.h

#plugin_DATA = $(LIBRARIES_mozilla) $(BUNDLE_mozilla)
#plugindir = $(libdir)/mozilla/plugins

#vlcintf_xpt_DATA = vlcintf.xpt
#vlcintf_xptdir = $(libdir)/mozilla/components

##DATA_npvlc_rc = $(noinst_npvlc_rc_DATA)
##noinst_npvlc_rc_DATA = npvlc_rc.$(OBJEXT)
##noinst_npvlc_rcdir = $(libdir)
subdir = mozilla
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/autotools/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libplugin_a_AR = $(AR) cru
libplugin_a_LIBADD =
am__libplugin_a_SOURCES_DIST = vlcshell.cpp vlcplugin.cpp vlcplugin.h \
	vlcpeer.cpp vlcpeer.h support/classinfo.h support/npwin.cpp \
	support/npunix.c
#am__objects_1 = libplugin_a-npwin.$(OBJEXT)
am__objects_3 = \
	libplugin_a-npunix.$(OBJEXT)
am__objects_4 = libplugin_a-vlcshell.$(OBJEXT) \
	libplugin_a-vlcplugin.$(OBJEXT) libplugin_a-vlcpeer.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_2)
#am_libplugin_a_OBJECTS = $(am__objects_4)
libplugin_a_OBJECTS = $(am_libplugin_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/libplugin_a-npunix.Po \
	./$(DEPDIR)/libplugin_a-npwin.Po \
	./$(DEPDIR)/libplugin_a-vlcpeer.Po \
	./$(DEPDIR)/libplugin_a-vlcplugin.Po \
	./$(DEPDIR)/libplugin_a-vlcshell.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(am__libplugin_a_SOURCES_DIST)
DATA = $(noinst_npvlc_rc_DATA) $(plugin_DATA) $(vlcintf_xpt_DATA)

DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(libplugin_a_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  mozilla/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libplugin.a: $(libplugin_a_OBJECTS) $(libplugin_a_DEPENDENCIES) 
	-rm -f libplugin.a
	$(libplugin_a_AR) libplugin.a $(libplugin_a_OBJECTS) $(libplugin_a_LIBADD)
	$(RANLIB) libplugin.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libplugin_a-npunix.Po
include ./$(DEPDIR)/libplugin_a-npwin.Po
include ./$(DEPDIR)/libplugin_a-vlcpeer.Po
include ./$(DEPDIR)/libplugin_a-vlcplugin.Po
include ./$(DEPDIR)/libplugin_a-vlcshell.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

libplugin_a-npunix.o: support/npunix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CFLAGS) $(CFLAGS) -MT libplugin_a-npunix.o -MD -MP -MF "$(DEPDIR)/libplugin_a-npunix.Tpo" \
	  -c -o libplugin_a-npunix.o `test -f 'support/npunix.c' || echo '$(srcdir)/'`support/npunix.c; \
	then mv -f "$(DEPDIR)/libplugin_a-npunix.Tpo" "$(DEPDIR)/libplugin_a-npunix.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-npunix.Tpo"; exit 1; \
	fi
#	source='support/npunix.c' object='libplugin_a-npunix.o' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-npunix.Po' tmpdepfile='$(DEPDIR)/libplugin_a-npunix.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CFLAGS) $(CFLAGS) -c -o libplugin_a-npunix.o `test -f 'support/npunix.c' || echo '$(srcdir)/'`support/npunix.c

libplugin_a-npunix.obj: support/npunix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CFLAGS) $(CFLAGS) -MT libplugin_a-npunix.obj -MD -MP -MF "$(DEPDIR)/libplugin_a-npunix.Tpo" \
	  -c -o libplugin_a-npunix.obj `if test -f 'support/npunix.c'; then $(CYGPATH_W) 'support/npunix.c'; else $(CYGPATH_W) '$(srcdir)/support/npunix.c'; fi`; \
	then mv -f "$(DEPDIR)/libplugin_a-npunix.Tpo" "$(DEPDIR)/libplugin_a-npunix.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-npunix.Tpo"; exit 1; \
	fi
#	source='support/npunix.c' object='libplugin_a-npunix.obj' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-npunix.Po' tmpdepfile='$(DEPDIR)/libplugin_a-npunix.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CFLAGS) $(CFLAGS) -c -o libplugin_a-npunix.obj `if test -f 'support/npunix.c'; then $(CYGPATH_W) 'support/npunix.c'; else $(CYGPATH_W) '$(srcdir)/support/npunix.c'; fi`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

libplugin_a-vlcshell.o: vlcshell.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-vlcshell.o -MD -MP -MF "$(DEPDIR)/libplugin_a-vlcshell.Tpo" \
	  -c -o libplugin_a-vlcshell.o `test -f 'vlcshell.cpp' || echo '$(srcdir)/'`vlcshell.cpp; \
	then mv -f "$(DEPDIR)/libplugin_a-vlcshell.Tpo" "$(DEPDIR)/libplugin_a-vlcshell.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-vlcshell.Tpo"; exit 1; \
	fi
#	source='vlcshell.cpp' object='libplugin_a-vlcshell.o' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-vlcshell.Po' tmpdepfile='$(DEPDIR)/libplugin_a-vlcshell.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-vlcshell.o `test -f 'vlcshell.cpp' || echo '$(srcdir)/'`vlcshell.cpp

libplugin_a-vlcshell.obj: vlcshell.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-vlcshell.obj -MD -MP -MF "$(DEPDIR)/libplugin_a-vlcshell.Tpo" \
	  -c -o libplugin_a-vlcshell.obj `if test -f 'vlcshell.cpp'; then $(CYGPATH_W) 'vlcshell.cpp'; else $(CYGPATH_W) '$(srcdir)/vlcshell.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libplugin_a-vlcshell.Tpo" "$(DEPDIR)/libplugin_a-vlcshell.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-vlcshell.Tpo"; exit 1; \
	fi
#	source='vlcshell.cpp' object='libplugin_a-vlcshell.obj' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-vlcshell.Po' tmpdepfile='$(DEPDIR)/libplugin_a-vlcshell.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-vlcshell.obj `if test -f 'vlcshell.cpp'; then $(CYGPATH_W) 'vlcshell.cpp'; else $(CYGPATH_W) '$(srcdir)/vlcshell.cpp'; fi`

libplugin_a-vlcplugin.o: vlcplugin.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-vlcplugin.o -MD -MP -MF "$(DEPDIR)/libplugin_a-vlcplugin.Tpo" \
	  -c -o libplugin_a-vlcplugin.o `test -f 'vlcplugin.cpp' || echo '$(srcdir)/'`vlcplugin.cpp; \
	then mv -f "$(DEPDIR)/libplugin_a-vlcplugin.Tpo" "$(DEPDIR)/libplugin_a-vlcplugin.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-vlcplugin.Tpo"; exit 1; \
	fi
#	source='vlcplugin.cpp' object='libplugin_a-vlcplugin.o' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-vlcplugin.Po' tmpdepfile='$(DEPDIR)/libplugin_a-vlcplugin.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-vlcplugin.o `test -f 'vlcplugin.cpp' || echo '$(srcdir)/'`vlcplugin.cpp

libplugin_a-vlcplugin.obj: vlcplugin.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-vlcplugin.obj -MD -MP -MF "$(DEPDIR)/libplugin_a-vlcplugin.Tpo" \
	  -c -o libplugin_a-vlcplugin.obj `if test -f 'vlcplugin.cpp'; then $(CYGPATH_W) 'vlcplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/vlcplugin.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libplugin_a-vlcplugin.Tpo" "$(DEPDIR)/libplugin_a-vlcplugin.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-vlcplugin.Tpo"; exit 1; \
	fi
#	source='vlcplugin.cpp' object='libplugin_a-vlcplugin.obj' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-vlcplugin.Po' tmpdepfile='$(DEPDIR)/libplugin_a-vlcplugin.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-vlcplugin.obj `if test -f 'vlcplugin.cpp'; then $(CYGPATH_W) 'vlcplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/vlcplugin.cpp'; fi`

libplugin_a-vlcpeer.o: vlcpeer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-vlcpeer.o -MD -MP -MF "$(DEPDIR)/libplugin_a-vlcpeer.Tpo" \
	  -c -o libplugin_a-vlcpeer.o `test -f 'vlcpeer.cpp' || echo '$(srcdir)/'`vlcpeer.cpp; \
	then mv -f "$(DEPDIR)/libplugin_a-vlcpeer.Tpo" "$(DEPDIR)/libplugin_a-vlcpeer.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-vlcpeer.Tpo"; exit 1; \
	fi
#	source='vlcpeer.cpp' object='libplugin_a-vlcpeer.o' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-vlcpeer.Po' tmpdepfile='$(DEPDIR)/libplugin_a-vlcpeer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-vlcpeer.o `test -f 'vlcpeer.cpp' || echo '$(srcdir)/'`vlcpeer.cpp

libplugin_a-vlcpeer.obj: vlcpeer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-vlcpeer.obj -MD -MP -MF "$(DEPDIR)/libplugin_a-vlcpeer.Tpo" \
	  -c -o libplugin_a-vlcpeer.obj `if test -f 'vlcpeer.cpp'; then $(CYGPATH_W) 'vlcpeer.cpp'; else $(CYGPATH_W) '$(srcdir)/vlcpeer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libplugin_a-vlcpeer.Tpo" "$(DEPDIR)/libplugin_a-vlcpeer.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-vlcpeer.Tpo"; exit 1; \
	fi
#	source='vlcpeer.cpp' object='libplugin_a-vlcpeer.obj' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-vlcpeer.Po' tmpdepfile='$(DEPDIR)/libplugin_a-vlcpeer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-vlcpeer.obj `if test -f 'vlcpeer.cpp'; then $(CYGPATH_W) 'vlcpeer.cpp'; else $(CYGPATH_W) '$(srcdir)/vlcpeer.cpp'; fi`

libplugin_a-npwin.o: support/npwin.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-npwin.o -MD -MP -MF "$(DEPDIR)/libplugin_a-npwin.Tpo" \
	  -c -o libplugin_a-npwin.o `test -f 'support/npwin.cpp' || echo '$(srcdir)/'`support/npwin.cpp; \
	then mv -f "$(DEPDIR)/libplugin_a-npwin.Tpo" "$(DEPDIR)/libplugin_a-npwin.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-npwin.Tpo"; exit 1; \
	fi
#	source='support/npwin.cpp' object='libplugin_a-npwin.o' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-npwin.Po' tmpdepfile='$(DEPDIR)/libplugin_a-npwin.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-npwin.o `test -f 'support/npwin.cpp' || echo '$(srcdir)/'`support/npwin.cpp

libplugin_a-npwin.obj: support/npwin.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -MT libplugin_a-npwin.obj -MD -MP -MF "$(DEPDIR)/libplugin_a-npwin.Tpo" \
	  -c -o libplugin_a-npwin.obj `if test -f 'support/npwin.cpp'; then $(CYGPATH_W) 'support/npwin.cpp'; else $(CYGPATH_W) '$(srcdir)/support/npwin.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libplugin_a-npwin.Tpo" "$(DEPDIR)/libplugin_a-npwin.Po"; \
	else rm -f "$(DEPDIR)/libplugin_a-npwin.Tpo"; exit 1; \
	fi
#	source='support/npwin.cpp' object='libplugin_a-npwin.obj' libtool=no \
#	depfile='$(DEPDIR)/libplugin_a-npwin.Po' tmpdepfile='$(DEPDIR)/libplugin_a-npwin.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplugin_a_CXXFLAGS) $(CXXFLAGS) -c -o libplugin_a-npwin.obj `if test -f 'support/npwin.cpp'; then $(CYGPATH_W) 'support/npwin.cpp'; else $(CYGPATH_W) '$(srcdir)/support/npwin.cpp'; fi`
uninstall-info-am:
noinst_npvlc_rcDATA_INSTALL = $(INSTALL_DATA)
install-noinst_npvlc_rcDATA: $(noinst_npvlc_rc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(noinst_npvlc_rcdir)
	@list='$(noinst_npvlc_rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(noinst_npvlc_rcDATA_INSTALL) $$d$$p $(DESTDIR)$(noinst_npvlc_rcdir)/$$f"; \
	  $(noinst_npvlc_rcDATA_INSTALL) $$d$$p $(DESTDIR)$(noinst_npvlc_rcdir)/$$f; \
	done

uninstall-noinst_npvlc_rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(noinst_npvlc_rc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(noinst_npvlc_rcdir)/$$f"; \
	  rm -f $(DESTDIR)$(noinst_npvlc_rcdir)/$$f; \
	done
pluginDATA_INSTALL = $(INSTALL_DATA)
install-pluginDATA: $(plugin_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(plugindir)
	@list='$(plugin_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pluginDATA_INSTALL) $$d$$p $(DESTDIR)$(plugindir)/$$f"; \
	  $(pluginDATA_INSTALL) $$d$$p $(DESTDIR)$(plugindir)/$$f; \
	done

uninstall-pluginDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(plugindir)/$$f"; \
	  rm -f $(DESTDIR)$(plugindir)/$$f; \
	done
vlcintf_xptDATA_INSTALL = $(INSTALL_DATA)
install-vlcintf_xptDATA: $(vlcintf_xpt_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(vlcintf_xptdir)
	@list='$(vlcintf_xpt_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(vlcintf_xptDATA_INSTALL) $$d$$p $(DESTDIR)$(vlcintf_xptdir)/$$f"; \
	  $(vlcintf_xptDATA_INSTALL) $$d$$p $(DESTDIR)$(vlcintf_xptdir)/$$f; \
	done

uninstall-vlcintf_xptDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(vlcintf_xpt_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(vlcintf_xptdir)/$$f"; \
	  rm -f $(DESTDIR)$(vlcintf_xptdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/support
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(DATA)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(noinst_npvlc_rcdir) $(DESTDIR)$(plugindir) $(DESTDIR)$(vlcintf_xptdir)
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-noinst_npvlc_rcDATA install-pluginDATA \
	install-vlcintf_xptDATA

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-noinst_npvlc_rcDATA \
	uninstall-pluginDATA uninstall-vlcintf_xptDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-noinst_npvlc_rcDATA install-pluginDATA \
	install-strip install-vlcintf_xptDATA installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-noinst_npvlc_rcDATA \
	uninstall-pluginDATA uninstall-vlcintf_xptDATA

#$(SOURCES_mozilla): vlcintf.h
#$(LIBRARIES_mozilla): $(libplugin_a_OBJECTS) \
#	              $(libplugin_a_DEPENDENCIES) stamp-pic
#	$(CXXLINK) $(libplugin_a_OBJECTS) $(DATA_npvlc_rc) \
#	  $(LIBRARIES_libvlc) -shared \
#	  `$(VLC_CONFIG) --libs vlc mozilla builtin $(pic)`
#vlcintf.xpt: vlcintf.idl
#	$(XPIDL) $(XPIDL_INCL) -I/usr/share/idl/mozilla \
#	  -I/usr/lib/mozilla/include/idl \
#	  -m typelib -o vlcintf $(srcdir)/vlcintf.idl

#vlcintf.h: vlcintf.idl
#	$(XPIDL) $(XPIDL_INCL) -I/usr/share/idl/mozilla \
#	  -I/usr/lib/mozilla/include/idl \
#	  -m header -o vlcintf $(srcdir)/vlcintf.idl
##npvlc_rc.$(OBJEXT): npvlc_rc.rc
##	$(WINDRES) -DVERSION=$(VERSION) -DVERSION_NUMBER=`echo $(VERSION).0.0.0 | sed 's/\([0-9]*\)[^.]*\.*\([0-9]*\)[^.]*\.*\([0-9]*\)[^.]*\.*\([0-9]*\).*/\1,\2,\3,\4/'` --include-dir $(srcdir) -i $< -o $@
##VLC\ Plugin.plugin:
##	rm -rf $(srcdir)/VLC\ Plugin.plugin
##	mkdir -p $(srcdir)/VLC\ Plugin.plugin/Contents/MacOS
##	mkdir -p $(srcdir)/VLC\ Plugin.plugin/Contents/Resources
##	/usr/bin/g++3 $(moz_plugin_FLAGS) $(srcdir)/vlcplugin.cpp -o $(srcdir)/libplugin_a-vlcplugin.o
##	/usr/bin/g++3 $(moz_plugin_FLAGS) $(srcdir)/vlcshell.cpp -o $(srcdir)/libplugin_a-vlcshell.o
##	/usr/bin/g++3 $(moz_plugin_FLAGS) $(srcdir)/vlcpeer.cpp -o $(srcdir)/libplugin_a-vlcpeer.o
##	/usr/bin/g++3 $(moz_plugin_FLAGS) $(srcdir)/support/npmac.cpp -o $(srcdir)/libplugin_a-npmac.o
##	/usr/bin/g++3 $(srcdir)/libplugin_a-vlcplugin.o $(srcdir)/libplugin_a-vlcshell.o $(srcdir)/libplugin_a-vlcpeer.o $(srcdir)/libplugin_a-npmac.o -o $(srcdir)/VLC\ Plugin.plugin/Contents/MacOS/VLC\ Plugin -L/usr/lib -F/System/Library/Frameworks/CoreFoundation.framework -framework CoreFoundation -arch ppc -bundle -read_only_relocs suppress $(LIBRARIES_libvlc) -dylib $(vlc_moz_FLAGS)
##	cp $(top_srcdir)/extras/MacOSX/plugin/Info.plist $(srcdir)/VLC\ Plugin.plugin/Contents/Info.plist
##	cp $(top_srcdir)/extras/MacOSX/plugin/pbdevelopment.plist $(srcdir)/VLC\ Plugin.plugin/Contents/pbdevelopment.plist
##	cp -r $(top_srcdir)/extras/MacOSX/plugin/English.lproj $(srcdir)/VLC\ Plugin.plugin/Contents/Resources/
##	Rez /Developer/Headers/FlatCarbon/Types.r $(srcdir)/vlc.r -o $(srcdir)/VLC\ Plugin.plugin/Contents/Resources/Vlc\ Plugin.rsrc
##	mkdir $(srcdir)/VLC\ Plugin.plugin/Contents/MacOS/modules
##	cp -r $(top_srcdir)/VLC.app/Contents/MacOS/modules/* $(srcdir)/VLC\ Plugin.plugin/Contents/MacOS/modules/

###############################################################################
# Stamp rules
###############################################################################
clean: clean-stamp clean-bundle
clean-stamp:
	rm -f stamp-pic

stamp-pic: FORCE
	@for dep in "" `$(VLC_CONFIG) --target builtin $(pic)`; do \
	  if test "$${dep}" -nt "$(LIBRARIES_mozilla)"; then \
	    rm -f $@; \
	    break; \
	  fi; \
	done
	@if test ! -f $@; then printf "" > $@; fi

clean-bundle:
	rm -rf $(srcdir)/VLC\ Plugin.plugin

###############################################################################
# Force rule
###############################################################################
FORCE:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
